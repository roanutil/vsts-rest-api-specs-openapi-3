openapi: 3.0.1
info:
  title: Security
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "4.1"
externalDocs:
  description: Team Foundation Server REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://https://fabrikam-fiber-inc:8080/DefaultCollection/
security:
- accessToken: []
tags:
- name: Access Control Entries
- name: Access Control Lists
- name: Permissions
- name: Security Namespaces
  description: |-
    Security namespaces are used to store [access control lists](https://www.visualstudio.com/docs/integrate/api/security/acls) (ACLs) on [tokens](https://www.visualstudio.com/docs/integrate/api/security/tokens) (arbitrary strings).

    Local vs. remote
     * Security namespaces may have their data mastered in one microservice, but still be visible in other microservices.
     * If a security namespace's data is mastered in microservice X, it is said to be local to that microservice. Otherwise, it is said to be remote.
paths:
  /{collection}/_apis/accesscontrolentries/{securityNamespaceId}:
    post:
      tags:
      - Access Control Entries
      description: Add or update ACEs in the ACL for the provided token. In the case
        of a collision (by identity descriptor) with an existing ACE in the ACL, the
        "merge" parameter determines the behavior. If set, the existing ACE has its
        allow and deny merged with the incoming ACE's allow and deny. If unset, the
        existing ACE is displaced.
      operationId: Set Access Control Entries
      parameters:
      - name: securityNamespaceId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JObject'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessControlEntry'
      security:
      - oauth2:
        - vso.security_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: accessControlEntries
      x-ms-vss-method: SetAccessControlEntries
      x-ms-examples:
        ?
        : $ref: ./httpExamples/AccessControlEntries/POST__accesscontrolentries__securityNamespaceId__-onprem.json
        Merge:
          $ref: ./httpExamples/AccessControlEntries/POST__accesscontrolentries__securityNamespaceId__merge-onprem.json
      x-codegen-request-body-name: body
    delete:
      tags:
      - Access Control Entries
      description: Remove the specified ACEs from the ACL belonging to the specified
        token.
      operationId: Remove Access Control Entries
      parameters:
      - name: securityNamespaceId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: token
        in: query
        schema:
          type: string
      - name: descriptors
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
      - oauth2:
        - vso.security_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: accessControlEntries
      x-ms-vss-method: RemoveAccessControlEntries
      x-ms-examples:
        ?
        : $ref: ./httpExamples/AccessControlEntries/DELETE__accesscontrolentries__securityNamespaceId___token-_token__descriptors-_descriptor1_,_descriptor2_-onprem.json
  /{collection}/_apis/accesscontrollists/{securityNamespaceId}:
    get:
      tags:
      - Access Control Lists
      description: Return a list of access control lists for the specified security
        namespace and token.
      operationId: Query
      parameters:
      - name: securityNamespaceId
        in: path
        description: Security namespace identifier.
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: token
        in: query
        description: Security token
        schema:
          type: string
      - name: descriptors
        in: query
        schema:
          type: string
      - name: includeExtendedInfo
        in: query
        description: If true, populate the extended information properties for the
          access control entries contained in the returned lists.
        schema:
          type: boolean
      - name: recurse
        in: query
        description: If true and this is a hierarchical namespace, return child ACLs
          of the specified token.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessControlList'
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: accessControlLists
      x-ms-vss-method: QueryAccessControlLists
      x-ms-examples:
        ?
        : $ref: ./httpExamples/AccessControlLists/GET__accesscontrollists__securityNamespaceId__-onprem.json
    post:
      tags:
      - Access Control Lists
      description: Create one or more access control lists.
      operationId: Set Access Control Lists
      parameters:
      - name: securityNamespaceId
        in: path
        description: Security namespace identifier.
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VssJsonCollectionWrapper'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.security_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: accessControlLists
      x-ms-vss-method: SetAccessControlLists
      x-codegen-request-body-name: body
    delete:
      tags:
      - Access Control Lists
      description: Remove access control lists under the specfied security namespace.
      operationId: Remove Access Control Lists
      parameters:
      - name: securityNamespaceId
        in: path
        description: Security namespace identifier.
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: tokens
        in: query
        description: One or more comma-separated security tokens
        schema:
          type: string
      - name: recurse
        in: query
        description: If true and this is a hierarchical namespace, also remove child
          ACLs of the specified tokens.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
      - oauth2:
        - vso.security_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: accessControlLists
      x-ms-vss-method: RemoveAccessControlLists
  /{collection}/_apis/permissions/{securityNamespaceId}/{permissions}:
    get:
      tags:
      - Permissions
      description: Evaluates whether the caller has the specified permissions on the
        specified set of security tokens.
      operationId: Has Permissions
      parameters:
      - name: securityNamespaceId
        in: path
        description: Security namespace identifier.
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: permissions
        in: path
        description: Permissions to evaluate.
        required: true
        schema:
          type: integer
          format: int32
          x-ms-required: false
        x-ms-required: false
      - name: tokens
        in: query
        description: One or more security tokens to evaluate.
        schema:
          type: string
      - name: alwaysAllowAdministrators
        in: query
        description: If true and if the caller is an administrator, always return
          true.
        schema:
          type: boolean
      - name: delimiter
        in: query
        description: Optional security token separator. Defaults to ",".
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: boolean
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: permissions
      x-ms-vss-method: HasPermissions
    delete:
      tags:
      - Permissions
      description: Removes the specified permissions from the caller or specified
        user or group.
      operationId: Remove Permission
      parameters:
      - name: securityNamespaceId
        in: path
        description: Security namespace identifier.
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: permissions
        in: path
        description: Permissions to remove.
        required: true
        schema:
          type: integer
          format: int32
          x-ms-required: false
        x-ms-required: false
      - name: token
        in: query
        description: Security token to remove permissions for.
        schema:
          type: string
      - name: descriptor
        in: query
        description: Identity descriptor of the user to remove permissions for. Defaults
          to the caller.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControlEntry'
      security:
      - oauth2:
        - vso.security_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: permissions
      x-ms-vss-method: RemovePermission
  /{collection}/_apis/security/permissionevaluationbatch:
    post:
      tags:
      - Permissions
      description: 'Evaluates multiple permissions for the calling user.  Note: This
        method does not aggregate the results, nor does it short-circuit if one of
        the permissions evaluates to false.'
      operationId: Has Permissions Batch
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The set of evaluation requests.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionEvaluationBatch'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionEvaluationBatch'
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: permissionEvaluationBatch
      x-ms-vss-method: HasPermissionsBatch
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PermissionEvaluationBatch/POST__security_permissionevaluationbatch__api-version-3.0-preview-onprem.json
      x-codegen-request-body-name: body
  /{collection}/_apis/securitynamespaces/{securityNamespaceId}:
    get:
      tags:
      - Security Namespaces
      operationId: Query
      parameters:
      - name: securityNamespaceId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: localOnly
        in: query
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityNamespaceDescription'
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: securityNamespaces
      x-ms-vss-method: QuerySecurityNamespaces
      x-ms-examples:
        ?
        : $ref: ./httpExamples/SecurityNamespaces/GET__securitynamespaces_-onprem.json
components:
  schemas:
    AccessControlEntry:
      type: object
      properties:
        allow:
          type: integer
          description: The set of permission bits that represent the actions that
            the associated descriptor is allowed to perform.
          format: int32
        deny:
          type: integer
          description: The set of permission bits that represent the actions that
            the associated descriptor is not allowed to perform.
          format: int32
        descriptor:
          $ref: '#/components/schemas/IdentityDescriptor'
        extendedInfo:
          $ref: '#/components/schemas/AceExtendedInformation'
      description: Class for encapsulating the allowed and denied permissions for
        a given IdentityDescriptor.
    AccessControlList:
      type: object
      properties:
        acesDictionary:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessControlEntry'
          description: Storage of permissions keyed on the identity the permission
            is for.
        includeExtendedInfo:
          type: boolean
          description: True if this ACL holds ACEs that have extended information.
        inheritPermissions:
          type: boolean
          description: True if the given token inherits permissions from parents.
        token:
          type: string
          description: The token that this AccessControlList is for.
      description: The AccessControlList class is meant to associate a set of AccessControlEntries
        with a security token and its inheritance settings.
    AccessControlListsCollection:
      description: ""
      allOf:
      - type: array
        items:
          $ref: '#/components/schemas/AccessControlList'
    AceExtendedInformation:
      type: object
      properties:
        effectiveAllow:
          type: integer
          description: This is the combination of all of the explicit and inherited
            permissions for this identity on this token.  These are the permissions
            used when determining if a given user has permission to perform an action.
          format: int32
        effectiveDeny:
          type: integer
          description: This is the combination of all of the explicit and inherited
            permissions for this identity on this token.  These are the permissions
            used when determining if a given user has permission to perform an action.
          format: int32
        inheritedAllow:
          type: integer
          description: These are the permissions that are inherited for this identity
            on this token.  If the token does not inherit permissions this will be
            0.  Note that any permissions that have been explicitly set on this token
            for this identity, or any groups that this identity is a part of, are
            not included here.
          format: int32
        inheritedDeny:
          type: integer
          description: These are the permissions that are inherited for this identity
            on this token.  If the token does not inherit permissions this will be
            0.  Note that any permissions that have been explicitly set on this token
            for this identity, or any groups that this identity is a part of, are
            not included here.
          format: int32
      description: Holds the inherited and effective permission information for a
        given AccessControlEntry.
    ActionDefinition:
      type: object
      properties:
        bit:
          type: integer
          description: The bit mask integer for this action. Must be a power of 2.
          format: int32
        displayName:
          type: string
          description: The localized display name for this action.
        name:
          type: string
          description: The non-localized name for this action.
        namespaceId:
          type: string
          description: The namespace that this action belongs to.  This will only
            be used for reading from the database.
          format: uuid
      description: ""
    IdentityDescriptor:
      type: object
      properties:
        identifier:
          type: string
          description: The unique identifier for this identity, not exceeding 256
            chars, which will be persisted.
        identityType:
          type: string
          description: Type of descriptor (for example, Windows, Passport, etc.).
      description: An Identity descriptor is a wrapper for the identity type (Windows
        SID, Passport) along with a unique identifier such as the SID or PUID.
    JObject:
      type: object
      properties:
        item:
          type: string
          format: JToken
        type:
          type: string
          format: JTokenType
      description: ""
    PermissionEvaluation:
      type: object
      properties:
        permissions:
          type: integer
          description: Permission bit for this evaluated permission.
          format: int32
        securityNamespaceId:
          type: string
          description: Security namespace identifier for this evaluated permission.
          format: uuid
        token:
          type: string
          description: Security namespace-specific token for this evaluated permission.
        value:
          type: boolean
          description: Permission evaluation value.
      description: Represents an evaluated permission.
    PermissionEvaluationBatch:
      type: object
      properties:
        alwaysAllowAdministrators:
          type: boolean
        evaluations:
          type: array
          description: Array of permission evaluations to evaluate.
          items:
            $ref: '#/components/schemas/PermissionEvaluation'
      description: Represents a set of evaluated permissions.
    SecurityNamespaceDescription:
      type: object
      properties:
        actions:
          type: array
          description: The list of actions that this Security Namespace is responsible
            for securing.
          items:
            $ref: '#/components/schemas/ActionDefinition'
        dataspaceCategory:
          type: string
          description: This is the dataspace category that describes where the security
            information for this SecurityNamespace should be stored.
        displayName:
          type: string
          description: This localized name for this namespace.
        elementLength:
          type: integer
          description: If the security tokens this namespace will be operating on
            need to be split on certain character lengths to determine its elements,
            that length should be specified here. If not, this value will be -1.
          format: int32
        extensionType:
          type: string
          description: This is the type of the extension that should be loaded from
            the plugins directory for extending this security namespace.
        isRemotable:
          type: boolean
          description: If true, the security namespace is remotable, allowing another
            service to proxy the namespace.
        name:
          type: string
          description: This non-localized for this namespace.
        namespaceId:
          type: string
          description: The unique identifier for this namespace.
          format: uuid
        readPermission:
          type: integer
          description: The permission bits needed by a user in order to read security
            data on the Security Namespace.
          format: int32
        separatorValue:
          type: string
          description: If the security tokens this namespace will be operating on
            need to be split on certain characters to determine its elements that
            character should be specified here. If not, this value will be the null
            character.
          format: Char
        structureValue:
          type: integer
          description: Used to send information about the structure of the security
            namespace over the web service.
          format: int32
        systemBitMask:
          type: integer
          description: The bits reserved by system store
          format: int32
        useTokenTranslator:
          type: boolean
          description: If true, the security service will expect an ISecurityDataspaceTokenTranslator
            plugin to exist for this namespace
        writePermission:
          type: integer
          description: The permission bits needed by a user in order to modify security
            data on the Security Namespace.
          format: int32
      description: Class for describing the details of a TeamFoundationSecurityNamespace.
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1' to use
        this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.security_manage: Grants the ability to read, write, and manage security
              permissions.
x-ms-parameterized-host:
  hostTemplate: '{instance}'
  parameters:
  - name: instance
    description: TFS server name ({server:port})
    required: true
    type: string
    in: path
x-ms-vss-area: Security
