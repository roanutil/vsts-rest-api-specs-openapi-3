openapi: 3.0.1
info:
  title: Test
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: 6.1-preview
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://dev.azure.com/
security:
- accessToken: []
tags:
- name: Attachments
  description: Work with test attachments programmatically using the REST APIs for
    Azure DevOps Services and Azure DevOps Server.
- name: Code Coverage
  description: Work with code coverage programmatically using the REST APIs for Azure
    DevOps Services and Azure DevOps Server.
- name: Iterations
  description: API to work work with Manual testing test result iterations.
- name: Points
  description: Work with test points programmatically using the REST APIs for Azure
    DevOps Services and Azure DevOps Server.
- name: Result Retention Settings
  description: Work with test result retention settings programmatically using the
    REST APIs for Azure DevOps Services and Azure DevOps Server.
- name: Results
- name: Runs
- name: Session
  description: Test Sessions
- name: Test  Suites
  description: Test suites help in organizing test cases in a test plan. A test suite
    can contain child test suites, helping you build a folder structure under a test
    plan or it can contain test cases. Leaf test suites typically contain test cases,
    where are intermediate suites represent a folder hierarchy. Intermediate suites
    can on Static type, whereas leaf suites can be of static suites, requirement based
    suites or query based suites.
- name: Test Cases
  description: Controller to handle TestCase REST calls
- name: Test History
paths:
  /{organization}/{project}/_apis/test/codecoverage:
    get:
      tags:
      - Code Coverage
      description: Get code coverage data for a build.
      operationId: Code Coverage_Get Build Code Coverage
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: query
        description: ID of the build for which code coverage data needs to be fetched.
        required: true
        schema:
          type: integer
          format: int32
      - name: flags
        in: query
        description: Value of flags determine the level of code coverage details to
          be fetched. Flags are additive. Expected Values are 1 for Modules, 2 for
          Functions, 4 for BlockData.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildCoverage'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: codeCoverage
      x-ms-vss-method: GetBuildCodeCoverage
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/CodeCoverage/GET__test_codeCoverage_buildId-_buildIdParam__flags-7.json
  /{organization}/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points:
    get:
      tags:
      - Points
      description: Get a list of test points.
      operationId: Points_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the suite that contains the points.
        required: true
        schema:
          type: integer
          format: int32
      - name: witFields
        in: query
        description: Comma-separated list of work item field names.
        schema:
          type: string
      - name: configurationId
        in: query
        description: Get test points for specific configuration.
        schema:
          type: string
      - name: testCaseId
        in: query
        description: Get test points for a specific test case, valid when configurationId
          is not set.
        schema:
          type: string
      - name: testPointIds
        in: query
        description: Get test points for comma-separated list of test point IDs, valid
          only when configurationId and testCaseId are not set.
        schema:
          type: string
      - name: includePointDetails
        in: query
        description: Include all properties for the test point.
        schema:
          type: boolean
      - name: $skip
        in: query
        description: Number of test points to skip..
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: Number of test points to return.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestPoint'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.2
      x-ms-vss-resource: points
      x-ms-vss-method: GetPoints
      x-ms-preview: true
      x-ms-examples:
        With fields:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_witFields-_fields_.json
        By configuration:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_configuration-_configuration_.json
        By test case:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_testcaseid-_testcaseId_.json
        Specific points:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_testPointIds-_testpointIds_.json
        With details:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points_includePointDetails-true.json
        A page at a time:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points__skip-_skip___top-_top_.json
  /{organization}/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points/{pointIds}:
    get:
      tags:
      - Points
      description: Get a test point.
      operationId: Points_Get Point
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the suite that contains the point.
        required: true
        schema:
          type: integer
          format: int32
      - name: pointIds
        in: path
        description: ID of the test point to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: witFields
        in: query
        description: Comma-separated list of work item field names.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPoint'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.2
      x-ms-vss-resource: points
      x-ms-vss-method: GetPoint
      x-ms-preview: true
      x-ms-examples:
        By id:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points__pointId_.json
        With fields:
          $ref: ./httpExamples/Points/GET__test__projectName__plans__planId__suites__suiteId__points__pointId__witFields-_fields_.json
    patch:
      tags:
      - Points
      description: Update test points.
      operationId: Points_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the suite that contains the points.
        required: true
        schema:
          type: integer
          format: int32
      - name: pointIds
        in: path
        description: ID of the test point to get. Use a comma-separated list of IDs
          to update multiple test points.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Data to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointUpdateModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestPoint'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.2
      x-ms-vss-resource: points
      x-ms-vss-method: UpdateTestPoints
      x-ms-preview: true
      x-ms-examples:
        Re-activate:
          $ref: ./httpExamples/Points/PATCH__test__projectName__plans__planId__suites__suiteId__points__pointId_.json
        Set the outcome:
          $ref: ./httpExamples/Points/PATCH__test__projectName__plans__planId__suites__suiteId__points__pointId_2.json
        Change the tester:
          $ref: ./httpExamples/Points/PATCH__test__projectName__plans__planId__suites__suiteId__points__pointId_23.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases:
    get:
      tags:
      - Test  Suites
      description: Get all test cases in a suite.
      operationId: Test  Suites_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan that contains the suites.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the suite to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuiteTestCase'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: suites
      x-ms-vss-method: GetTestCases
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Suites/testcases.json
  /{organization}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases/{testCaseIds}:
    get:
      tags:
      - Test  Suites
      description: Get a specific test case in a test suite with test case id.
      operationId: Test  Suites_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan that contains the suites.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the suite that contains the test case.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseIds
        in: path
        description: ID of the test case to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuiteTestCase'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: suites
      x-ms-vss-method: GetTestCaseById
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Suites/GET_testmanagement_testsuite_testcase_id.json
    post:
      tags:
      - Test  Suites
      description: Add test cases to suite.
      operationId: Test  Suites_Add
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan that contains the suite.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the test suite to which the test cases must be added.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseIds
        in: path
        description: IDs of the test cases to add to the suite. Ids are specified
          in comma separated format.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuiteTestCase'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: suites
      x-ms-vss-method: AddTestCasesToSuite
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Suites/POST_testmanagement_testsuite_testcase_ids.json
    delete:
      tags:
      - Test  Suites
      description: The test points associated with the test cases are removed from
        the test suite. The test case work item is not deleted from the system. See
        test cases resource to delete a test case permanently.
      operationId: Test  Suites_Remove Test Cases From Suite Url
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan that contains the suite.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the suite to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseIds
        in: path
        description: IDs of the test cases to remove from the suite.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: suites
      x-ms-vss-method: RemoveTestCasesFromSuiteUrl
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Suites/DELETE_testmanagement_testsuite_testcase_ids.json
    patch:
      tags:
      - Test  Suites
      description: Updates the properties of the test case association in a suite.
      operationId: Test  Suites_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the test plan that contains the suite.
        required: true
        schema:
          type: integer
          format: int32
      - name: suiteId
        in: path
        description: ID of the test suite to which the test cases must be added.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseIds
        in: path
        description: IDs of the test cases to add to the suite. Ids are specified
          in comma separated format.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Model for updation of the properties of test case suite association.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuiteTestCaseUpdateModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuiteTestCase'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: suites
      x-ms-vss-method: UpdateSuiteTestCases
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Suites/PATCH_testmanagement_testsuite_testcase_ids.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/points:
    post:
      tags:
      - Points
      description: Get test points using query.
      operationId: Points_Get Points By Query
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: $skip
        in: query
        description: Number of test points to skip..
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: Number of test points to return.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: TestPointsQuery to get test points.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPointsQuery'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPointsQuery'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.2
      x-ms-vss-resource: points
      x-ms-vss-method: GetPointsByQuery
      x-ms-preview: true
      x-ms-examples:
        By test case id:
          $ref: ./httpExamples/Points/POST__test__projectName__points_.json
        With Configuration filter:
          $ref: ./httpExamples/Points/POST__test__projectName__points__configuration_.json
        With tester filter:
          $ref: ./httpExamples/Points/POST__test__projectName__points__tester_.json
        fetch a page using skip , top:
          $ref: ./httpExamples/Points/POST__test__projectName__points__page_.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/resultretentionsettings:
    get:
      tags:
      - Result Retention Settings
      description: Get test result retention settings
      operationId: Result Retention Settings_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultRetentionSettings'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: resultRetentionSettings
      x-ms-vss-method: GetResultRetentionSettings
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/ResultRetentionSettings/GET__test_resultretentionsettings.json
    patch:
      tags:
      - Result Retention Settings
      description: Update test result retention settings
      operationId: Result Retention Settings_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Test result retention settings details to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultRetentionSettings'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultRetentionSettings'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: resultRetentionSettings
      x-ms-vss-method: UpdateResultRetentionSettings
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/ResultRetentionSettings/PATCH__test_resultretentionsettings.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/Results/testhistory:
    post:
      tags:
      - Test History
      description: Get history of a test method using TestHistoryQuery
      operationId: Test History_Query
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: TestHistoryQuery to get history
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestHistoryQuery'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestHistoryQuery'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.2
      x-ms-vss-resource: testHistory
      x-ms-vss-method: QueryTestHistory
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/runs:
    get:
      tags:
      - Runs
      description: Get a list of test runs.
      operationId: Runs_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildUri
        in: query
        description: URI of the build that the runs used.
        schema:
          type: string
      - name: owner
        in: query
        description: Team foundation ID of the owner of the runs.
        schema:
          type: string
      - name: tmiRunId
        in: query
        schema:
          type: string
      - name: planId
        in: query
        description: ID of the test plan that the runs are a part of.
        schema:
          type: integer
          format: int32
      - name: includeRunDetails
        in: query
        description: If true, include all the properties of the runs.
        schema:
          type: boolean
      - name: automated
        in: query
        description: If true, only returns automated runs.
        schema:
          type: boolean
      - name: $skip
        in: query
        description: Number of test runs to skip.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: Number of test runs to return.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestRun'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: runs
      x-ms-vss-method: GetTestRuns
      x-ms-preview: true
      x-ms-examples:
        General example:
          $ref: ./httpExamples/Runs/GET__test__projectName__runs.json
        Get top 3 test runs:
          $ref: ./httpExamples/Runs/GET__test__projectName__runs_top-3.json
        Get runs with details:
          $ref: ./httpExamples/Runs/GET__test__projectName__runs_includeRunDetails-true.json
    post:
      tags:
      - Runs
      description: Create new test run.
      operationId: Runs_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Run details RunCreateModel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunCreateModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: runs
      x-ms-vss-method: CreateTestRun
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Runs/POST__test__projectName__runs.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/runs/{runId}:
    get:
      tags:
      - Runs
      description: Get a test run by its ID.
      operationId: Runs_Get Test Run By Id
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the run to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: includeDetails
        in: query
        description: Default value is true. It includes details like run statistics,
          release, build, test environment, post process state, and more.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: runs
      x-ms-vss-method: GetTestRunById
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Runs/GET_test_run_id.json
    delete:
      tags:
      - Runs
      description: Delete a test run by its ID.
      operationId: Runs_Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the run to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: runs
      x-ms-vss-method: DeleteTestRun
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Runs/DELETE_test_runs_id.json
    patch:
      tags:
      - Runs
      description: Update test run by its ID.
      operationId: Runs_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the run to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Run details RunUpdateModel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunUpdateModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRun'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: runs
      x-ms-vss-method: UpdateTestRun
      x-ms-preview: true
      x-ms-examples:
        General example:
          $ref: ./httpExamples/Runs/PATCH__test__projectName__runs__runId_.json
        Updating run comment:
          $ref: ./httpExamples/Runs/PATCH__test__projectName__runs__comment.json
        Updating due date:
          $ref: ./httpExamples/Runs/PATCH__test__projectName__runs__duedate.json
        Updating started date:
          $ref: ./httpExamples/Runs/PATCH__test__projectName__runs__startedDate.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/Runs/{runId}/attachments:
    get:
      tags:
      - Attachments
      description: Get list of test run attachments reference.
      operationId: Attachments_Get Test Run Attachments
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestAttachment'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTestRunAttachments
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Attachments/GET__test_runs__newRunId__attachments.json
    post:
      tags:
      - Attachments
      description: Attach a file to a test run.
      operationId: Attachments_Create Test Run Attachment
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run against which attachment has to be uploaded.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Attachment details TestAttachmentRequestModel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestAttachmentRequestModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestAttachmentReference'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: CreateTestRunAttachment
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Attachments/POST__test_runs__newRunId__attachments.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/Runs/{runId}/attachments/{attachmentId}:
    get:
      tags:
      - Attachments
      description: Download a test run attachment by its ID.
      operationId: Attachments_Get Test Run Attachment Zip
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run whose attachment has to be downloaded.
        required: true
        schema:
          type: integer
          format: int32
      - name: attachmentId
        in: path
        description: ID of the test run attachment to be downloaded.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: Stream
            application/zip:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTestRunAttachment
      x-ms-preview: true
  /{organization}/{project}/_apis/test/Runs/{runId}/codecoverage:
    get:
      tags:
      - Code Coverage
      description: Get code coverage data for a test run
      operationId: Code Coverage_Get Test Run Code Coverage
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run for which code coverage data needs to be fetched.
        required: true
        schema:
          type: integer
          format: int32
      - name: flags
        in: query
        description: Value of flags determine the level of code coverage details to
          be fetched. Flags are additive. Expected Values are 1 for Modules, 2 for
          Functions, 4 for BlockData.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestRunCoverage'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: codeCoverage
      x-ms-vss-method: GetTestRunCodeCoverage
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/CodeCoverage/GET__test_runs__runId__codeCoverage_flags-7.json
  /{organization}/{project}/_apis/test/Runs/{runId}/results:
    get:
      tags:
      - Results
      description: Get test results for a test run.
      operationId: Results_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Test run ID of test results to fetch.
        required: true
        schema:
          type: integer
          format: int32
      - name: detailsToInclude
        in: query
        description: Details to include with test results. Default is None. Other
          values are Iterations and WorkItems.
        schema:
          type: string
          enum:
          - none
          - iterations
          - workItems
          - subResults
          - point
          x-ms-enum:
            name: ResultDetails
            values:
            - value: none
              description: Core fields of test result. Core fields includes State,
                Outcome, Priority, AutomatedTestName, AutomatedTestStorage, Comments,
                ErrorMessage etc.
            - value: iterations
              description: Test iteration details in a test result.
            - value: workItems
              description: Workitems associated with a test result.
            - value: subResults
              description: Subresults in a test result.
            - value: point
              description: Point and plan detail in a test result.
        x-ms-enum:
          name: ResultDetails
          values:
          - value: none
            description: Core fields of test result. Core fields includes State, Outcome,
              Priority, AutomatedTestName, AutomatedTestStorage, Comments, ErrorMessage
              etc.
          - value: iterations
            description: Test iteration details in a test result.
          - value: workItems
            description: Workitems associated with a test result.
          - value: subResults
            description: Subresults in a test result.
          - value: point
            description: Point and plan detail in a test result.
      - name: $skip
        in: query
        description: Number of test results to skip from beginning.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: Number of test results to return. Maximum is 1000 when detailsToInclude
          is None and 200 otherwise.
        schema:
          type: integer
          format: int32
      - name: outcomes
        in: query
        description: Comma separated list of test outcomes to filter test results.
        schema:
          type: string
          format: array (TestOutcome)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCaseResult'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.6
      x-ms-vss-resource: results
      x-ms-vss-method: GetTestResults
      x-ms-preview: true
      x-ms-examples:
        Get a list of test results:
          $ref: ./httpExamples/Results/GET__test_runs__runId__results_3_0.json
        With workitem details:
          $ref: ./httpExamples/Results/GET__test_runs__runId__results_detailsToInclude-WorkItems__top-100_3_0.json
        With test iterations and workitem details:
          $ref: ./httpExamples/Results/GET__test_runs_31_results__top-100_detailsToInclude-WorkItems,Iterations.json
    post:
      tags:
      - Results
      description: Add test results to a test run.
      operationId: Results_Add
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Test run ID into which test results to add.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: List of test results to add.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TestCaseResult'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCaseResult'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.6
      x-ms-vss-resource: results
      x-ms-vss-method: AddTestResultsToTestRun
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Results/POST__test_runs__newRunId__results_3_0.json
      x-codegen-request-body-name: body
    patch:
      tags:
      - Results
      description: Update test results in a test run.
      operationId: Results_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Test run ID whose test results to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: List of test results to update.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TestCaseResult'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCaseResult'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.6
      x-ms-vss-resource: results
      x-ms-vss-method: UpdateTestResults
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Results/PATCH__test_runs__newRunId__results_3_0.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/Runs/{runId}/results/{testCaseResultId}:
    get:
      tags:
      - Results
      description: Get a test result for a test run.
      operationId: Results_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Test run ID of a test result to fetch.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseResultId
        in: path
        description: Test result ID.
        required: true
        schema:
          type: integer
          format: int32
      - name: detailsToInclude
        in: query
        description: Details to include with test results. Default is None. Other
          values are Iterations, WorkItems and SubResults.
        schema:
          type: string
          enum:
          - none
          - iterations
          - workItems
          - subResults
          - point
          x-ms-enum:
            name: ResultDetails
            values:
            - value: none
              description: Core fields of test result. Core fields includes State,
                Outcome, Priority, AutomatedTestName, AutomatedTestStorage, Comments,
                ErrorMessage etc.
            - value: iterations
              description: Test iteration details in a test result.
            - value: workItems
              description: Workitems associated with a test result.
            - value: subResults
              description: Subresults in a test result.
            - value: point
              description: Point and plan detail in a test result.
        x-ms-enum:
          name: ResultDetails
          values:
          - value: none
            description: Core fields of test result. Core fields includes State, Outcome,
              Priority, AutomatedTestName, AutomatedTestStorage, Comments, ErrorMessage
              etc.
          - value: iterations
            description: Test iteration details in a test result.
          - value: workItems
            description: Workitems associated with a test result.
          - value: subResults
            description: Subresults in a test result.
          - value: point
            description: Point and plan detail in a test result.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseResult'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.6
      x-ms-vss-resource: results
      x-ms-vss-method: GetTestResultById
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Results/GET__test_runs__runId__results_100000_3_0.json
  /{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments:
    get:
      tags:
      - Attachments
      description: Get list of test result attachments reference.
      operationId: Attachments_Get Test Result Attachments
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run that contains the result.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseResultId
        in: path
        description: ID of the test result.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestAttachment'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTestResultAttachments
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Attachments/GET__test_runs__newRunId__results__result1__attachments.json
    post:
      tags:
      - Attachments
      description: Attach a file to a test result.
      operationId: Attachments_Create Test Result Attachment
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run that contains the result.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseResultId
        in: path
        description: ID of the test result against which attachment has to be uploaded.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Attachment details TestAttachmentRequestModel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestAttachmentRequestModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestAttachmentReference'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: CreateTestResultAttachment
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Attachments/POST__test_runs__newRunId__results__result1__attachments.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments/{attachmentId}:
    get:
      tags:
      - Attachments
      description: Download a test result attachment by its ID.
      operationId: Attachments_Get Test Result Attachment Zip
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run that contains the testCaseResultId.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseResultId
        in: path
        description: ID of the test result whose attachment has to be downloaded.
        required: true
        schema:
          type: integer
          format: int32
      - name: attachmentId
        in: path
        description: ID of the test result attachment to be downloaded.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: Stream
            application/zip:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTestResultAttachment
      x-ms-preview: true
  /{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations:
    get:
      tags:
      - Iterations
      description: Get iterations for a result
      operationId: Iterations_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run that contains the result.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseResultId
        in: path
        description: ID of the test result that contains the iterations.
        required: true
        schema:
          type: integer
          format: int32
      - name: includeActionResults
        in: query
        description: Include result details for each action performed in the test
          iteration. ActionResults refer to outcome (pass/fail) of test steps that
          are executed as part of a running a manual test. Including the ActionResults
          flag gets the outcome of test steps in the actionResults section and test
          parameters in the parameters section for each test iteration.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestIterationDetailsModel'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: iterations
      x-ms-vss-method: GetTestIterations
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Iterations/GET_testmanagement_iterationresults.json
  /{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations/{iterationId}:
    get:
      tags:
      - Iterations
      description: Get iteration for a result
      operationId: Iterations_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the test run that contains the result.
        required: true
        schema:
          type: integer
          format: int32
      - name: testCaseResultId
        in: path
        description: ID of the test result that contains the iterations.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: Id of the test results Iteration.
        required: true
        schema:
          type: integer
          format: int32
      - name: includeActionResults
        in: query
        description: Include result details for each action performed in the test
          iteration. ActionResults refer to outcome (pass/fail) of test steps that
          are executed as part of a running a manual test. Including the ActionResults
          flag gets the outcome of test steps in the actionResults section and test
          parameters in the parameters section for each test iteration.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIterationDetailsModel'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: iterations
      x-ms-vss-method: GetTestIteration
      x-ms-preview: true
      x-ms-examples:
        Get test Iteration with id:
          $ref: ./httpExamples/Iterations/GET__test__projectName__runs__runId__results_100000_iterations_1.json
        Get test Iteration With Action Result:
          $ref: ./httpExamples/Iterations/GET__test__projectName__runs__runId__results_100000_iterations_1_includeActionResults-true.json
  /{organization}/{project}/_apis/test/runs/{runId}/Statistics:
    get:
      tags:
      - Runs
      description: Get test run statistics , used when we want to get summary of a
        run by outcome.
      operationId: Runs_Get Test Run Statistics
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: ID of the run to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRunStatistic'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: runs
      x-ms-vss-method: GetTestRunStatistics
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Runs/GET_run_statistics.json
  /{organization}/{project}/_apis/test/testcases/{testCaseId}:
    delete:
      tags:
      - Test Cases
      description: Delete a test case.
      operationId: Test Cases_Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: testCaseId
        in: path
        description: Id of test case to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: testCases
      x-ms-vss-method: DeleteTestCase
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/TestCases/DELETE__test_testcase_5.json
  /{organization}/{project}/{team}/_apis/test/session:
    get:
      tags:
      - Session
      description: Get a list of test sessions
      operationId: Session_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: team
        in: path
        description: Team ID or team name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: period
        in: query
        description: Period in days from now, for which test sessions are fetched.
        schema:
          type: integer
          format: int32
      - name: allSessions
        in: query
        description: If false, returns test sessions for current user. Otherwise,
          it returns test sessions for all users
        schema:
          type: boolean
      - name: includeAllProperties
        in: query
        description: If true, it returns all properties of the test sessions. Otherwise,
          it returns the skinny version.
        schema:
          type: boolean
      - name: source
        in: query
        description: Source of the test session.
        schema:
          type: string
          enum:
          - unknown
          - xtDesktop
          - feedbackDesktop
          - xtWeb
          - feedbackWeb
          - xtDesktop2
          - sessionInsightsForAll
          x-ms-enum:
            name: TestSessionSource
            values:
            - value: unknown
              description: Source of test session uncertain as it is stale
            - value: xtDesktop
              description: The session was created from Microsoft Test Manager exploratory
                desktop tool.
            - value: feedbackDesktop
              description: The session was created from feedback client.
            - value: xtWeb
              description: The session was created from browser extension.
            - value: feedbackWeb
              description: The session was created from browser extension.
            - value: xtDesktop2
              description: The session was created from web access using Microsoft
                Test Manager exploratory desktop tool.
            - value: sessionInsightsForAll
              description: To show sessions from all supported sources.
        x-ms-enum:
          name: TestSessionSource
          values:
          - value: unknown
            description: Source of test session uncertain as it is stale
          - value: xtDesktop
            description: The session was created from Microsoft Test Manager exploratory
              desktop tool.
          - value: feedbackDesktop
            description: The session was created from feedback client.
          - value: xtWeb
            description: The session was created from browser extension.
          - value: feedbackWeb
            description: The session was created from browser extension.
          - value: xtDesktop2
            description: The session was created from web access using Microsoft Test
              Manager exploratory desktop tool.
          - value: sessionInsightsForAll
            description: To show sessions from all supported sources.
      - name: includeOnlyCompletedSessions
        in: query
        description: If true, it returns test sessions in completed state. Otherwise,
          it returns test sessions for all states
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestSession'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: session
      x-ms-vss-method: GetTestSessions
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Session/GET__test_session.json
    post:
      tags:
      - Session
      description: Create a test session
      operationId: Session_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: team
        in: path
        description: Team ID or team name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Test session details for creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSession'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSession'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: session
      x-ms-vss-method: CreateTestSession
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Session/POST__test_session.json
      x-codegen-request-body-name: body
    patch:
      tags:
      - Session
      description: Update a test session
      operationId: Session_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: team
        in: path
        description: Team ID or team name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '6.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Test session details for update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSession'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSession'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: session
      x-ms-vss-method: UpdateTestSession
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Session/PATCH__test_session.json
      x-codegen-request-body-name: body
components:
  schemas:
    AbortTestRunRequest:
      type: object
      properties:
        options:
          type: integer
          format: int32
        projectName:
          type: string
        revision:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    AfnStrip:
      type: object
      properties:
        auxiliaryUrl:
          type: string
          description: Auxiliary Url to be consumed by MTM
        creationDate:
          type: string
          description: Creation date of the AfnStrip
          format: date-time
        fileName:
          type: string
          description: File name of the attachment created
        id:
          type: integer
          description: ID of AfnStrip. This is same as the attachment ID.
          format: int32
        project:
          type: string
          description: Project identifier which contains AfnStrip
        storedIn:
          type: string
          description: Service in which this attachment is stored in
        stream:
          type: string
          description: Afn strip stream.
        testCaseId:
          type: integer
          description: ID of the testcase.
          format: int32
        testResultId:
          type: integer
          description: Backing test result id.
          format: int32
        testRunId:
          type: integer
          description: Backing test run id.
          format: int32
        unCompressedStreamLength:
          type: integer
          description: Byte stream (uncompressed) length of Afn strip.
          format: int64
        url:
          type: string
          description: Url of the attachment created.
      description: ""
    AggregatedDataForResultTrend:
      type: object
      properties:
        duration:
          type: string
          description: This is tests execution duration.
          format: TimeSpan
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        runSummaryByState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByState'
        testResultsContext:
          $ref: '#/components/schemas/TestResultsContext'
        totalTests:
          type: integer
          format: int32
      description: ""
    AggregatedResultDetailsByOutcome:
      type: object
      properties:
        count:
          type: integer
          description: Number of results for current outcome.
          format: int32
        duration:
          type: string
          description: Time taken by results.
          format: TimeSpan
        outcome:
          type: string
          description: Test result outcome
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: Test has not been completed, or the test type does not
                report pass/failure.
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: Test was executed, but there were issues. Issues may involve
                exceptions or failed assertions.
            - value: inconclusive
              description: Test has completed, but we can't say if it passed or failed.
                May be used for aborted tests...
            - value: timeout
              description: The test timed out
            - value: aborted
              description: Test was aborted. This was not caused by a user gesture,
                but rather by a framework decision.
            - value: blocked
              description: Test had it chance for been executed but was not, as ITestElement.IsRunnable
                == false.
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
        rerunResultCount:
          type: integer
          description: Number of results on rerun
          format: int32
      description: Result deatils for a particular test result outcome.
    AggregatedResultsAnalysis:
      type: object
      properties:
        duration:
          type: string
          format: TimeSpan
        notReportedResultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        previousContext:
          $ref: '#/components/schemas/TestResultsContext'
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        resultsDifference:
          $ref: '#/components/schemas/AggregatedResultsDifference'
        runSummaryByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByOutcome'
        runSummaryByState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByState'
        totalTests:
          type: integer
          format: int32
      description: ""
    AggregatedResultsByOutcome:
      type: object
      properties:
        count:
          type: integer
          format: int32
        duration:
          type: string
          format: TimeSpan
        groupByField:
          type: string
        groupByValue:
          type: object
          properties: {}
        outcome:
          type: string
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: Test has not been completed, or the test type does not
                report pass/failure.
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: Test was executed, but there were issues. Issues may involve
                exceptions or failed assertions.
            - value: inconclusive
              description: Test has completed, but we can't say if it passed or failed.
                May be used for aborted tests...
            - value: timeout
              description: The test timed out
            - value: aborted
              description: Test was aborted. This was not caused by a user gesture,
                but rather by a framework decision.
            - value: blocked
              description: Test had it chance for been executed but was not, as ITestElement.IsRunnable
                == false.
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
        rerunResultCount:
          type: integer
          format: int32
      description: ""
    AggregatedResultsDifference:
      type: object
      properties:
        increaseInDuration:
          type: string
          format: TimeSpan
        increaseInFailures:
          type: integer
          format: int32
        increaseInNonImpactedTests:
          type: integer
          format: int32
        increaseInOtherTests:
          type: integer
          format: int32
        increaseInPassedTests:
          type: integer
          format: int32
        increaseInTotalTests:
          type: integer
          format: int32
      description: ""
    AggregatedRunsByOutcome:
      type: object
      properties:
        outcome:
          type: string
          enum:
          - passed
          - failed
          - notImpacted
          - others
          x-ms-enum:
            name: TestRunOutcome
            values:
            - value: passed
              description: Run with zero failed tests and has at least one impacted
                test
            - value: failed
              description: Run with at-least one failed test.
            - value: notImpacted
              description: Run with no impacted tests.
            - value: others
              description: Runs with All tests in other category.
        runsCount:
          type: integer
          format: int32
      description: ""
    AggregatedRunsByState:
      type: object
      properties:
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        runsCount:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - unspecified
          - notStarted
          - inProgress
          - completed
          - aborted
          - waiting
          - needsInvestigation
          x-ms-enum:
            name: TestRunState
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: notStarted
              description: The run is still being created.  No tests have started
                yet.
            - value: inProgress
              description: Tests are running.
            - value: completed
              description: All tests have completed or been skipped.
            - value: aborted
              description: Run is stopped and remaining tests have been aborted
            - value: waiting
              description: Run is currently initializing This is a legacy state and
                should not be used any more
            - value: needsInvestigation
              description: Run requires investigation because of a test point failure
                This is a legacy state and should not be used any more
      description: ""
    BatchResponse:
      type: object
      properties:
        error:
          type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/Response'
        status:
          type: string
          enum:
          - continue
          - switchingProtocols
          - ok
          - created
          - accepted
          - nonAuthoritativeInformation
          - noContent
          - resetContent
          - partialContent
          - multipleChoices
          - ambiguous
          - movedPermanently
          - moved
          - found
          - redirect
          - seeOther
          - redirectMethod
          - notModified
          - useProxy
          - unused
          - temporaryRedirect
          - redirectKeepVerb
          - badRequest
          - unauthorized
          - paymentRequired
          - forbidden
          - notFound
          - methodNotAllowed
          - notAcceptable
          - proxyAuthenticationRequired
          - requestTimeout
          - conflict
          - gone
          - lengthRequired
          - preconditionFailed
          - requestEntityTooLarge
          - requestUriTooLong
          - unsupportedMediaType
          - requestedRangeNotSatisfiable
          - expectationFailed
          - upgradeRequired
          - internalServerError
          - notImplemented
          - badGateway
          - serviceUnavailable
          - gatewayTimeout
          - httpVersionNotSupported
          x-ms-enum:
            name: HttpStatusCode
            values:
            - value: continue
              description: ""
            - value: switchingProtocols
              description: ""
            - value: ok
              description: ""
            - value: created
              description: ""
            - value: accepted
              description: ""
            - value: nonAuthoritativeInformation
              description: ""
            - value: noContent
              description: ""
            - value: resetContent
              description: ""
            - value: partialContent
              description: ""
            - value: multipleChoices
              description: ""
            - value: ambiguous
              description: ""
            - value: movedPermanently
              description: ""
            - value: moved
              description: ""
            - value: found
              description: ""
            - value: redirect
              description: ""
            - value: seeOther
              description: ""
            - value: redirectMethod
              description: ""
            - value: notModified
              description: ""
            - value: useProxy
              description: ""
            - value: unused
              description: ""
            - value: temporaryRedirect
              description: ""
            - value: redirectKeepVerb
              description: ""
            - value: badRequest
              description: ""
            - value: unauthorized
              description: ""
            - value: paymentRequired
              description: ""
            - value: forbidden
              description: ""
            - value: notFound
              description: ""
            - value: methodNotAllowed
              description: ""
            - value: notAcceptable
              description: ""
            - value: proxyAuthenticationRequired
              description: ""
            - value: requestTimeout
              description: ""
            - value: conflict
              description: ""
            - value: gone
              description: ""
            - value: lengthRequired
              description: ""
            - value: preconditionFailed
              description: ""
            - value: requestEntityTooLarge
              description: ""
            - value: requestUriTooLong
              description: ""
            - value: unsupportedMediaType
              description: ""
            - value: requestedRangeNotSatisfiable
              description: ""
            - value: expectationFailed
              description: ""
            - value: upgradeRequired
              description: ""
            - value: internalServerError
              description: ""
            - value: notImplemented
              description: ""
            - value: badGateway
              description: ""
            - value: serviceUnavailable
              description: ""
            - value: gatewayTimeout
              description: ""
            - value: httpVersionNotSupported
              description: ""
      description: ""
    BuildConfiguration:
      type: object
      properties:
        branchName:
          type: string
          description: Branch name for which build is generated.
        buildDefinitionId:
          type: integer
          description: BuildDefinitionId for build.
          format: int32
        buildSystem:
          type: string
          description: Build system.
        creationDate:
          type: string
          description: Build Creation Date.
          format: date-time
        flavor:
          type: string
          description: Build flavor (eg Build/Release).
        id:
          type: integer
          description: BuildConfiguration Id.
          format: int32
        number:
          type: string
          description: Build Number.
        platform:
          type: string
          description: BuildConfiguration Platform.
        project:
          $ref: '#/components/schemas/ShallowReference'
        repositoryGuid:
          type: string
          description: Repository Guid for the Build.
        repositoryType:
          type: string
          description: Repository Type (eg. TFSGit).
        sourceVersion:
          type: string
          description: Source Version(/first commit) for the build was triggered.
        targetBranchName:
          type: string
          description: Target BranchName.
        uri:
          type: string
          description: Build Uri.
      description: BuildConfiguration Details.
    BuildCoverage:
      type: object
      properties:
        codeCoverageFileUrl:
          type: string
          description: Code Coverage File Url
        configuration:
          $ref: '#/components/schemas/BuildConfiguration'
        lastError:
          type: string
          description: Last Error
        modules:
          type: array
          description: List of Modules
          items:
            $ref: '#/components/schemas/ModuleCoverage'
        state:
          type: string
          description: State
      description: Build Coverage Detail
    BuildReference:
      type: object
      properties:
        branchName:
          type: string
          description: Branch name.
        buildSystem:
          type: string
          description: Build system.
        definitionId:
          type: integer
          description: Build Definition ID.
          format: int32
        id:
          type: integer
          description: Build ID.
          format: int32
        number:
          type: string
          description: Build Number.
        repositoryId:
          type: string
          description: Repository ID.
        uri:
          type: string
          description: Build URI.
      description: Reference to a build.
    BuildReference2:
      type: object
      properties:
        branchName:
          type: string
        buildConfigurationId:
          type: integer
          format: int32
        buildDefinitionId:
          type: integer
          format: int32
        buildDeleted:
          type: boolean
        buildFlavor:
          type: string
        buildId:
          type: integer
          format: int32
        buildNumber:
          type: string
        buildPlatform:
          type: string
        buildSystem:
          type: string
        buildUri:
          type: string
        coverageId:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        projectId:
          type: string
          format: uuid
        repoId:
          type: string
        repoType:
          type: string
        sourceVersion:
          type: string
      description: ""
    BulkResultUpdateRequest:
      type: object
      properties:
        projectName:
          type: string
        requests:
          type: array
          items:
            $ref: '#/components/schemas/ResultUpdateRequest'
      description: ""
    CloneOperationInformation:
      type: object
      properties:
        cloneStatistics:
          $ref: '#/components/schemas/CloneStatistics'
        completionDate:
          type: string
          description: If the operation is complete, the DateTime of completion. If
            operation is not complete, this is DateTime.MaxValue
          format: date-time
        creationDate:
          type: string
          description: DateTime when the operation was started
          format: date-time
        destinationObject:
          $ref: '#/components/schemas/ShallowReference'
        destinationPlan:
          $ref: '#/components/schemas/ShallowReference'
        destinationProject:
          $ref: '#/components/schemas/ShallowReference'
        message:
          type: string
          description: If the operation has Failed, Message contains the reason for
            failure. Null otherwise.
        opId:
          type: integer
          description: The ID of the operation
          format: int32
        resultObjectType:
          type: string
          description: The type of the object generated as a result of the Clone operation
          enum:
          - testSuite
          - testPlan
          x-ms-enum:
            name: ResultObjectType
            values:
            - value: testSuite
              description: Suite Clone
            - value: testPlan
              description: Plan Clone
        sourceObject:
          $ref: '#/components/schemas/ShallowReference'
        sourcePlan:
          $ref: '#/components/schemas/ShallowReference'
        sourceProject:
          $ref: '#/components/schemas/ShallowReference'
        state:
          type: string
          description: Current state of the operation. When State reaches Succeeded
            or Failed, the operation is complete
          enum:
          - failed
          - inProgress
          - queued
          - succeeded
          x-ms-enum:
            name: CloneOperationState
            values:
            - value: failed
              description: value for Failed State
            - value: inProgress
              description: value for Inprogress state
            - value: queued
              description: Value for Queued State
            - value: succeeded
              description: value for Success state
        url:
          type: string
          description: Url for getting the clone information
      description: Detail About Clone Operation.
    CloneOptions:
      type: object
      properties:
        cloneRequirements:
          type: boolean
          description: If set to true requirements will be cloned
        copyAllSuites:
          type: boolean
          description: copy all suites from a source plan
        copyAncestorHierarchy:
          type: boolean
          description: copy ancestor hierarchy
        destinationWorkItemType:
          type: string
          description: Name of the workitem type of the clone
        overrideParameters:
          type: object
          additionalProperties:
            type: string
          description: Key value pairs where the key value is overridden by the value.
        relatedLinkComment:
          type: string
          description: Comment on the link that will link the new clone  test case
            to the original Set null for no comment
      description: Clone options for cloning the test suite.
    CloneStatistics:
      type: object
      properties:
        clonedRequirementsCount:
          type: integer
          description: Number of requirements cloned so far.
          format: int32
        clonedSharedStepsCount:
          type: integer
          description: Number of shared steps cloned so far.
          format: int32
        clonedTestCasesCount:
          type: integer
          description: Number of test cases cloned so far
          format: int32
        totalRequirementsCount:
          type: integer
          description: Total number of requirements to be cloned
          format: int32
        totalTestCasesCount:
          type: integer
          description: Total number of test cases to be cloned
          format: int32
      description: Clone Statistics Details.
    CloneTestCaseOptions:
      type: object
      properties:
        includeAttachments:
          type: boolean
          description: If set to true, include the attachments
        includeLinks:
          type: boolean
          description: If set to true, include the links
        relatedLinkComment:
          type: string
          description: Comment on the link that will link the new clone  test case
            to the original Set null for no comment
      description: ""
    CodeCoverageData:
      type: object
      properties:
        buildFlavor:
          type: string
          description: Flavor of build for which data is retrieved/published
        buildPlatform:
          type: string
          description: Platform of build for which data is retrieved/published
        coverageStats:
          type: array
          description: List of coverage data for the build
          items:
            $ref: '#/components/schemas/CodeCoverageStatistics'
      description: Represents the build configuration (platform, flavor) and coverage
        data for the build
    CodeCoverageStatistics:
      type: object
      properties:
        covered:
          type: integer
          description: Covered units
          format: int32
        delta:
          type: number
          description: Delta of coverage
          format: double
        isDeltaAvailable:
          type: boolean
          description: Is delta valid
        label:
          type: string
          description: Label of coverage data ("Blocks", "Statements", "Modules",
            etc.)
        position:
          type: integer
          description: Position of label
          format: int32
        total:
          type: integer
          description: Total units
          format: int32
      description: Represents the code coverage statistics for a particular coverage
        label (modules, statements, blocks, etc.)
    CodeCoverageSummary:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/ShallowReference'
        coverageData:
          type: array
          description: List of coverage data and details for the build
          items:
            $ref: '#/components/schemas/CodeCoverageData'
        deltaBuild:
          $ref: '#/components/schemas/ShallowReference'
        status:
          type: string
          description: Uri of build against which difference in coverage is computed
          enum:
          - none
          - inProgress
          - completed
          - finalized
          - pending
          - updateRequestQueued
          x-ms-enum:
            name: CoverageSummaryStatus
            values:
            - value: none
              description: No coverage status
            - value: inProgress
              description: The summary evaluation is in progress
            - value: completed
              description: The summary evaluation for the previous request is completed.
                Summary can change in future
            - value: finalized
              description: The summary evaluation is finalized and won't change
            - value: pending
              description: The summary evaluation is pending
            - value: updateRequestQueued
              description: Summary evaluation may be ongoing but another merge has
                been requested.
      description: Represents the code coverage summary results Used to publish or
        retrieve code coverage summary against a build
    CodeCoverageSummary2:
      type: object
      properties:
        buildConfigurationId:
          type: integer
          format: int32
        covered:
          type: integer
          format: int32
        label:
          type: string
        position:
          type: integer
          format: int32
        projectId:
          type: string
          format: uuid
        total:
          type: integer
          format: int32
      description: ""
    Coverage2:
      type: object
      properties:
        coverageId:
          type: integer
          format: int32
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        lastError:
          type: string
        state:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: ""
    CoverageStatistics:
      type: object
      properties:
        blocksCovered:
          type: integer
          format: int32
        blocksNotCovered:
          type: integer
          format: int32
        linesCovered:
          type: integer
          format: int32
        linesNotCovered:
          type: integer
          format: int32
        linesPartiallyCovered:
          type: integer
          format: int32
      description: ""
    CreateTestMessageLogEntryRequest:
      type: object
      properties:
        projectName:
          type: string
        testMessageLogEntry:
          type: array
          items:
            $ref: '#/components/schemas/TestMessageLogEntry'
        testRunId:
          type: integer
          format: int32
      description: ""
    CreateTestResultsRequest:
      type: object
      properties:
        projectName:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestCaseResult'
      description: ""
    CreateTestRunRequest:
      type: object
      properties:
        projectName:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestCaseResult'
        testRun:
          $ref: '#/components/schemas/LegacyTestRun'
        testSettings:
          $ref: '#/components/schemas/LegacyTestSettings'
      description: ""
    CustomTestField:
      type: object
      properties:
        fieldName:
          type: string
          description: Field Name.
        value:
          type: object
          properties: {}
          description: Field value.
      description: 'A custom field information. Allowed Key : Value pairs - ( AttemptId:
        int value, IsTestResultFlaky: bool)'
    CustomTestFieldDefinition:
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        fieldName:
          type: string
        fieldType:
          type: string
          enum:
          - bit
          - dateTime
          - int
          - float
          - string
          - guid
          x-ms-enum:
            name: CustomTestFieldType
            values:
            - value: bit
              description: ""
            - value: dateTime
              description: ""
            - value: int
              description: ""
            - value: float
              description: ""
            - value: string
              description: ""
            - value: guid
              description: ""
        scope:
          type: string
          enum:
          - none
          - testRun
          - testResult
          - system
          - all
          x-ms-enum:
            name: CustomTestFieldScope
            values:
            - value: none
              description: ""
            - value: testRun
              description: ""
            - value: testResult
              description: ""
            - value: system
              description: ""
            - value: all
              description: ""
      description: ""
    DatedTestFieldData:
      type: object
      properties:
        date:
          type: string
          format: date-time
        value:
          $ref: '#/components/schemas/TestFieldData'
      description: ""
    DefaultAfnStripBinding:
      type: object
      properties:
        testCaseId:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    DeleteTestRunRequest:
      type: object
      properties:
        projectName:
          type: string
        testRunIds:
          type: array
          items:
            type: integer
            format: int32
      description: ""
    DownloadAttachmentsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
        lengths:
          type: array
          items:
            type: integer
            format: int64
      description: ""
    DtlEnvironmentDetails:
      type: object
      properties:
        csmContent:
          type: string
        csmParameters:
          type: string
        subscriptionName:
          type: string
      description: This is a temporary class to provide the details for the test run
        environment.
    FailingSince:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildReference'
        date:
          type: string
          description: Time since failing(UTC).
          format: date-time
        release:
          $ref: '#/components/schemas/ReleaseReference'
      description: Failing since information of a test result.
    FetchTestResultsRequest:
      type: object
      properties:
        idAndRevs:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseResultIdAndRev'
        includeActionResults:
          type: boolean
        projectName:
          type: string
      description: ""
    FetchTestResultsResponse:
      type: object
      properties:
        actionResults:
          type: array
          items:
            $ref: '#/components/schemas/TestActionResult'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/TestResultAttachment'
        deletedIds:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestCaseResultIdentifier'
        results:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestCaseResult'
        testParameters:
          type: array
          items:
            $ref: '#/components/schemas/TestResultParameter'
      description: ""
    FieldDetailsForTestResults:
      type: object
      properties:
        fieldName:
          type: string
          description: Group by field name
        groupsForField:
          type: array
          description: Group by field values
          items:
            type: object
            properties: {}
      description: ""
    FileCoverage:
      type: object
      properties:
        lineBlocksCoverage:
          type: array
          description: List of line blocks along with their coverage status
          items:
            $ref: '#/components/schemas/LineBlockCoverage'
        path:
          type: string
          description: File path for which coverage information is sought for
      description: ""
    FileCoverageRequest:
      type: object
      properties:
        filePath:
          type: string
        pullRequestBaseIterationId:
          type: integer
          format: int32
        pullRequestId:
          type: integer
          format: int32
        pullRequestIterationId:
          type: integer
          format: int32
        repoId:
          type: string
      description: ""
    FilterPointQuery:
      type: object
      properties:
        planId:
          type: integer
          format: int32
        pointIds:
          type: array
          items:
            type: integer
            format: int32
        pointOutcome:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        resultState:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
      description: ""
    FlakyDetection:
      type: object
      properties:
        flakyDetectionPipelines:
          $ref: '#/components/schemas/FlakyDetectionPipelines'
        flakyDetectionType:
          type: string
          description: FlakyDetectionType defines Detection type i.e. 1. System or
            2. Manual.
          enum:
          - custom
          - system
          x-ms-enum:
            name: FlakyDetectionType
            values:
            - value: custom
              description: Custom defines manual detection type.
            - value: system
              description: Defines System detection type.
      description: ""
    FlakyDetectionPipelines:
      type: object
      properties:
        allowedPipelines:
          type: array
          description: AllowedPipelines - List All Pipelines allowed for detection.
          items:
            type: integer
            format: int32
        isAllPipelinesAllowed:
          type: boolean
          description: IsAllPipelinesAllowed if users configure all system's pipelines.
      description: ""
    FlakySettings:
      type: object
      properties:
        flakyDetection:
          $ref: '#/components/schemas/FlakyDetection'
        flakyInSummaryReport:
          type: boolean
          description: FlakyInSummaryReport defines flaky data should show in summary
            report or not.
        isFlakyBugCreated:
          type: boolean
          description: IsFlakyBugCreated defines if there is any bug that has been
            created with flaky testresult.
        manualMarkUnmarkFlaky:
          type: boolean
          description: ManualMarkUnmarkFlaky defines manual marking unmarking of flaky
            testcase.
      description: ""
    FunctionCoverage:
      type: object
      properties:
        class:
          type: string
        name:
          type: string
        namespace:
          type: string
        sourceFile:
          type: string
        statistics:
          $ref: '#/components/schemas/CoverageStatistics'
      description: ""
    FunctionCoverage2:
      type: object
      properties:
        blocksCovered:
          type: integer
          format: int32
        blocksNotCovered:
          type: integer
          format: int32
        class:
          type: string
        coverageId:
          type: integer
          format: int32
        functionId:
          type: integer
          format: int32
        linesCovered:
          type: integer
          format: int32
        linesNotCovered:
          type: integer
          format: int32
        linesPartiallyCovered:
          type: integer
          format: int32
        moduleId:
          type: integer
          format: int32
        name:
          type: string
        namespace:
          type: string
        sourceFile:
          type: string
      description: ""
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Organizations.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    HttpPostedTcmAttachment:
      type: object
      properties:
        attachmentContent:
          type: string
        contentLength:
          type: integer
          format: int32
        contentType:
          type: string
        fileName:
          type: string
      description: ""
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    JobReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of the job
          format: int32
        jobName:
          type: string
          description: Matrixing in YAML generates copies of a job with different
            inputs in matrix. JobName is the name of those input. Maximum supported
            length for name is 256 character.
      description: Job in pipeline. This is related to matrixing in YAML.
    LastResultDetails:
      type: object
      properties:
        dateCompleted:
          type: string
          description: Completed date of last result.
          format: date-time
        duration:
          type: integer
          description: Duration of the last result in milliseconds.
          format: int64
        runBy:
          $ref: '#/components/schemas/IdentityRef'
      description: Last result details of test point.
    LegacyBuildConfiguration:
      type: object
      properties:
        branchName:
          type: string
        buildConfigurationId:
          type: integer
          format: int32
        buildDefinitionId:
          type: integer
          format: int32
        buildDefinitionName:
          type: string
        buildFlavor:
          type: string
        buildId:
          type: integer
          format: int32
        buildNumber:
          type: string
        buildPlatform:
          type: string
        buildQuality:
          type: string
        buildSystem:
          type: string
        buildUri:
          type: string
        completedDate:
          type: string
          format: date-time
        createdDate:
          type: string
          format: date-time
        oldBuildConfigurationId:
          type: integer
          format: int32
        repositoryId:
          type: string
        repositoryType:
          type: string
        sourceVersion:
          type: string
        teamProjectName:
          type: string
      description: ""
    LegacyReleaseReference:
      type: object
      properties:
        attempt:
          type: integer
          format: int32
        environmentCreationDate:
          type: string
          format: date-time
        primaryArtifactBuildId:
          type: integer
          format: int32
        primaryArtifactProjectId:
          type: string
        primaryArtifactType:
          type: string
        releaseCreationDate:
          type: string
          format: date-time
        releaseDefId:
          type: integer
          format: int32
        releaseEnvDefId:
          type: integer
          format: int32
        releaseEnvId:
          type: integer
          format: int32
        releaseEnvName:
          type: string
        releaseEnvUri:
          type: string
        releaseId:
          type: integer
          format: int32
        releaseName:
          type: string
        releaseRefId:
          type: integer
          format: int32
        releaseUri:
          type: string
      description: ""
    LegacyTestCaseResult:
      type: object
      properties:
        afnStripId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        areaUri:
          type: string
        automatedTestId:
          type: string
        automatedTestName:
          type: string
        automatedTestStorage:
          type: string
        automatedTestType:
          type: string
        automatedTestTypeId:
          type: string
        buildNumber:
          type: string
        buildReference:
          $ref: '#/components/schemas/LegacyBuildConfiguration'
        comment:
          type: string
        computerName:
          type: string
        configurationId:
          type: integer
          format: int32
        configurationName:
          type: string
        creationDate:
          type: string
          format: date-time
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/TestExtensionField'
        dateCompleted:
          type: string
          format: date-time
        dateStarted:
          type: string
          format: date-time
        duration:
          type: integer
          format: int64
        errorMessage:
          type: string
        failingSince:
          $ref: '#/components/schemas/FailingSince'
        failureType:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        id:
          $ref: '#/components/schemas/LegacyTestCaseResultIdentifier'
        isRerun:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        lastUpdatedByName:
          type: string
        outcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        owner:
          type: string
          format: uuid
        ownerName:
          type: string
        priority:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        releaseReference:
          $ref: '#/components/schemas/LegacyReleaseReference'
        resetCount:
          type: integer
          format: int32
        resolutionStateId:
          type: integer
          format: int32
        resultGroupType:
          type: string
          enum:
          - none
          - rerun
          - dataDriven
          - orderedTest
          - generic
          x-ms-enum:
            name: ResultGroupType
            values:
            - value: none
              description: Leaf node of test result.
            - value: rerun
              description: Hierarchy type of test result.
            - value: dataDriven
              description: Hierarchy type of test result.
            - value: orderedTest
              description: Hierarchy type of test result.
            - value: generic
              description: Unknown hierarchy type.
        revision:
          type: integer
          format: int32
        runBy:
          type: string
          format: uuid
        runByName:
          type: string
        sequenceId:
          type: integer
          format: int32
        stackTrace:
          $ref: '#/components/schemas/TestExtensionField'
        state:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        subResultCount:
          type: integer
          format: int32
        suiteName:
          type: string
        testCaseArea:
          type: string
        testCaseAreaUri:
          type: string
        testCaseId:
          type: integer
          format: int32
        testCaseReferenceId:
          type: integer
          format: int32
        testCaseRevision:
          type: integer
          format: int32
        testCaseTitle:
          type: string
        testPlanId:
          type: integer
          format: int32
        testPointId:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
        testRunTitle:
          type: string
        testSuiteId:
          type: integer
          format: int32
      description: ""
    LegacyTestCaseResultIdentifier:
      type: object
      properties:
        areaUri:
          type: string
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    LegacyTestRun:
      type: object
      properties:
        bugsCount:
          type: integer
          format: int32
        buildConfigurationId:
          type: integer
          format: int32
        buildFlavor:
          type: string
        buildNumber:
          type: string
        buildPlatform:
          type: string
        buildReference:
          $ref: '#/components/schemas/LegacyBuildConfiguration'
        buildUri:
          type: string
        comment:
          type: string
        completeDate:
          type: string
          format: date-time
        configurationIds:
          type: array
          items:
            type: integer
            format: int32
        controller:
          type: string
        creationDate:
          type: string
          format: date-time
        csmContent:
          type: string
        csmParameters:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/TestExtensionField'
        dropLocation:
          type: string
        dtlAutEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlTestEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dueDate:
          type: string
          format: date-time
        errorMessage:
          type: string
        filter:
          $ref: '#/components/schemas/RunFilter'
        incompleteTests:
          type: integer
          format: int32
        isAutomated:
          type: boolean
        isBvt:
          type: boolean
        iteration:
          type: string
        iterationId:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        lastUpdatedByName:
          type: string
        legacySharePath:
          type: string
        notApplicableTests:
          type: integer
          format: int32
        owner:
          type: string
          format: uuid
        ownerName:
          type: string
        passedTests:
          type: integer
          format: int32
        postProcessState:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        publicTestSettingsId:
          type: integer
          format: int32
        releaseEnvironmentUri:
          type: string
        releaseReference:
          $ref: '#/components/schemas/LegacyReleaseReference'
        releaseUri:
          type: string
        revision:
          type: integer
          format: int32
        rowVersion:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        runHasDtlEnvironment:
          type: boolean
        runTimeout:
          type: string
          format: TimeSpan
        serviceVersion:
          type: string
        sourceWorkflow:
          type: string
        startDate:
          type: string
          format: date-time
        state:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        subscriptionName:
          type: string
        substate:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        teamProject:
          type: string
        teamProjectUri:
          type: string
        testConfigurationsMapping:
          type: string
        testEnvironmentId:
          type: string
          format: uuid
        testMessageLogEntries:
          type: array
          items:
            $ref: '#/components/schemas/TestMessageLogDetails'
        testMessageLogId:
          type: integer
          format: int32
        testPlanId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
        testRunStatistics:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestRunStatistic'
        testSettingsId:
          type: integer
          format: int32
        title:
          type: string
        totalTests:
          type: integer
          format: int32
        type:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        unanalyzedTests:
          type: integer
          format: int32
        version:
          type: integer
          format: int32
      description: ""
    LegacyTestRunStatistic:
      type: object
      properties:
        count:
          type: integer
          format: int32
        outcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        resolutionState:
          $ref: '#/components/schemas/TestResolutionState'
        state:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        testRunId:
          type: integer
          format: int32
      description: ""
    LegacyTestSettings:
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        areaPath:
          type: string
        createdBy:
          type: string
          format: uuid
        createdByName:
          type: string
        createdDate:
          type: string
          format: date-time
        description:
          type: string
        id:
          type: integer
          format: int32
        isAutomated:
          type: boolean
        isPublic:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        lastUpdatedByName:
          type: string
        machineRoles:
          type: array
          items:
            $ref: '#/components/schemas/TestSettingsMachineRole'
        name:
          type: string
        revision:
          type: integer
          format: int32
        settings:
          type: string
        teamProjectUri:
          type: string
      description: ""
    LineBlockCoverage:
      type: object
      properties:
        end:
          type: integer
          description: End of line block
          format: int32
        start:
          type: integer
          description: Start of line block
          format: int32
        status:
          type: integer
          description: 'Coverage status. Covered: 0, NotCovered: 1,  PartiallyCovered:
            2'
          format: int32
      description: ""
    LinkedWorkItemsQuery:
      type: object
      properties:
        automatedTestNames:
          type: array
          items:
            type: string
        planId:
          type: integer
          format: int32
        pointIds:
          type: array
          items:
            type: integer
            format: int32
        suiteIds:
          type: array
          items:
            type: integer
            format: int32
        testCaseIds:
          type: array
          items:
            type: integer
            format: int32
        workItemCategory:
          type: string
      description: ""
    LinkedWorkItemsQueryResult:
      type: object
      properties:
        automatedTestName:
          type: string
        planId:
          type: integer
          format: int32
        pointId:
          type: integer
          format: int32
        suiteId:
          type: integer
          format: int32
        testCaseId:
          type: integer
          format: int32
        workItems:
          type: array
          items:
            $ref: '#/components/schemas/WorkItemReference'
      description: ""
    ModuleCoverage:
      type: object
      properties:
        blockCount:
          type: integer
          format: int32
        blockData:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        fileUrl:
          type: string
          description: Code Coverage File Url
        functions:
          type: array
          items:
            $ref: '#/components/schemas/FunctionCoverage'
        name:
          type: string
        signature:
          type: string
          format: uuid
        signatureAge:
          type: integer
          format: int32
        statistics:
          $ref: '#/components/schemas/CoverageStatistics'
      description: ""
    ModuleCoverage2:
      type: object
      properties:
        blockCount:
          type: integer
          format: int32
        blockData:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        blockDataLength:
          type: integer
          format: int32
        blocksCovered:
          type: integer
          format: int32
        blocksNotCovered:
          type: integer
          format: int32
        coverageFileUrl:
          type: string
        coverageId:
          type: integer
          format: int32
        linesCovered:
          type: integer
          format: int32
        linesNotCovered:
          type: integer
          format: int32
        linesPartiallyCovered:
          type: integer
          format: int32
        moduleId:
          type: integer
          format: int32
        name:
          type: string
        signature:
          type: string
          format: uuid
        signatureAge:
          type: integer
          format: int32
      description: ""
    NameValuePair:
      type: object
      properties:
        name:
          type: string
          description: Name
        value:
          type: string
          description: Value
      description: Name value pair
    NewTestResultLoggingSettings:
      type: object
      properties:
        logNewTests:
          type: boolean
          description: LogNewTests defines whether or not we will record new test
            cases coming into the system
      description: ""
    PhaseReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of the phase
          format: int32
        phaseName:
          type: string
          description: Name of the phase. Maximum supported length for name is 256
            character.
      description: Phase in pipeline
    PipelineReference:
      type: object
      properties:
        jobReference:
          $ref: '#/components/schemas/JobReference'
        phaseReference:
          $ref: '#/components/schemas/PhaseReference'
        pipelineId:
          type: integer
          description: Reference of the pipeline with which this pipeline instance
            is related.
          format: int32
        stageReference:
          $ref: '#/components/schemas/StageReference'
      description: Pipeline reference
    PipelineTestMetrics:
      type: object
      properties:
        currentContext:
          $ref: '#/components/schemas/PipelineReference'
        resultsAnalysis:
          $ref: '#/components/schemas/ResultsAnalysis'
        resultSummary:
          $ref: '#/components/schemas/ResultSummary'
        runSummary:
          $ref: '#/components/schemas/RunSummary'
        summaryAtChild:
          type: array
          description: Summary at child node.
          items:
            $ref: '#/components/schemas/PipelineTestMetrics'
      description: Test summary of a pipeline instance.
    PlanUpdateModel:
      type: object
      properties:
        area:
          $ref: '#/components/schemas/ShallowReference'
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildDefinition:
          $ref: '#/components/schemas/ShallowReference'
        configurationIds:
          type: array
          description: IDs of configurations to be applied when new test suites and
            test cases are added to the test plan.
          items:
            type: integer
            format: int32
        description:
          type: string
          description: Description of the test plan.
        endDate:
          type: string
          description: End date for the test plan.
        iteration:
          type: string
          description: Iteration path assigned to the test plan. This indicates when
            the target iteration by which the testing in this plan is supposed to
            be complete and the product is ready to be released.
        name:
          type: string
          description: Name of the test plan.
        owner:
          $ref: '#/components/schemas/IdentityRef'
        releaseEnvironmentDefinition:
          $ref: '#/components/schemas/ReleaseEnvironmentDefinitionReference'
        startDate:
          type: string
          description: Start date for the test plan.
        state:
          type: string
          description: State of the test plan.
        testOutcomeSettings:
          $ref: '#/components/schemas/TestOutcomeSettings'
      description: A model class used for creating and updating test plans.
    PointAssignment:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/ShallowReference'
        tester:
          $ref: '#/components/schemas/IdentityRef'
      description: Adding test cases to a suite creates one of more test points based
        on the default configurations and testers assigned to the test suite. PointAssignment
        is the list of test points that were created for each of the test cases that
        were added to the test suite.
    PointLastResult:
      type: object
      properties:
        lastUpdatedDate:
          type: string
          format: date-time
        pointId:
          type: integer
          format: int32
      description: ""
    PointsFilter:
      type: object
      properties:
        configurationNames:
          type: array
          description: List of Configurations for filtering.
          items:
            type: string
        testcaseIds:
          type: array
          description: List of test case id for filtering.
          items:
            type: integer
            format: int32
        testers:
          type: array
          description: List of tester for filtering.
          items:
            $ref: '#/components/schemas/IdentityRef'
      description: Filter class for test point.
    PointsReference2:
      type: object
      properties:
        planId:
          type: integer
          format: int32
        pointId:
          type: integer
          format: int32
      description: ""
    PointsResults2:
      type: object
      properties:
        changeNumber:
          type: integer
          format: int32
        lastFailureType:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        lastResolutionStateId:
          type: integer
          format: int32
        lastResultOutcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        lastResultState:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        lastTestResultId:
          type: integer
          format: int32
        lastTestRunId:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        planId:
          type: integer
          format: int32
        pointId:
          type: integer
          format: int32
      description: ""
    PointUpdateModel:
      type: object
      properties:
        outcome:
          type: string
          description: Outcome to update.
        resetToActive:
          type: boolean
          description: Reset test point to active.
        tester:
          $ref: '#/components/schemas/IdentityRef'
      description: Model to update test point.
    PointWorkItemProperty:
      type: object
      properties:
        workItem:
          type: object
          properties: {}
          description: key value pair of test point work item property.
      description: Test point workitem property.
    PropertyBag:
      type: object
      properties:
        bag:
          type: object
          additionalProperties:
            type: string
          description: Generic store for test session data
      description: The class to represent a Generic store for test session data.
    QueryByPointRequest:
      type: object
      properties:
        projectName:
          type: string
        testPlanId:
          type: integer
          format: int32
        testPointId:
          type: integer
          format: int32
      description: ""
    QueryByRunRequest:
      type: object
      properties:
        includeActionResults:
          type: boolean
        outcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        owner:
          type: string
          format: uuid
        pageSize:
          type: integer
          format: int32
        projectName:
          type: string
        state:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        testRunId:
          type: integer
          format: int32
      description: ""
    QueryModel:
      type: object
      properties:
        query:
          type: string
      description: ""
    QueryTestActionResultRequest:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/LegacyTestCaseResultIdentifier'
        projectName:
          type: string
      description: ""
    QueryTestActionResultResponse:
      type: object
      properties:
        testActionResults:
          type: array
          items:
            $ref: '#/components/schemas/TestActionResult'
        testAttachments:
          type: array
          items:
            $ref: '#/components/schemas/TestResultAttachment'
        testResultParameters:
          type: array
          items:
            $ref: '#/components/schemas/TestResultParameter'
      description: ""
    QueryTestMessageLogEntryRequest:
      type: object
      properties:
        projectName:
          type: string
        testMessageLogId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    QueryTestRuns2Request:
      type: object
      properties:
        includeStatistics:
          type: boolean
        query:
          $ref: '#/components/schemas/ResultsStoreQuery'
      description: ""
    QueryTestRunsRequest:
      type: object
      properties:
        buildUri:
          type: string
        owner:
          type: string
          format: uuid
        planId:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        teamProjectName:
          type: string
        testRunId:
          type: integer
          format: int32
        top:
          type: integer
          format: int32
      description: ""
    QueryTestRunStatsRequest:
      type: object
      properties:
        teamProjectName:
          type: string
        testRunId:
          type: integer
          format: int32
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    ReleaseEnvironmentDefinitionReference:
      type: object
      properties:
        definitionId:
          type: integer
          description: ID of the release definition that contains the release environment
            definition.
          format: int32
        environmentDefinitionId:
          type: integer
          description: ID of the release environment definition.
          format: int32
      description: Reference to release environment resource.
    ReleaseReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Number of Release Attempt.
          format: int32
        creationDate:
          type: string
          description: Release Creation Date(UTC).
          format: date-time
        definitionId:
          type: integer
          description: Release definition ID.
          format: int32
        environmentCreationDate:
          type: string
          description: Environment creation Date(UTC).
          format: date-time
        environmentDefinitionId:
          type: integer
          description: Release environment definition ID.
          format: int32
        environmentDefinitionName:
          type: string
          description: Release environment definition name.
        environmentId:
          type: integer
          description: Release environment ID.
          format: int32
        environmentName:
          type: string
          description: Release environment name.
        id:
          type: integer
          description: Release ID.
          format: int32
        name:
          type: string
          description: Release name.
      description: Reference to a release.
    ReleaseReference2:
      type: object
      properties:
        attempt:
          type: integer
          format: int32
        environmentCreationDate:
          type: string
          format: date-time
        projectId:
          type: string
          format: uuid
        releaseCreationDate:
          type: string
          format: date-time
        releaseDefId:
          type: integer
          format: int32
        releaseEnvDefId:
          type: integer
          format: int32
        releaseEnvId:
          type: integer
          format: int32
        releaseEnvName:
          type: string
        releaseEnvUri:
          type: string
        releaseId:
          type: integer
          format: int32
        releaseName:
          type: string
        releaseRefId:
          type: integer
          format: int32
        releaseUri:
          type: string
      description: ""
    RequirementsToTestsMapping2:
      type: object
      properties:
        createdBy:
          type: string
          format: uuid
        creationDate:
          type: string
          format: date-time
        deletedBy:
          type: string
          format: uuid
        deletionDate:
          type: string
          format: date-time
        isMigratedToWIT:
          type: boolean
        projectId:
          type: string
          format: uuid
        testMetadataId:
          type: integer
          format: int32
        workItemId:
          type: integer
          format: int32
      description: ""
    ResetTestResultsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestCaseResultIdentifier'
        projectName:
          type: string
      description: ""
    Response:
      type: object
      properties:
        error:
          type: string
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
          - continue
          - switchingProtocols
          - ok
          - created
          - accepted
          - nonAuthoritativeInformation
          - noContent
          - resetContent
          - partialContent
          - multipleChoices
          - ambiguous
          - movedPermanently
          - moved
          - found
          - redirect
          - seeOther
          - redirectMethod
          - notModified
          - useProxy
          - unused
          - temporaryRedirect
          - redirectKeepVerb
          - badRequest
          - unauthorized
          - paymentRequired
          - forbidden
          - notFound
          - methodNotAllowed
          - notAcceptable
          - proxyAuthenticationRequired
          - requestTimeout
          - conflict
          - gone
          - lengthRequired
          - preconditionFailed
          - requestEntityTooLarge
          - requestUriTooLong
          - unsupportedMediaType
          - requestedRangeNotSatisfiable
          - expectationFailed
          - upgradeRequired
          - internalServerError
          - notImplemented
          - badGateway
          - serviceUnavailable
          - gatewayTimeout
          - httpVersionNotSupported
          x-ms-enum:
            name: HttpStatusCode
            values:
            - value: continue
              description: ""
            - value: switchingProtocols
              description: ""
            - value: ok
              description: ""
            - value: created
              description: ""
            - value: accepted
              description: ""
            - value: nonAuthoritativeInformation
              description: ""
            - value: noContent
              description: ""
            - value: resetContent
              description: ""
            - value: partialContent
              description: ""
            - value: multipleChoices
              description: ""
            - value: ambiguous
              description: ""
            - value: movedPermanently
              description: ""
            - value: moved
              description: ""
            - value: found
              description: ""
            - value: redirect
              description: ""
            - value: seeOther
              description: ""
            - value: redirectMethod
              description: ""
            - value: notModified
              description: ""
            - value: useProxy
              description: ""
            - value: unused
              description: ""
            - value: temporaryRedirect
              description: ""
            - value: redirectKeepVerb
              description: ""
            - value: badRequest
              description: ""
            - value: unauthorized
              description: ""
            - value: paymentRequired
              description: ""
            - value: forbidden
              description: ""
            - value: notFound
              description: ""
            - value: methodNotAllowed
              description: ""
            - value: notAcceptable
              description: ""
            - value: proxyAuthenticationRequired
              description: ""
            - value: requestTimeout
              description: ""
            - value: conflict
              description: ""
            - value: gone
              description: ""
            - value: lengthRequired
              description: ""
            - value: preconditionFailed
              description: ""
            - value: requestEntityTooLarge
              description: ""
            - value: requestUriTooLong
              description: ""
            - value: unsupportedMediaType
              description: ""
            - value: requestedRangeNotSatisfiable
              description: ""
            - value: expectationFailed
              description: ""
            - value: upgradeRequired
              description: ""
            - value: internalServerError
              description: ""
            - value: notImplemented
              description: ""
            - value: badGateway
              description: ""
            - value: serviceUnavailable
              description: ""
            - value: gatewayTimeout
              description: ""
            - value: httpVersionNotSupported
              description: ""
        url:
          type: string
      description: ""
    ResultRetentionSettings:
      type: object
      properties:
        automatedResultsRetentionDuration:
          type: integer
          description: Automated test result retention duration in days
          format: int32
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last updated date
          format: date-time
        manualResultsRetentionDuration:
          type: integer
          description: Manual test result retention duration in days
          format: int32
      description: Test result retention settings
    ResultsAnalysis:
      type: object
      properties:
        previousContext:
          $ref: '#/components/schemas/PipelineReference'
        resultsDifference:
          $ref: '#/components/schemas/AggregatedResultsDifference'
        testFailuresAnalysis:
          $ref: '#/components/schemas/TestResultFailuresAnalysis'
      description: Results insights for runs with state completed and NeedInvestigation.
    ResultsByQueryRequest:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        query:
          $ref: '#/components/schemas/ResultsStoreQuery'
      description: ""
    ResultsByQueryResponse:
      type: object
      properties:
        excessIds:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestCaseResultIdentifier'
        testResults:
          type: array
          items:
            $ref: '#/components/schemas/LegacyTestCaseResult'
      description: ""
    ResultsFilter:
      type: object
      properties:
        automatedTestName:
          type: string
        branch:
          type: string
        executedIn:
          type: string
          enum:
          - any
          - tcm
          - tfs
          x-ms-enum:
            name: Service
            values:
            - value: any
              description: ""
            - value: tcm
              description: ""
            - value: tfs
              description: ""
        groupBy:
          type: string
        maxCompleteDate:
          type: string
          format: date-time
        resultsCount:
          type: integer
          format: int32
        testCaseId:
          type: integer
          format: int32
        testCaseReferenceIds:
          type: array
          items:
            type: integer
            format: int32
        testPlanId:
          type: integer
          format: int32
        testPointIds:
          type: array
          items:
            type: integer
            format: int32
        testResultsContext:
          $ref: '#/components/schemas/TestResultsContext'
        trendDays:
          type: integer
          format: int32
      description: ""
    ResultsStoreQuery:
      type: object
      properties:
        dayPrecision:
          type: boolean
        queryText:
          type: string
        teamProjectName:
          type: string
        timeZone:
          type: string
      description: ""
    ResultsSummaryByOutcome:
      type: object
      properties:
        aggregatedResultDetailsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultDetailsByOutcome'
          description: Aggregated result details for each test result outcome.
        duration:
          type: string
          description: Time taken by results.
          format: TimeSpan
        notReportedTestCount:
          type: integer
          description: Total number of not reported test results.
          format: int32
        totalTestCount:
          type: integer
          description: Total number of test results. (It includes NotImpacted test
            results as well which need to exclude while calculating pass/fail test
            result percentage).
          format: int32
      description: Result summary by the outcome of test results.
    ResultSummary:
      type: object
      properties:
        resultSummaryByRunState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ResultsSummaryByOutcome'
          description: Result summary of pipeline, group by TestRun state.
      description: Summary of results for a pipeline instance.
    ResultUpdateRequest:
      type: object
      properties:
        actionResultDeletes:
          type: array
          items:
            $ref: '#/components/schemas/TestActionResult'
        actionResults:
          type: array
          items:
            $ref: '#/components/schemas/TestActionResult'
        attachmentDeletes:
          type: array
          items:
            $ref: '#/components/schemas/TestResultAttachmentIdentity'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/TestResultAttachment'
        parameterDeletes:
          type: array
          items:
            $ref: '#/components/schemas/TestResultParameter'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/TestResultParameter'
        testCaseResult:
          $ref: '#/components/schemas/LegacyTestCaseResult'
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    ResultUpdateRequestModel:
      type: object
      properties:
        actionResultDeletes:
          type: array
          items:
            $ref: '#/components/schemas/TestActionResultModel'
        actionResults:
          type: array
          items:
            $ref: '#/components/schemas/TestActionResultModel'
        parameterDeletes:
          type: array
          items:
            $ref: '#/components/schemas/TestResultParameterModel'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/TestResultParameterModel'
        testCaseResult:
          $ref: '#/components/schemas/TestCaseResultUpdateModel'
      description: ""
    ResultUpdateResponse:
      type: object
      properties:
        attachmentIds:
          type: array
          items:
            type: integer
            format: int32
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        lastUpdatedByName:
          type: string
        maxReservedSubResultId:
          type: integer
          format: int32
        revision:
          type: integer
          format: int32
        testPlanId:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
      description: ""
    ResultUpdateResponseModel:
      type: object
      properties:
        revision:
          type: integer
          format: int32
      description: ""
    RunCreateModel:
      type: object
      properties:
        automated:
          type: boolean
          description: true if test run is automated, false otherwise. By default
            it will be false.
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildDropLocation:
          type: string
          description: Drop location of the build used for test run.
        buildFlavor:
          type: string
          description: 'Flavor of the build used for test run. (E.g: Release, Debug)'
        buildPlatform:
          type: string
          description: 'Platform of the build used for test run. (E.g.: x86, amd64)'
        buildReference:
          $ref: '#/components/schemas/BuildConfiguration'
        comment:
          type: string
          description: Comments entered by those analyzing the run.
        completeDate:
          type: string
          description: Completed date time of the run.
        configurationIds:
          type: array
          description: IDs of the test configurations associated with the run.
          items:
            type: integer
            format: int32
        controller:
          type: string
          description: Name of the test controller used for automated run.
        customTestFields:
          type: array
          description: Additional properties of test Run.
          items:
            $ref: '#/components/schemas/CustomTestField'
        dtlAutEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlTestEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dueDate:
          type: string
          description: Due date and time for test run.
        environmentDetails:
          $ref: '#/components/schemas/DtlEnvironmentDetails'
        errorMessage:
          type: string
          description: Error message associated with the run.
        filter:
          $ref: '#/components/schemas/RunFilter'
        iteration:
          type: string
          description: The iteration in which to create the run. Root iteration of
            the team project will be default
        name:
          type: string
          description: Name of the test run.
        owner:
          $ref: '#/components/schemas/IdentityRef'
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        plan:
          $ref: '#/components/schemas/ShallowReference'
        pointIds:
          type: array
          description: IDs of the test points to use in the run.
          items:
            type: integer
            format: int32
        releaseEnvironmentUri:
          type: string
          description: URI of release environment associated with the run.
        releaseReference:
          $ref: '#/components/schemas/ReleaseReference'
        releaseUri:
          type: string
          description: URI of release associated with the run.
        runSummary:
          type: array
          description: Run summary for run Type = NoConfigRun.
          items:
            $ref: '#/components/schemas/RunSummaryModel'
        runTimeout:
          type: string
          description: Timespan till the run times out.
          format: TimeSpan
        sourceWorkflow:
          type: string
          description: SourceWorkFlow(CI/CD) of the test run.
        startDate:
          type: string
          description: Start date time of the run.
        state:
          type: string
          description: The state of the run. Type TestRunState Valid states - NotStarted,
            InProgress, Waiting
        tags:
          type: array
          description: Tags to attach with the test run, maximum of 5 tags can be
            added to run.
          items:
            $ref: '#/components/schemas/TestTag'
        testConfigurationsMapping:
          type: string
          description: TestConfigurationMapping of the test run.
        testEnvironmentId:
          type: string
          description: ID of the test environment associated with the run.
        testSettings:
          $ref: '#/components/schemas/ShallowReference'
        type:
          type: string
          description: 'Type of the run(RunType) Valid Values : (Unspecified, Normal,
            Blocking, Web, MtrRunInitiatedFromWeb, RunWithDtlEnv, NoConfigRun)'
      description: Test run create details.
    RunFilter:
      type: object
      properties:
        sourceFilter:
          type: string
          description: filter for the test case sources (test containers)
        testCaseFilter:
          type: string
          description: filter for the test cases
      description: This class is used to provide the filters used for discovery
    RunStatistic:
      type: object
      properties:
        count:
          type: integer
          description: Test result count fo the given outcome.
          format: int32
        outcome:
          type: string
          description: Test result outcome
        resolutionState:
          $ref: '#/components/schemas/TestResolutionState'
        resultMetadata:
          type: string
          description: ResultMetadata for the given outcome/count.
          enum:
          - rerun
          - flaky
          x-ms-enum:
            name: ResultMetadata
            values:
            - value: rerun
              description: Rerun metadata
            - value: flaky
              description: Flaky metadata
        state:
          type: string
          description: State of the test run
      description: Test run statistics per outcome.
    RunSummary:
      type: object
      properties:
        duration:
          type: string
          description: Total time taken by runs with state completed and NeedInvestigation.
          format: TimeSpan
        noConfigRunsCount:
          type: integer
          description: NoConfig runs count.
          format: int32
        runSummaryByOutcome:
          type: object
          additionalProperties:
            type: integer
            format: int32
          description: Runs count by outcome for runs with state completed and NeedInvestigation
            runs.
        runSummaryByState:
          type: object
          additionalProperties:
            type: integer
            format: int32
          description: Runs count by state.
        totalRunsCount:
          type: integer
          description: Total runs count.
          format: int32
      description: Summary of runs for a pipeline instance.
    RunSummaryModel:
      type: object
      properties:
        duration:
          type: integer
          description: Total time taken in milliseconds.
          format: int64
        resultCount:
          type: integer
          description: Number of results for Outcome TestOutcome
          format: int32
        testOutcome:
          type: string
          description: Summary is based on outcome
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: Test has not been completed, or the test type does not
                report pass/failure.
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: Test was executed, but there were issues. Issues may involve
                exceptions or failed assertions.
            - value: inconclusive
              description: Test has completed, but we can't say if it passed or failed.
                May be used for aborted tests...
            - value: timeout
              description: The test timed out
            - value: aborted
              description: Test was aborted. This was not caused by a user gesture,
                but rather by a framework decision.
            - value: blocked
              description: Test had it chance for been executed but was not, as ITestElement.IsRunnable
                == false.
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
      description: Run summary for each output type of test.
    RunUpdateModel:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildDropLocation:
          type: string
          description: Drop location of the build used for test run.
        buildFlavor:
          type: string
          description: 'Flavor of the build used for test run. (E.g: Release, Debug)'
        buildPlatform:
          type: string
          description: 'Platform of the build used for test run. (E.g.: x86, amd64)'
        comment:
          type: string
          description: Comments entered by those analyzing the run.
        completedDate:
          type: string
          description: Completed date time of the run.
        controller:
          type: string
          description: Name of the test controller used for automated run.
        deleteInProgressResults:
          type: boolean
          description: true to delete inProgess Results , false otherwise.
        dtlAutEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironmentDetails:
          $ref: '#/components/schemas/DtlEnvironmentDetails'
        dueDate:
          type: string
          description: Due date and time for test run.
        errorMessage:
          type: string
          description: Error message associated with the run.
        iteration:
          type: string
          description: The iteration in which to create the run.
        logEntries:
          type: array
          description: Log entries associated with the run. Use a comma-separated
            list of multiple log entry objects. { logEntry }, { logEntry }, ...
          items:
            $ref: '#/components/schemas/TestMessageLogDetails'
        name:
          type: string
          description: Name of the test run.
        releaseEnvironmentUri:
          type: string
          description: URI of release environment associated with the run.
        releaseUri:
          type: string
          description: URI of release associated with the run.
        runSummary:
          type: array
          description: Run summary for run Type = NoConfigRun.
          items:
            $ref: '#/components/schemas/RunSummaryModel'
        sourceWorkflow:
          type: string
          description: SourceWorkFlow(CI/CD) of the test run.
        startedDate:
          type: string
          description: Start date time of the run.
        state:
          type: string
          description: The state of the test run Below are the valid values - NotStarted,
            InProgress, Completed, Aborted, Waiting
        substate:
          type: string
          description: The types of sub states for test run.
          enum:
          - none
          - creatingEnvironment
          - runningTests
          - canceledByUser
          - abortedBySystem
          - timedOut
          - pendingAnalysis
          - analyzed
          - cancellationInProgress
          x-ms-enum:
            name: TestRunSubstate
            values:
            - value: none
              description: Run with noState.
            - value: creatingEnvironment
              description: Run state while Creating Environment.
            - value: runningTests
              description: Run state while Running Tests.
            - value: canceledByUser
              description: Run state while Creating Environment.
            - value: abortedBySystem
              description: Run state when it is Aborted By the System.
            - value: timedOut
              description: Run state when run has timedOut.
            - value: pendingAnalysis
              description: Run state while Pending Analysis.
            - value: analyzed
              description: Run state after being Analysed.
            - value: cancellationInProgress
              description: Run state when cancellation is in Progress.
        tags:
          type: array
          description: Tags to attach with the test run.
          items:
            $ref: '#/components/schemas/TestTag'
        testEnvironmentId:
          type: string
          description: ID of the test environment associated with the run.
        testSettings:
          $ref: '#/components/schemas/ShallowReference'
      description: ""
    ShallowReference:
      type: object
      properties:
        id:
          type: string
          description: ID of the resource
        name:
          type: string
          description: Name of the linked resource (definition name, controller name,
            etc.)
        url:
          type: string
          description: Full http link to the resource
      description: An abstracted reference to some other resource. This class is used
        to provide the build data contracts with a uniform way to reference other
        resources in a way that provides easy traversal through links.
    ShallowTestCaseResult:
      type: object
      properties:
        automatedTestName:
          type: string
        automatedTestStorage:
          type: string
        durationInMs:
          type: number
          format: double
        id:
          type: integer
          format: int32
        isReRun:
          type: boolean
        outcome:
          type: string
        owner:
          type: string
        priority:
          type: integer
          format: int32
        refId:
          type: integer
          format: int32
        runId:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        testCaseTitle:
          type: string
      description: ""
    SharedStepModel:
      type: object
      properties:
        id:
          type: integer
          description: WorkItem shared step ID.
          format: int32
        revision:
          type: integer
          description: Shared step workitem revision.
          format: int32
      description: Reference to shared step workitem.
    StageReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of stage
          format: int32
        stageName:
          type: string
          description: Name of the stage. Maximum supported length for name is 256
            character.
      description: Stage in pipeline
    SuiteCreateModel:
      type: object
      properties:
        name:
          type: string
          description: Name of test suite.
        queryString:
          type: string
          description: For query based suites, query string that defines the suite.
        requirementIds:
          type: array
          description: For requirements test suites, the IDs of the requirements.
          items:
            type: integer
            format: int32
        suiteType:
          type: string
          description: Type of test suite to create. It can have value from DynamicTestSuite,
            StaticTestSuite and RequirementTestSuite.
      description: Suite create model
    SuiteEntry:
      type: object
      properties:
        childSuiteId:
          type: integer
          description: Id of child suite in the test suite.
          format: int32
        sequenceNumber:
          type: integer
          description: Sequence number for the test case or child test suite in the
            test suite.
          format: int32
        suiteId:
          type: integer
          description: Id for the test suite.
          format: int32
        testCaseId:
          type: integer
          description: Id of a test case in the test suite.
          format: int32
      description: A suite entry defines properties for a test suite.
    SuiteEntryUpdateModel:
      type: object
      properties:
        childSuiteId:
          type: integer
          description: Id of the child suite in the test suite.
          format: int32
        sequenceNumber:
          type: integer
          description: Updated sequence number for the test case or child test suite
            in the test suite.
          format: int32
        testCaseId:
          type: integer
          description: Id of the test case in the test suite.
          format: int32
      description: A model to define sequence of test suite entries in a test suite.
    SuiteTestCase:
      type: object
      properties:
        pointAssignments:
          type: array
          description: Point Assignment for test suite's test case.
          items:
            $ref: '#/components/schemas/PointAssignment'
        testCase:
          $ref: '#/components/schemas/WorkItemReference'
      description: Test case for the suite.
    SuiteTestCaseUpdateModel:
      type: object
      properties:
        configurations:
          type: array
          description: Shallow reference of configurations for the test cases in the
            suite.
          items:
            $ref: '#/components/schemas/ShallowReference'
      description: Test suite update model.
    SuiteUpdateModel:
      type: object
      properties:
        defaultConfigurations:
          type: array
          description: Shallow reference of default configurations for the suite.
          items:
            $ref: '#/components/schemas/ShallowReference'
        defaultTesters:
          type: array
          description: Shallow reference of test suite.
          items:
            $ref: '#/components/schemas/ShallowReference'
        inheritDefaultConfigurations:
          type: boolean
          description: Specifies if the default configurations have to be inherited
            from the parent test suite in which the test suite is created.
        name:
          type: string
          description: Test suite name
        parent:
          $ref: '#/components/schemas/ShallowReference'
        queryString:
          type: string
          description: For query based suites, the new query string.
      description: Test suite update model.
    TCMPropertyBag2:
      type: object
      properties:
        artifactId:
          type: integer
          format: int32
        artifactType:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
      description: ""
    TeamContext:
      type: object
      properties:
        project:
          type: string
          description: The team project Id or name.  Ignored if ProjectId is set.
        projectId:
          type: string
          description: The Team Project ID.  Required if Project is not set.
          format: uuid
        team:
          type: string
          description: The Team Id or name.  Ignored if TeamId is set.
        teamId:
          type: string
          description: The Team Id
          format: uuid
      description: The Team Context for an operation.
    TeamProjectReference:
      type: object
      properties:
        abbreviation:
          type: string
          description: Project abbreviation.
        defaultTeamImageUrl:
          type: string
          description: Url to default team identity image.
        description:
          type: string
          description: The project's description (if any).
        id:
          type: string
          description: Project identifier.
          format: uuid
        lastUpdateTime:
          type: string
          description: Project last update time.
          format: date-time
        name:
          type: string
          description: Project name.
        revision:
          type: integer
          description: Project revision.
          format: int64
        state:
          type: string
          description: Project state.
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: Project is in the process of being deleted.
            - value: new
              description: Project is in the process of being created.
            - value: wellFormed
              description: Project is completely created and ready to use.
            - value: createPending
              description: Project has been queued for creation, but the process has
                not yet started.
            - value: all
              description: All projects regardless of state.
            - value: unchanged
              description: Project has not been changed.
            - value: deleted
              description: Project has been deleted.
        url:
          type: string
          description: Url to the full version of the object.
        visibility:
          type: string
          description: Project visibility.
          enum:
          - private
          - public
          x-ms-enum:
            name: ProjectVisibility
            values:
            - value: private
              description: The project is only visible to users with explicit access.
            - value: public
              description: The project is visible to all.
      description: Represents a shallow reference to a TeamProject.
    TestActionResult:
      type: object
      properties:
        actionPath:
          type: string
        comment:
          type: string
        creationDate:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
        dateStarted:
          type: string
          format: date-time
        duration:
          type: integer
          format: int64
        errorMessage:
          type: string
        id:
          $ref: '#/components/schemas/LegacyTestCaseResultIdentifier'
        iterationId:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        outcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        sharedStepId:
          type: integer
          format: int32
        sharedStepRevision:
          type: integer
          format: int32
      description: ""
    TestActionResult2:
      type: object
      properties:
        actionPath:
          type: string
        comment:
          type: string
        creationDate:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
        dateStarted:
          type: string
          format: date-time
        duration:
          type: integer
          format: int64
        errorMessage:
          type: string
        iterationId:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        outcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        sharedStepId:
          type: integer
          format: int32
        sharedStepRevision:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    TestActionResultModel:
      description: Represents a test step result.
      allOf:
      - $ref: '#/components/schemas/TestResultModelBase'
    TestAttachment:
      type: object
      properties:
        attachmentType:
          type: string
          description: Attachment type.
          enum:
          - generalAttachment
          - codeCoverage
          - consoleLog
          x-ms-enum:
            name: AttachmentType
            values:
            - value: generalAttachment
              description: Attachment type GeneralAttachment , use this as default
                type unless you have other type.
            - value: codeCoverage
              description: Attachment type CodeCoverage.
            - value: consoleLog
              description: Attachment type ConsoleLog.
        comment:
          type: string
          description: Comment associated with attachment.
        createdDate:
          type: string
          description: Attachment created date.
          format: date-time
        fileName:
          type: string
          description: Attachment file name
        id:
          type: integer
          description: ID of the attachment.
          format: int32
        size:
          type: integer
          description: Attachment size.
          format: int64
        url:
          type: string
          description: Attachment Url.
      description: ""
    TestAttachmentReference:
      type: object
      properties:
        id:
          type: integer
          description: ID of the attachment.
          format: int32
        url:
          type: string
          description: Url to download the attachment.
      description: Reference to test attachment.
    TestAttachmentRequestModel:
      type: object
      properties:
        attachmentType:
          type: string
          description: Attachment type By Default it will be GeneralAttachment. It
            can be one of the following type. { GeneralAttachment, AfnStrip, BugFilingData,
            CodeCoverage, IntermediateCollectorData, RunConfig, TestImpactDetails,
            TmiTestRunDeploymentFiles, TmiTestRunReverseDeploymentFiles, TmiTestResultDetail,
            TmiTestRunSummary }
        comment:
          type: string
          description: Comment associated with attachment
        fileName:
          type: string
          description: Attachment filename
        stream:
          type: string
          description: Base64 encoded file stream
      description: Test attachment request model
    TestAuthoringDetails:
      type: object
      properties:
        configurationId:
          type: integer
          format: int32
        isAutomated:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        pointId:
          type: integer
          format: int32
        priority:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        runBy:
          type: string
          format: uuid
        state:
          type: string
          enum:
          - none
          - ready
          - completed
          - notReady
          - inProgress
          - maxValue
          x-ms-enum:
            name: TestPointState
            values:
            - value: none
              description: Default
            - value: ready
              description: The test point needs to be executed in order for the test
                pass to be considered complete.  Either the test has not been run
                before or the previous run failed.
            - value: completed
              description: The test has passed successfully and does not need to be
                re-run for the test pass to be considered complete.
            - value: notReady
              description: The test point needs to be executed but is not able to.
            - value: inProgress
              description: The test is being executed.
            - value: maxValue
              description: ""
        suiteId:
          type: integer
          format: int32
        testerId:
          type: string
          format: uuid
      description: ""
    TestCaseMetadata2:
      type: object
      properties:
        container:
          type: string
        name:
          type: string
        projectId:
          type: string
          format: uuid
        testMetadataId:
          type: integer
          format: int32
      description: ""
    TestCaseReference2:
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        automatedTestId:
          type: string
        automatedTestName:
          type: string
        automatedTestNameHash:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        automatedTestStorage:
          type: string
        automatedTestStorageHash:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        automatedTestType:
          type: string
        configurationId:
          type: integer
          format: int32
        createdBy:
          type: string
          format: uuid
        creationDate:
          type: string
          format: date-time
        lastRefTestRunDate:
          type: string
          format: date-time
        owner:
          type: string
        priority:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        projectId:
          type: string
          format: uuid
        testCaseId:
          type: integer
          format: int32
        testCaseRefId:
          type: integer
          format: int32
        testCaseRevision:
          type: integer
          format: int32
        testCaseTitle:
          type: string
        testPointId:
          type: integer
          format: int32
      description: ""
    TestCaseResult:
      type: object
      properties:
        afnStripId:
          type: integer
          description: Test attachment ID of action recording.
          format: int32
        area:
          $ref: '#/components/schemas/ShallowReference'
        associatedBugs:
          type: array
          description: Reference to bugs linked to test result.
          items:
            $ref: '#/components/schemas/ShallowReference'
        automatedTestId:
          type: string
          description: ID representing test method in a dll.
        automatedTestName:
          type: string
          description: Fully qualified name of test executed.
        automatedTestStorage:
          type: string
          description: Container to which test belongs.
        automatedTestType:
          type: string
          description: Type of automated test.
        automatedTestTypeId:
          type: string
          description: TypeId of automated test.
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildReference:
          $ref: '#/components/schemas/BuildReference'
        comment:
          type: string
          description: Comment in a test result with maxSize= 1000 chars.
        completedDate:
          type: string
          description: Time when test execution completed(UTC). Completed date should
            be greater than StartedDate.
          format: date-time
        computerName:
          type: string
          description: Machine name where test executed.
        configuration:
          $ref: '#/components/schemas/ShallowReference'
        createdDate:
          type: string
          description: Timestamp when test result created(UTC).
          format: date-time
        customFields:
          type: array
          description: Additional properties of test result.
          items:
            $ref: '#/components/schemas/CustomTestField'
        durationInMs:
          type: number
          description: Duration of test execution in milliseconds. If not provided
            value will be set as CompletedDate - StartedDate
          format: double
        errorMessage:
          type: string
          description: Error message in test execution.
        failingSince:
          $ref: '#/components/schemas/FailingSince'
        failureType:
          type: string
          description: Failure type of test result. Valid Value= (Known Issue, New
            Issue, Regression, Unknown, None)
        id:
          type: integer
          description: ID of a test result.
          format: int32
        iterationDetails:
          type: array
          description: Test result details of test iterations used only for Manual
            Testing.
          items:
            $ref: '#/components/schemas/TestIterationDetailsModel'
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last updated datetime of test result(UTC).
          format: date-time
        outcome:
          type: string
          description: Test outcome of test result. Valid values = (Unspecified, None,
            Passed, Failed, Inconclusive, Timeout, Aborted, Blocked, NotExecuted,
            Warning, Error, NotApplicable, Paused, InProgress, NotImpacted)
        owner:
          $ref: '#/components/schemas/IdentityRef'
        priority:
          type: integer
          description: Priority of test executed.
          format: int32
        project:
          $ref: '#/components/schemas/ShallowReference'
        release:
          $ref: '#/components/schemas/ShallowReference'
        releaseReference:
          $ref: '#/components/schemas/ReleaseReference'
        resetCount:
          type: integer
          description: ResetCount.
          format: int32
        resolutionState:
          type: string
          description: Resolution state of test result.
        resolutionStateId:
          type: integer
          description: ID of resolution state.
          format: int32
        resultGroupType:
          type: string
          description: Hierarchy type of the result, default value of None means its
            leaf node.
          enum:
          - none
          - rerun
          - dataDriven
          - orderedTest
          - generic
          x-ms-enum:
            name: ResultGroupType
            values:
            - value: none
              description: Leaf node of test result.
            - value: rerun
              description: Hierarchy type of test result.
            - value: dataDriven
              description: Hierarchy type of test result.
            - value: orderedTest
              description: Hierarchy type of test result.
            - value: generic
              description: Unknown hierarchy type.
        revision:
          type: integer
          description: Revision number of test result.
          format: int32
        runBy:
          $ref: '#/components/schemas/IdentityRef'
        stackTrace:
          type: string
          description: Stacktrace with maxSize= 1000 chars.
        startedDate:
          type: string
          description: Time when test execution started(UTC).
          format: date-time
        state:
          type: string
          description: State of test result. Type TestRunState.
        subResults:
          type: array
          description: List of sub results inside a test result, if ResultGroupType
            is not None, it holds corresponding type sub results.
          items:
            $ref: '#/components/schemas/TestSubResult'
        testCase:
          $ref: '#/components/schemas/ShallowReference'
        testCaseReferenceId:
          type: integer
          description: Reference ID of test used by test result. Type TestResultMetaData
          format: int32
        testCaseRevision:
          type: integer
          description: TestCaseRevision Number.
          format: int32
        testCaseTitle:
          type: string
          description: Name of test.
        testPlan:
          $ref: '#/components/schemas/ShallowReference'
        testPoint:
          $ref: '#/components/schemas/ShallowReference'
        testRun:
          $ref: '#/components/schemas/ShallowReference'
        testSuite:
          $ref: '#/components/schemas/ShallowReference'
        url:
          type: string
          description: Url of test result.
      description: Represents a test result.
    TestCaseResultAttachmentModel:
      type: object
      properties:
        actionPath:
          type: string
          description: Path identifier test step in test case workitem.
        id:
          type: integer
          description: Attachment ID.
          format: int32
        iterationId:
          type: integer
          description: Iteration ID.
          format: int32
        name:
          type: string
          description: Name of attachment.
        size:
          type: integer
          description: Attachment size.
          format: int64
        url:
          type: string
          description: Url to attachment.
      description: Test attachment information in a test iteration.
    TestCaseResultIdAndRev:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LegacyTestCaseResultIdentifier'
        revision:
          type: integer
          format: int32
      description: ""
    TestCaseResultIdentifier:
      type: object
      properties:
        testResultId:
          type: integer
          description: Test result ID.
          format: int32
        testRunId:
          type: integer
          description: Test run ID.
          format: int32
      description: Reference to a test result.
    TestCaseResultUpdateModel:
      type: object
      properties:
        associatedWorkItems:
          type: array
          items:
            type: integer
            format: int32
        automatedTestTypeId:
          type: string
        comment:
          type: string
        completedDate:
          type: string
        computerName:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomTestField'
        durationInMs:
          type: string
        errorMessage:
          type: string
        failureType:
          type: string
        outcome:
          type: string
        owner:
          $ref: '#/components/schemas/IdentityRef'
        resolutionState:
          type: string
        runBy:
          $ref: '#/components/schemas/IdentityRef'
        stackTrace:
          type: string
        startedDate:
          type: string
        state:
          type: string
        testCasePriority:
          type: string
        testResult:
          $ref: '#/components/schemas/ShallowReference'
      description: ""
    TestConfiguration:
      type: object
      properties:
        area:
          $ref: '#/components/schemas/ShallowReference'
        description:
          type: string
          description: Description of the configuration
        id:
          type: integer
          description: Id of the configuration
          format: int32
        isDefault:
          type: boolean
          description: Is the configuration a default for the test plans
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last Updated Data
          format: date-time
        name:
          type: string
          description: Name of the configuration
        project:
          $ref: '#/components/schemas/ShallowReference'
        revision:
          type: integer
          description: Revision of the the configuration
          format: int32
        state:
          type: string
          description: State of the configuration
          enum:
          - active
          - inactive
          x-ms-enum:
            name: TestConfigurationState
            values:
            - value: active
              description: The configuration can be used for new test runs.
            - value: inactive
              description: The configuration has been retired and should not be used
                for new test runs.
        url:
          type: string
          description: Url of Configuration Resource
        values:
          type: array
          description: Dictionary of Test Variable, Selected Value
          items:
            $ref: '#/components/schemas/NameValuePair'
      description: Test configuration
    TestEnvironment:
      type: object
      properties:
        environmentId:
          type: string
          description: Test Environment Id.
          format: uuid
        environmentName:
          type: string
          description: Test Environment Name.
      description: Test environment Detail.
    TestExecutionReportData:
      type: object
      properties:
        reportData:
          type: array
          items:
            $ref: '#/components/schemas/DatedTestFieldData'
      description: ""
    TestExtensionField:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/TestExtensionFieldDetails'
        value:
          type: object
          properties: {}
      description: ""
    TestExtensionFieldDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
        isResultScoped:
          type: boolean
        isRunScoped:
          type: boolean
        isSystemField:
          type: boolean
        name:
          type: string
        type:
          type: string
          enum:
          - bigInt
          - binary
          - bit
          - char
          - dateTime
          - decimal
          - float
          - image
          - int
          - money
          - nChar
          - nText
          - nVarChar
          - real
          - uniqueIdentifier
          - smallDateTime
          - smallInt
          - smallMoney
          - text
          - timestamp
          - tinyInt
          - varBinary
          - varChar
          - variant
          - xml
          - udt
          - structured
          - date
          - time
          - dateTime2
          - dateTimeOffset
          x-ms-enum:
            name: SqlDbType
            values:
            - value: bigInt
              description: ""
            - value: binary
              description: ""
            - value: bit
              description: ""
            - value: char
              description: ""
            - value: dateTime
              description: ""
            - value: decimal
              description: ""
            - value: float
              description: ""
            - value: image
              description: ""
            - value: int
              description: ""
            - value: money
              description: ""
            - value: nChar
              description: ""
            - value: nText
              description: ""
            - value: nVarChar
              description: ""
            - value: real
              description: ""
            - value: uniqueIdentifier
              description: ""
            - value: smallDateTime
              description: ""
            - value: smallInt
              description: ""
            - value: smallMoney
              description: ""
            - value: text
              description: ""
            - value: timestamp
              description: ""
            - value: tinyInt
              description: ""
            - value: varBinary
              description: ""
            - value: varChar
              description: ""
            - value: variant
              description: ""
            - value: xml
              description: ""
            - value: udt
              description: ""
            - value: structured
              description: ""
            - value: date
              description: ""
            - value: time
              description: ""
            - value: dateTime2
              description: ""
            - value: dateTimeOffset
              description: ""
      description: ""
    TestFailureDetails:
      type: object
      properties:
        count:
          type: integer
          format: int32
        testResults:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseResultIdentifier'
      description: ""
    TestFailuresAnalysis:
      type: object
      properties:
        existingFailures:
          $ref: '#/components/schemas/TestFailureDetails'
        fixedTests:
          $ref: '#/components/schemas/TestFailureDetails'
        newFailures:
          $ref: '#/components/schemas/TestFailureDetails'
        previousContext:
          $ref: '#/components/schemas/TestResultsContext'
      description: ""
    TestFailureType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        project:
          $ref: '#/components/schemas/ShallowReference'
      description: ""
    TestFieldData:
      type: object
      properties:
        dimensions:
          type: object
          additionalProperties:
            type: object
            properties: {}
        measure:
          type: integer
          format: int64
      description: ""
    TestFieldsEx2:
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        fieldName:
          type: string
        fieldType:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        isResultScoped:
          type: boolean
        isRunScoped:
          type: boolean
        isSystemField:
          type: boolean
        projectId:
          type: string
          format: uuid
      description: ""
    TestFlakyIdentifier:
      type: object
      properties:
        branchName:
          type: string
          description: Branch Name where Flakiness has to be Marked/Unmarked
        isFlaky:
          type: boolean
          description: State for Flakiness
      description: Test Flaky Identifier
    TestHistoryQuery:
      type: object
      properties:
        automatedTestName:
          type: string
          description: Automated test name of the TestCase.
        branch:
          type: string
          description: Results to be get for a particular branches.
        buildDefinitionId:
          type: integer
          description: Get the results history only for this BuildDefinitionId. This
            to get used in query GroupBy should be Branch. If this is provided, Branch
            will have no use.
          format: int32
        continuationToken:
          type: string
          description: It will be filled by server. If not null means there are some
            results still to be get, and we need to call this REST API with this ContinuousToken.
            It is not supposed to be created (or altered, if received from server
            in last batch) by user.
        groupBy:
          type: string
          description: Group the result on the basis of TestResultGroupBy. This can
            be Branch, Environment or null(if results are fetched by BuildDefinitionId)
          enum:
          - branch
          - environment
          x-ms-enum:
            name: TestResultGroupBy
            values:
            - value: branch
              description: Group the results by branches
            - value: environment
              description: Group the results by environment
        maxCompleteDate:
          type: string
          description: History to get between time interval MaxCompleteDate and  (MaxCompleteDate
            - TrendDays). Default is current date time.
          format: date-time
        releaseEnvDefinitionId:
          type: integer
          description: Get the results history only for this ReleaseEnvDefinitionId.
            This to get used in query GroupBy should be Environment.
          format: int32
        resultsForGroup:
          type: array
          description: List of TestResultHistoryForGroup which are grouped by GroupBy
          items:
            $ref: '#/components/schemas/TestResultHistoryForGroup'
        testCaseId:
          type: integer
          description: Get the results history only for this testCaseId. This to get
            used in query to filter the result along with automatedtestname
          format: int32
        trendDays:
          type: integer
          description: Number of days for which history to collect. Maximum supported
            value is 7 days. Default is 7 days.
          format: int32
      description: Filter to get TestCase result history.
    TestIterationDetailsModel:
      type: object
      properties:
        actionResults:
          type: array
          description: Test step results in an iteration.
          items:
            $ref: '#/components/schemas/TestActionResultModel'
        attachments:
          type: array
          description: Reference to attachments in test iteration result.
          items:
            $ref: '#/components/schemas/TestCaseResultAttachmentModel'
        comment:
          type: string
          description: Comment in test iteration result.
        completedDate:
          type: string
          description: Time when execution completed(UTC).
          format: date-time
        durationInMs:
          type: number
          description: Duration of execution.
          format: double
        errorMessage:
          type: string
          description: Error message in test iteration result execution.
        id:
          type: integer
          description: ID of test iteration result.
          format: int32
        outcome:
          type: string
          description: Test outcome if test iteration result.
        parameters:
          type: array
          description: Test parameters in an iteration.
          items:
            $ref: '#/components/schemas/TestResultParameterModel'
        startedDate:
          type: string
          description: Time when execution started(UTC).
          format: date-time
        url:
          type: string
          description: Url to test iteration result.
      description: Represents a test iteration result.
    TestLog:
      type: object
      properties:
        logReference:
          $ref: '#/components/schemas/TestLogReference'
        metaData:
          type: object
          additionalProperties:
            type: string
          description: Meta data for Log file
        modifiedOn:
          type: string
          description: LastUpdatedDate for Log file
          format: date-time
        size:
          type: integer
          description: Size in Bytes for Log file
          format: int64
      description: Represents Test Log Result object.
    TestLogReference:
      type: object
      properties:
        buildId:
          type: integer
          description: BuildId for test log, if context is build
          format: int32
        filePath:
          type: string
          description: FileName for log file
        releaseEnvId:
          type: integer
          description: ReleaseEnvId for test log, if context is Release
          format: int32
        releaseId:
          type: integer
          description: ReleaseId for test log, if context is Release
          format: int32
        resultId:
          type: integer
          description: Resultid for test log, if context is run and log is related
            to result
          format: int32
        runId:
          type: integer
          description: runid for test log, if context is run
          format: int32
        scope:
          type: string
          description: Test Log Scope
          enum:
          - run
          x-ms-enum:
            name: TestLogScope
            values:
            - value: run
              description: Log file is associated with Run, result, subresult
        subResultId:
          type: integer
          description: SubResultid for test log, if context is run and log is related
            to subresult
          format: int32
        type:
          type: string
          description: Log Type
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
      description: Test Log Reference object
    TestLogStatus:
      type: object
      properties:
        exception:
          type: string
          description: Exception message
        status:
          type: string
          description: Test Log Status code
          enum:
          - success
          - failed
          - fileAlreadyExists
          - invalidInput
          - invalidFileName
          - invalidContainer
          - transferFailed
          - featureDisabled
          - buildDoesNotExist
          - runDoesNotExist
          - containerNotCreated
          - apiNotSupported
          - fileSizeExceeds
          - containerNotFound
          - fileNotFound
          - directoryNotFound
          - storageCapacityExceeded
          x-ms-enum:
            name: TestLogStatusCode
            values:
            - value: success
              description: Operation is successful
            - value: failed
              description: Operation failed
            - value: fileAlreadyExists
              description: Operation failed due to file already exist
            - value: invalidInput
              description: Invalid input provided by user
            - value: invalidFileName
              description: Invalid file name provided by user
            - value: invalidContainer
              description: Error occurred while operating on container
            - value: transferFailed
              description: Blob Transfer Error
            - value: featureDisabled
              description: TestLogStore feature is not enabled
            - value: buildDoesNotExist
              description: Build for which operation is requested does not exist
            - value: runDoesNotExist
              description: Run for which operation is requested does not exist
            - value: containerNotCreated
              description: Container cannot be created
            - value: apiNotSupported
              description: Api is not supported
            - value: fileSizeExceeds
              description: File size is greater than the limitation
            - value: containerNotFound
              description: Container is not found for which operation is requested
            - value: fileNotFound
              description: File cannot be found
            - value: directoryNotFound
              description: Directory cannot be found
            - value: storageCapacityExceeded
              description: Storage capacity exceeded
        transferFailureType:
          type: string
          description: Blob Transfer Error code
      description: Represents Test Log Status object.
    TestLogStoreEndpointDetails:
      type: object
      properties:
        endpointSASUri:
          type: string
          description: Test log store connection Uri.
        endpointType:
          type: string
          description: Test log store endpoint type.
          enum:
          - root
          - file
          x-ms-enum:
            name: TestLogStoreEndpointType
            values:
            - value: root
              description: Endpoint type is scoped to root
            - value: file
              description: Endpoint type is scoped to file
        status:
          type: string
          description: Test log store status code
          enum:
          - success
          - failed
          - fileAlreadyExists
          - invalidInput
          - invalidFileName
          - invalidContainer
          - transferFailed
          - featureDisabled
          - buildDoesNotExist
          - runDoesNotExist
          - containerNotCreated
          - apiNotSupported
          - fileSizeExceeds
          - containerNotFound
          - fileNotFound
          - directoryNotFound
          - storageCapacityExceeded
          x-ms-enum:
            name: TestLogStatusCode
            values:
            - value: success
              description: Operation is successful
            - value: failed
              description: Operation failed
            - value: fileAlreadyExists
              description: Operation failed due to file already exist
            - value: invalidInput
              description: Invalid input provided by user
            - value: invalidFileName
              description: Invalid file name provided by user
            - value: invalidContainer
              description: Error occurred while operating on container
            - value: transferFailed
              description: Blob Transfer Error
            - value: featureDisabled
              description: TestLogStore feature is not enabled
            - value: buildDoesNotExist
              description: Build for which operation is requested does not exist
            - value: runDoesNotExist
              description: Run for which operation is requested does not exist
            - value: containerNotCreated
              description: Container cannot be created
            - value: apiNotSupported
              description: Api is not supported
            - value: fileSizeExceeds
              description: File size is greater than the limitation
            - value: containerNotFound
              description: Container is not found for which operation is requested
            - value: fileNotFound
              description: File cannot be found
            - value: directoryNotFound
              description: Directory cannot be found
            - value: storageCapacityExceeded
              description: Storage capacity exceeded
      description: Represents Test Log store endpoint details.
    TestMessageLog2:
      type: object
      properties:
        testMessageLogId:
          type: integer
          format: int32
      description: ""
    TestMessageLogDetails:
      type: object
      properties:
        dateCreated:
          type: string
          description: Date when the resource is created
          format: date-time
        entryId:
          type: integer
          description: Id of the resource
          format: int32
        message:
          type: string
          description: Message of the resource
      description: An abstracted reference to some other resource. This class is used
        to provide the build data contracts with a uniform way to reference other
        resources in a way that provides easy traversal through links.
    TestMessageLogEntry:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
        entryId:
          type: integer
          format: int32
        logLevel:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        logUser:
          type: string
          format: uuid
        logUserName:
          type: string
        message:
          type: string
        testMessageLogId:
          type: integer
          format: int32
      description: ""
    TestMessageLogEntry2:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
        entryId:
          type: integer
          format: int32
        logLevel:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        logUser:
          type: string
          format: uuid
        message:
          type: string
        testMessageLogId:
          type: integer
          format: int32
      description: ""
    TestMethod:
      type: object
      properties:
        container:
          type: string
        name:
          type: string
      description: ""
    TestOperationReference:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        url:
          type: string
      description: Class representing a reference to an operation.
    TestOutcomeSettings:
      type: object
      properties:
        syncOutcomeAcrossSuites:
          type: boolean
          description: Value to configure how test outcomes for the same tests across
            suites are shown
      description: Test outcome settings
    TestParameter2:
      type: object
      properties:
        actionPath:
          type: string
        actual:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        creationDate:
          type: string
          format: date-time
        dataType:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        dateModified:
          type: string
          format: date-time
        expected:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        iterationId:
          type: integer
          format: int32
        parameterName:
          type: string
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    TestPlan:
      type: object
      properties:
        area:
          $ref: '#/components/schemas/ShallowReference'
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildDefinition:
          $ref: '#/components/schemas/ShallowReference'
        description:
          type: string
          description: Description of the test plan.
        endDate:
          type: string
          description: End date for the test plan.
          format: date-time
        id:
          type: integer
          description: ID of the test plan.
          format: int32
        iteration:
          type: string
          description: Iteration path of the test plan.
        name:
          type: string
          description: Name of the test plan.
        owner:
          $ref: '#/components/schemas/IdentityRef'
        previousBuild:
          $ref: '#/components/schemas/ShallowReference'
        project:
          $ref: '#/components/schemas/ShallowReference'
        releaseEnvironmentDefinition:
          $ref: '#/components/schemas/ReleaseEnvironmentDefinitionReference'
        revision:
          type: integer
          description: Revision of the test plan.
          format: int32
        rootSuite:
          $ref: '#/components/schemas/ShallowReference'
        startDate:
          type: string
          description: Start date for the test plan.
          format: date-time
        state:
          type: string
          description: State of the test plan.
        testOutcomeSettings:
          $ref: '#/components/schemas/TestOutcomeSettings'
        updatedBy:
          $ref: '#/components/schemas/IdentityRef'
        updatedDate:
          type: string
          format: date-time
        url:
          type: string
          description: URL of the test plan resource.
      description: The test plan resource.
    TestPlanCloneRequest:
      type: object
      properties:
        destinationTestPlan:
          $ref: '#/components/schemas/TestPlan'
        options:
          $ref: '#/components/schemas/CloneOptions'
        suiteIds:
          type: array
          items:
            type: integer
            format: int32
      description: ""
    TestPlanHubData:
      type: object
      properties:
        selectedSuiteId:
          type: integer
          format: int32
        testPlan:
          $ref: '#/components/schemas/TestPlan'
        testPoints:
          type: array
          items:
            $ref: '#/components/schemas/TestPoint'
        testSuites:
          type: array
          items:
            $ref: '#/components/schemas/TestSuite'
        totalTestPoints:
          type: integer
          format: int32
      description: ""
    TestPlansWithSelection:
      type: object
      properties:
        lastSelectedPlan:
          type: integer
          format: int32
        lastSelectedSuite:
          type: integer
          format: int32
        plans:
          type: array
          items:
            $ref: '#/components/schemas/TestPlan'
      description: ""
    TestPoint:
      type: object
      properties:
        assignedTo:
          $ref: '#/components/schemas/IdentityRef'
        automated:
          type: boolean
          description: Automated.
        comment:
          type: string
          description: Comment associated with test point.
        configuration:
          $ref: '#/components/schemas/ShallowReference'
        failureType:
          type: string
          description: Failure type of test point.
        id:
          type: integer
          description: ID of the test point.
          format: int32
        lastResetToActive:
          type: string
          description: Last date when test point was reset to Active.
          format: date-time
        lastResolutionStateId:
          type: integer
          description: Last resolution state id of test point.
          format: int32
        lastResult:
          $ref: '#/components/schemas/ShallowReference'
        lastResultDetails:
          $ref: '#/components/schemas/LastResultDetails'
        lastResultState:
          type: string
          description: Last result state of test point.
        lastRunBuildNumber:
          type: string
          description: LastRun build number of test point.
        lastTestRun:
          $ref: '#/components/schemas/ShallowReference'
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last updated date of test point.
          format: date-time
        outcome:
          type: string
          description: Outcome of test point.
        revision:
          type: integer
          description: Revision number.
          format: int32
        state:
          type: string
          description: State of test point.
        suite:
          $ref: '#/components/schemas/ShallowReference'
        testCase:
          $ref: '#/components/schemas/WorkItemReference'
        testPlan:
          $ref: '#/components/schemas/ShallowReference'
        url:
          type: string
          description: Test point Url.
        workItemProperties:
          type: array
          description: Work item properties of test point.
          items:
            type: object
            properties: {}
      description: Test point.
    TestPointReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - none
          - ready
          - completed
          - notReady
          - inProgress
          - maxValue
          x-ms-enum:
            name: TestPointState
            values:
            - value: none
              description: Default
            - value: ready
              description: The test point needs to be executed in order for the test
                pass to be considered complete.  Either the test has not been run
                before or the previous run failed.
            - value: completed
              description: The test has passed successfully and does not need to be
                re-run for the test pass to be considered complete.
            - value: notReady
              description: The test point needs to be executed but is not able to.
            - value: inProgress
              description: The test is being executed.
            - value: maxValue
              description: ""
      description: ""
    TestPointsEvent:
      type: object
      properties:
        projectName:
          type: string
        testPoints:
          type: array
          items:
            $ref: '#/components/schemas/TestPointReference'
      description: ""
    TestPointsQuery:
      type: object
      properties:
        orderBy:
          type: string
          description: Order by results.
        points:
          type: array
          description: List of test points
          items:
            $ref: '#/components/schemas/TestPoint'
        pointsFilter:
          $ref: '#/components/schemas/PointsFilter'
        witFields:
          type: array
          description: List of workitem fields to get.
          items:
            type: string
      description: Test point query class.
    TestPointsUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TestPointsEvent'
    TestResolutionState:
      type: object
      properties:
        id:
          type: integer
          description: Test Resolution state Id.
          format: int32
        name:
          type: string
          description: Test Resolution State Name.
        project:
          $ref: '#/components/schemas/ShallowReference'
      description: Test Resolution State Details.
    TestResult2:
      type: object
      properties:
        afnStripId:
          type: integer
          format: int32
        computerName:
          type: string
        creationDate:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
        dateStarted:
          type: string
          format: date-time
        effectivePointState:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        failureType:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        outcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        owner:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        resetCount:
          type: integer
          format: int32
        resolutionStateId:
          type: integer
          format: int32
        revision:
          type: integer
          format: int32
        runBy:
          type: string
          format: uuid
        state:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        testCaseRefId:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    TestResultAcrossProjectResponse:
      type: object
      properties:
        projectName:
          type: string
        testResult:
          $ref: '#/components/schemas/LegacyTestCaseResult'
      description: ""
    TestResultAttachment:
      type: object
      properties:
        actionPath:
          type: string
        attachmentType:
          type: string
          enum:
          - generalAttachment
          - codeCoverage
          - consoleLog
          x-ms-enum:
            name: AttachmentType
            values:
            - value: generalAttachment
              description: Attachment type GeneralAttachment , use this as default
                type unless you have other type.
            - value: codeCoverage
              description: Attachment type CodeCoverage.
            - value: consoleLog
              description: Attachment type ConsoleLog.
        comment:
          type: string
        creationDate:
          type: string
          format: date-time
        downloadQueryString:
          type: string
        fileName:
          type: string
        id:
          type: integer
          format: int32
        isComplete:
          type: boolean
        iterationId:
          type: integer
          format: int32
        length:
          type: integer
          format: int64
        sessionId:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
        tmiRunId:
          type: string
          format: uuid
      description: ""
    TestResultAttachmentIdentity:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int32
        sessionId:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    TestResultCreateModel:
      type: object
      properties:
        area:
          $ref: '#/components/schemas/ShallowReference'
        associatedWorkItems:
          type: array
          items:
            type: integer
            format: int32
        automatedTestId:
          type: string
        automatedTestName:
          type: string
        automatedTestStorage:
          type: string
        automatedTestType:
          type: string
        automatedTestTypeId:
          type: string
        comment:
          type: string
        completedDate:
          type: string
        computerName:
          type: string
        configuration:
          $ref: '#/components/schemas/ShallowReference'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomTestField'
        durationInMs:
          type: string
        errorMessage:
          type: string
        failureType:
          type: string
        outcome:
          type: string
        owner:
          $ref: '#/components/schemas/IdentityRef'
        resolutionState:
          type: string
        runBy:
          $ref: '#/components/schemas/IdentityRef'
        stackTrace:
          type: string
        startedDate:
          type: string
        state:
          type: string
        testCase:
          $ref: '#/components/schemas/ShallowReference'
        testCasePriority:
          type: string
        testCaseTitle:
          type: string
        testPoint:
          $ref: '#/components/schemas/ShallowReference'
      description: ""
    TestResultDocument:
      type: object
      properties:
        operationReference:
          $ref: '#/components/schemas/TestOperationReference'
        payload:
          $ref: '#/components/schemas/TestResultPayload'
      description: ""
    TestResultFailuresAnalysis:
      type: object
      properties:
        existingFailures:
          $ref: '#/components/schemas/TestFailureDetails'
        fixedTests:
          $ref: '#/components/schemas/TestFailureDetails'
        newFailures:
          $ref: '#/components/schemas/TestFailureDetails'
      description: ""
    TestResultHistory:
      type: object
      properties:
        groupByField:
          type: string
        resultsForGroup:
          type: array
          items:
            $ref: '#/components/schemas/TestResultHistoryDetailsForGroup'
      description: ""
    TestResultHistoryDetailsForGroup:
      type: object
      properties:
        groupByValue:
          type: object
          properties: {}
        latestResult:
          $ref: '#/components/schemas/TestCaseResult'
      description: ""
    TestResultHistoryForGroup:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the group.
        groupByValue:
          type: string
          description: Name or Id of the group identifier by which results are grouped
            together.
        results:
          type: array
          description: List of results for GroupByValue
          items:
            $ref: '#/components/schemas/TestCaseResult'
      description: List of test results filtered on the basis of GroupByValue
    TestResultMetaData:
      type: object
      properties:
        automatedTestName:
          type: string
          description: AutomatedTestName of test result.
        automatedTestStorage:
          type: string
          description: AutomatedTestStorage of test result.
        flakyIdentifiers:
          type: array
          description: List of Flaky Identifier for TestCaseReferenceId
          items:
            $ref: '#/components/schemas/TestFlakyIdentifier'
        owner:
          type: string
          description: Owner of test result.
        priority:
          type: integer
          description: Priority of test result.
          format: int32
        testCaseReferenceId:
          type: integer
          description: ID of TestCaseReference.
          format: int32
        testCaseTitle:
          type: string
          description: TestCaseTitle of test result.
      description: Represents a Meta Data of a test result.
    TestResultMetaDataUpdateInput:
      type: object
      properties:
        flakyIdentifiers:
          type: array
          description: List of Flaky Identifiers
          items:
            $ref: '#/components/schemas/TestFlakyIdentifier'
      description: Represents a TestResultMetaData Input
    TestResultMetaDataUpdateResponse:
      type: object
      properties:
        status:
          type: string
      description: ""
    TestResultModelBase:
      type: object
      properties:
        comment:
          type: string
          description: Comment in result.
        completedDate:
          type: string
          description: Time when execution completed(UTC).
          format: date-time
        durationInMs:
          type: number
          description: Duration of execution.
          format: double
        errorMessage:
          type: string
          description: Error message in result.
        outcome:
          type: string
          description: Test outcome of result.
        startedDate:
          type: string
          description: Time when execution started(UTC).
          format: date-time
      description: ""
    TestResultParameter:
      type: object
      properties:
        actionPath:
          type: string
        actual:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        expected:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        iterationId:
          type: integer
          format: int32
        parameterName:
          type: string
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    TestResultParameterModel:
      type: object
      properties:
        actionPath:
          type: string
          description: Test step path where parameter is referenced.
        iterationId:
          type: integer
          description: Iteration ID.
          format: int32
        parameterName:
          type: string
          description: Name of parameter.
        stepIdentifier:
          type: string
          description: 'This is step Id of test case. For shared step, it is step
            Id of shared step in test case workitem; step Id in shared step. Example:
            TestCase workitem has two steps: 1) Normal step with Id = 1 2) Shared
            Step with Id = 2. Inside shared step: a) Normal Step with Id = 1 Value
            for StepIdentifier for First step: "1" Second step: "2;1"'
        url:
          type: string
          description: Url of test parameter. Deprecated in hosted environment.
        value:
          type: string
          description: Value of parameter.
      description: Test parameter information in a test iteration.
    TestResultPayload:
      type: object
      properties:
        comment:
          type: string
        name:
          type: string
        stream:
          type: string
      description: ""
    TestResultReset2:
      type: object
      properties:
        auditIdentity:
          type: string
          format: uuid
        dateModified:
          type: string
          format: date-time
        projectId:
          type: string
          format: uuid
        revision:
          type: integer
          format: int32
        testResultId:
          type: integer
          format: int32
        testResultRV:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        testRunId:
          type: integer
          format: int32
      description: ""
    TestResultsContext:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildReference'
        contextType:
          type: string
          enum:
          - build
          - release
          - pipeline
          x-ms-enum:
            name: TestResultsContextType
            values:
            - value: build
              description: ""
            - value: release
              description: ""
            - value: pipeline
              description: ""
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        release:
          $ref: '#/components/schemas/ReleaseReference'
      description: ""
    TestResultsDetails:
      type: object
      properties:
        groupByField:
          type: string
        resultsForGroup:
          type: array
          items:
            $ref: '#/components/schemas/TestResultsDetailsForGroup'
      description: ""
    TestResultsDetailsForGroup:
      type: object
      properties:
        groupByValue:
          type: object
          properties: {}
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseResult'
        resultsCountByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        tags:
          type: array
          items:
            type: string
      description: ""
    TestResultsEx2:
      type: object
      properties:
        bitValue:
          type: boolean
        creationDate:
          type: string
          format: date-time
        dateTimeValue:
          type: string
          format: date-time
        fieldId:
          type: integer
          format: int32
        fieldName:
          type: string
        floatValue:
          type: number
          format: double
        guidValue:
          type: string
          format: uuid
        intValue:
          type: integer
          format: int32
        projectId:
          type: string
          format: uuid
        stringValue:
          type: string
        testResultId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
      description: ""
    TestResultsGroupsForBuild:
      type: object
      properties:
        buildId:
          type: integer
          description: BuildId for which groupby result is fetched.
          format: int32
        fields:
          type: array
          description: The group by results
          items:
            $ref: '#/components/schemas/FieldDetailsForTestResults'
      description: ""
    TestResultsGroupsForRelease:
      type: object
      properties:
        fields:
          type: array
          description: The group by results
          items:
            $ref: '#/components/schemas/FieldDetailsForTestResults'
        releaseEnvId:
          type: integer
          description: Release Environment Id for which groupby result is fetched.
          format: int32
        releaseId:
          type: integer
          description: ReleaseId for which groupby result is fetched.
          format: int32
      description: ""
    TestResultsQuery:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseResult'
        resultsFilter:
          $ref: '#/components/schemas/ResultsFilter'
      description: ""
    TestResultsSettings:
      type: object
      properties:
        flakySettings:
          $ref: '#/components/schemas/FlakySettings'
        newTestResultLoggingSettings:
          $ref: '#/components/schemas/NewTestResultLoggingSettings'
      description: ""
    TestResultSummary:
      type: object
      properties:
        aggregatedResultsAnalysis:
          $ref: '#/components/schemas/AggregatedResultsAnalysis'
        noConfigRunsCount:
          type: integer
          format: int32
        teamProject:
          $ref: '#/components/schemas/TeamProjectReference'
        testFailures:
          $ref: '#/components/schemas/TestFailuresAnalysis'
        testResultsContext:
          $ref: '#/components/schemas/TestResultsContext'
        totalRunsCount:
          type: integer
          format: int32
      description: ""
    TestResultsUpdateSettings:
      type: object
      properties:
        flakySettings:
          $ref: '#/components/schemas/FlakySettings'
        newTestResultLoggingSettings:
          $ref: '#/components/schemas/NewTestResultLoggingSettings'
      description: ""
    TestResultsWithWatermark:
      type: object
      properties:
        changedDate:
          type: string
          format: date-time
        pointsResults:
          type: array
          items:
            $ref: '#/components/schemas/PointsResults2'
        resultId:
          type: integer
          format: int32
        runId:
          type: integer
          format: int32
      description: ""
    TestResultTrendFilter:
      type: object
      properties:
        branchNames:
          type: array
          items:
            type: string
        buildCount:
          type: integer
          format: int32
        definitionIds:
          type: array
          items:
            type: integer
            format: int32
        envDefinitionIds:
          type: array
          items:
            type: integer
            format: int32
        maxCompleteDate:
          type: string
          format: date-time
        publishContext:
          type: string
        testRunTitles:
          type: array
          items:
            type: string
        trendDays:
          type: integer
          format: int32
      description: ""
    TestRun:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildConfiguration:
          $ref: '#/components/schemas/BuildConfiguration'
        comment:
          type: string
          description: Comments entered by those analyzing the run.
        completedDate:
          type: string
          description: Completed date time of the run.
          format: date-time
        controller:
          type: string
          description: Test Run Controller.
        createdDate:
          type: string
          description: Test Run CreatedDate.
          format: date-time
        customFields:
          type: array
          description: List of Custom Fields for TestRun.
          items:
            $ref: '#/components/schemas/CustomTestField'
        dropLocation:
          type: string
          description: Drop Location for the test Run.
        dtlAutEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironmentCreationDetails:
          $ref: '#/components/schemas/DtlEnvironmentDetails'
        dueDate:
          type: string
          description: Due date and time for test run.
          format: date-time
        errorMessage:
          type: string
          description: Error message associated with the run.
        filter:
          $ref: '#/components/schemas/RunFilter'
        id:
          type: integer
          description: ID of the test run.
          format: int32
        incompleteTests:
          type: integer
          description: Number of Incomplete Tests.
          format: int32
        isAutomated:
          type: boolean
          description: true if test run is automated, false otherwise.
        iteration:
          type: string
          description: The iteration to which the run belongs.
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last updated date and time
          format: date-time
        name:
          type: string
          description: Name of the test run.
        notApplicableTests:
          type: integer
          description: Number of Not Applicable Tests.
          format: int32
        owner:
          $ref: '#/components/schemas/IdentityRef'
        passedTests:
          type: integer
          description: Number of passed tests in the run
          format: int32
        phase:
          type: string
          description: Phase/State for the testRun.
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        plan:
          $ref: '#/components/schemas/ShallowReference'
        postProcessState:
          type: string
          description: Post Process State.
        project:
          $ref: '#/components/schemas/ShallowReference'
        release:
          $ref: '#/components/schemas/ReleaseReference'
        releaseEnvironmentUri:
          type: string
          description: Release Environment Uri for TestRun.
        releaseUri:
          type: string
          description: Release Uri for TestRun.
        revision:
          type: integer
          format: int32
        runStatistics:
          type: array
          description: RunSummary by outcome.
          items:
            $ref: '#/components/schemas/RunStatistic'
        startedDate:
          type: string
          description: Start date time of the run.
          format: date-time
        state:
          type: string
          description: The state of the run. Type TestRunState Valid states - Unspecified
            ,NotStarted, InProgress, Completed, Waiting, Aborted, NeedsInvestigation
        substate:
          type: string
          description: TestRun Substate.
          enum:
          - none
          - creatingEnvironment
          - runningTests
          - canceledByUser
          - abortedBySystem
          - timedOut
          - pendingAnalysis
          - analyzed
          - cancellationInProgress
          x-ms-enum:
            name: TestRunSubstate
            values:
            - value: none
              description: Run with noState.
            - value: creatingEnvironment
              description: Run state while Creating Environment.
            - value: runningTests
              description: Run state while Running Tests.
            - value: canceledByUser
              description: Run state while Creating Environment.
            - value: abortedBySystem
              description: Run state when it is Aborted By the System.
            - value: timedOut
              description: Run state when run has timedOut.
            - value: pendingAnalysis
              description: Run state while Pending Analysis.
            - value: analyzed
              description: Run state after being Analysed.
            - value: cancellationInProgress
              description: Run state when cancellation is in Progress.
        tags:
          type: array
          description: Tags attached with this test run.
          items:
            $ref: '#/components/schemas/TestTag'
        testEnvironment:
          $ref: '#/components/schemas/TestEnvironment'
        testMessageLogId:
          type: integer
          format: int32
        testSettings:
          $ref: '#/components/schemas/ShallowReference'
        totalTests:
          type: integer
          description: Total tests in the run
          format: int32
        unanalyzedTests:
          type: integer
          description: Number of failed tests in the run.
          format: int32
        url:
          type: string
          description: Url of the test run
        webAccessUrl:
          type: string
          description: Web Access Url for TestRun.
      description: Test run details.
    TestRun2:
      type: object
      properties:
        buildConfigurationId:
          type: integer
          format: int32
        buildNumber:
          type: string
        comment:
          type: string
        completeDate:
          type: string
          format: date-time
        controller:
          type: string
        coverageId:
          type: integer
          format: int32
        creationDate:
          type: string
          format: date-time
        deletedOn:
          type: string
          format: date-time
        dropLocation:
          type: string
        dueDate:
          type: string
          format: date-time
        errorMessage:
          type: string
        incompleteTests:
          type: integer
          format: int32
        isAutomated:
          type: boolean
        isBvt:
          type: boolean
        isMigrated:
          type: boolean
        iterationId:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        legacySharePath:
          type: string
        maxReservedResultId:
          type: integer
          format: int32
        notApplicableTests:
          type: integer
          format: int32
        owner:
          type: string
          format: uuid
        passedTests:
          type: integer
          format: int32
        postProcessState:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        projectId:
          type: string
          format: uuid
        publicTestSettingsId:
          type: integer
          format: int32
        releaseEnvironmentUri:
          type: string
        releaseUri:
          type: string
        revision:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        state:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        testEnvironmentId:
          type: string
          format: uuid
        testMessageLogId:
          type: integer
          format: int32
        testPlanId:
          type: integer
          format: int32
        testRunContextId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
        testSettingsId:
          type: integer
          format: int32
        title:
          type: string
        totalTests:
          type: integer
          format: int32
        type:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        unanalyzedTests:
          type: integer
          format: int32
        version:
          type: integer
          format: int32
      description: ""
    TestRunCanceledEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TestRunEvent'
    TestRunContext2:
      type: object
      properties:
        buildRefId:
          type: integer
          format: int32
        projectId:
          type: string
          format: uuid
        releaseRefId:
          type: integer
          format: int32
        sourceWorkflow:
          type: string
        testRunContextId:
          type: integer
          format: int32
      description: ""
    TestRunCoverage:
      type: object
      properties:
        lastError:
          type: string
          description: Last Error
        modules:
          type: array
          description: List of Modules Coverage
          items:
            $ref: '#/components/schemas/ModuleCoverage'
        state:
          type: string
          description: State
        testRun:
          $ref: '#/components/schemas/ShallowReference'
      description: Test Run Code Coverage Details
    TestRunCreatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TestRunEvent'
    TestRunEvent:
      type: object
      properties:
        testRun:
          $ref: '#/components/schemas/TestRun'
      description: ""
    TestRunEx2:
      type: object
      properties:
        bitValue:
          type: boolean
        createdDate:
          type: string
          format: date-time
        dateTimeValue:
          type: string
          format: date-time
        fieldId:
          type: integer
          format: int32
        fieldName:
          type: string
        floatValue:
          type: number
          format: double
        guidValue:
          type: string
          format: uuid
        intValue:
          type: integer
          format: int32
        projectId:
          type: string
          format: uuid
        stringValue:
          type: string
        testRunId:
          type: integer
          format: int32
      description: ""
    TestRunExtended2:
      type: object
      properties:
        autEnvironmentUrl:
          type: string
        csmContent:
          type: string
        csmParameters:
          type: string
        projectId:
          type: string
          format: uuid
        sourceFilter:
          type: string
        subscriptionName:
          type: string
        substate:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        testCaseFilter:
          type: string
        testEnvironmentUrl:
          type: string
        testRunId:
          type: integer
          format: int32
      description: ""
    TestRunStartedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TestRunEvent'
    TestRunStatistic:
      type: object
      properties:
        run:
          $ref: '#/components/schemas/ShallowReference'
        runStatistics:
          type: array
          items:
            $ref: '#/components/schemas/RunStatistic'
      description: Test run statistics.
    TestRunSummary2:
      type: object
      properties:
        isRerun:
          type: boolean
        projectId:
          type: string
          format: uuid
        resultCount:
          type: integer
          format: int32
        resultDuration:
          type: integer
          format: int64
        runDuration:
          type: integer
          format: int64
        testOutcome:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        testRunCompletedDate:
          type: string
          format: date-time
        testRunContextId:
          type: integer
          format: int32
        testRunId:
          type: integer
          format: int32
        testRunStatsId:
          type: integer
          format: int32
      description: ""
    TestRunWithDtlEnvEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TestRunEvent'
    TestSession:
      type: object
      properties:
        area:
          $ref: '#/components/schemas/ShallowReference'
        comment:
          type: string
          description: Comments in the test session
        endDate:
          type: string
          description: Duration of the session
          format: date-time
        id:
          type: integer
          description: Id of the test session
          format: int32
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last updated date
          format: date-time
        owner:
          $ref: '#/components/schemas/IdentityRef'
        project:
          $ref: '#/components/schemas/ShallowReference'
        propertyBag:
          $ref: '#/components/schemas/PropertyBag'
        revision:
          type: integer
          description: Revision of the test session
          format: int32
        source:
          type: string
          description: Source of the test session
          enum:
          - unknown
          - xtDesktop
          - feedbackDesktop
          - xtWeb
          - feedbackWeb
          - xtDesktop2
          - sessionInsightsForAll
          x-ms-enum:
            name: TestSessionSource
            values:
            - value: unknown
              description: Source of test session uncertain as it is stale
            - value: xtDesktop
              description: The session was created from Microsoft Test Manager exploratory
                desktop tool.
            - value: feedbackDesktop
              description: The session was created from feedback client.
            - value: xtWeb
              description: The session was created from browser extension.
            - value: feedbackWeb
              description: The session was created from browser extension.
            - value: xtDesktop2
              description: The session was created from web access using Microsoft
                Test Manager exploratory desktop tool.
            - value: sessionInsightsForAll
              description: To show sessions from all supported sources.
        startDate:
          type: string
          description: Start date
          format: date-time
        state:
          type: string
          description: State of the test session
          enum:
          - unspecified
          - notStarted
          - inProgress
          - paused
          - completed
          - declined
          x-ms-enum:
            name: TestSessionState
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: notStarted
              description: The session is still being created.
            - value: inProgress
              description: The session is running.
            - value: paused
              description: The session has paused.
            - value: completed
              description: The session has completed.
            - value: declined
              description: This is required for Feedback session which are declined
        title:
          type: string
          description: Title of the test session
        url:
          type: string
          description: Url of Test Session Resource
      description: Test Session
    TestSessionExploredWorkItemReference:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TestSessionWorkItemReference'
    TestSessionWorkItemReference:
      type: object
      properties:
        id:
          type: integer
          description: Id of the workitem
          format: int32
        type:
          type: string
          description: Type of the workitem
      description: ""
    TestSettings:
      type: object
      properties:
        areaPath:
          type: string
          description: Area path required to create test settings
        description:
          type: string
          description: Description of the test settings. Used in create test settings.
        isPublic:
          type: boolean
          description: Indicates if the tests settings is public or private.Used in
            create test settings.
        machineRoles:
          type: string
          description: Xml string of machine roles. Used in create test settings.
        testSettingsContent:
          type: string
          description: Test settings content.
        testSettingsId:
          type: integer
          description: Test settings id.
          format: int32
        testSettingsName:
          type: string
          description: Test settings name.
      description: Represents the test settings of the run. Used to create test settings
        and fetch test settings
    TestSettings2:
      type: object
      properties:
        areaPath:
          type: string
          description: Area path required to create test settings
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdDate:
          type: string
          format: date-time
        description:
          type: string
          description: Description of the test settings. Used in create test settings.
        isPublic:
          type: boolean
          description: Indicates if the tests settings is public or private.Used in
            create test settings.
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          format: date-time
        machineRoles:
          type: string
          description: Xml string of machine roles. Used in create test settings.
        testSettingsContent:
          type: string
          description: Test settings content.
        testSettingsId:
          type: integer
          description: Test settings id.
          format: int32
        testSettingsName:
          type: string
          description: Test settings name.
      description: Represents the test settings of the run. Used to create test settings
        and fetch test settings
    TestSettingsMachineRole:
      type: object
      properties:
        isExecution:
          type: boolean
        name:
          type: string
      description: ""
    TestSubResult:
      type: object
      properties:
        comment:
          type: string
          description: Comment in sub result.
        completedDate:
          type: string
          description: Time when test execution completed(UTC).
          format: date-time
        computerName:
          type: string
          description: Machine where test executed.
        configuration:
          $ref: '#/components/schemas/ShallowReference'
        customFields:
          type: array
          description: Additional properties of sub result.
          items:
            $ref: '#/components/schemas/CustomTestField'
        displayName:
          type: string
          description: Name of sub result.
        durationInMs:
          type: integer
          description: Duration of test execution.
          format: int64
        errorMessage:
          type: string
          description: Error message in sub result.
        id:
          type: integer
          description: ID of sub result.
          format: int32
        lastUpdatedDate:
          type: string
          description: Time when result last updated(UTC).
          format: date-time
        outcome:
          type: string
          description: Outcome of sub result.
        parentId:
          type: integer
          description: Immediate parent ID of sub result.
          format: int32
        resultGroupType:
          type: string
          description: Hierarchy type of the result, default value of None means its
            leaf node.
          enum:
          - none
          - rerun
          - dataDriven
          - orderedTest
          - generic
          x-ms-enum:
            name: ResultGroupType
            values:
            - value: none
              description: Leaf node of test result.
            - value: rerun
              description: Hierarchy type of test result.
            - value: dataDriven
              description: Hierarchy type of test result.
            - value: orderedTest
              description: Hierarchy type of test result.
            - value: generic
              description: Unknown hierarchy type.
        sequenceId:
          type: integer
          description: Index number of sub result.
          format: int32
        stackTrace:
          type: string
          description: Stacktrace.
        startedDate:
          type: string
          description: Time when test execution started(UTC).
          format: date-time
        subResults:
          type: array
          description: List of sub results inside a sub result, if ResultGroupType
            is not None, it holds corresponding type sub results.
          items:
            $ref: '#/components/schemas/TestSubResult'
        testResult:
          $ref: '#/components/schemas/TestCaseResultIdentifier'
        url:
          type: string
          description: Url of sub result.
      description: Represents a sub result of a test result.
    TestSuite:
      type: object
      properties:
        areaUri:
          type: string
          description: Area uri of the test suite.
        children:
          type: array
          description: Child test suites of current test suite.
          items:
            $ref: '#/components/schemas/TestSuite'
        defaultConfigurations:
          type: array
          description: Test suite default configuration.
          items:
            $ref: '#/components/schemas/ShallowReference'
        defaultTesters:
          type: array
          description: Test suite default testers.
          items:
            $ref: '#/components/schemas/ShallowReference'
        id:
          type: integer
          description: Id of test suite.
          format: int32
        inheritDefaultConfigurations:
          type: boolean
          description: Default configuration was inherited or not.
        lastError:
          type: string
          description: Last error for test suite.
        lastPopulatedDate:
          type: string
          description: Last populated date.
          format: date-time
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last update date.
          format: date-time
        name:
          type: string
          description: Name of test suite.
        parent:
          $ref: '#/components/schemas/ShallowReference'
        plan:
          $ref: '#/components/schemas/ShallowReference'
        project:
          $ref: '#/components/schemas/ShallowReference'
        queryString:
          type: string
          description: Test suite query string, for dynamic suites.
        requirementId:
          type: integer
          description: Test suite requirement id.
          format: int32
        revision:
          type: integer
          description: Test suite revision.
          format: int32
        state:
          type: string
          description: State of test suite.
        suites:
          type: array
          description: List of shallow reference of suites.
          items:
            $ref: '#/components/schemas/ShallowReference'
        suiteType:
          type: string
          description: Test suite type.
        testCaseCount:
          type: integer
          description: Test cases count.
          format: int32
        testCasesUrl:
          type: string
          description: Test case url.
        text:
          type: string
          description: Used in tree view. If test suite is root suite then, it is
            name of plan otherwise title of the suite.
        url:
          type: string
          description: Url of test suite.
      description: Test suite
    TestSuiteCloneRequest:
      type: object
      properties:
        cloneOptions:
          $ref: '#/components/schemas/CloneOptions'
        destinationSuiteId:
          type: integer
          description: Suite id under which, we have to clone the suite.
          format: int32
        destinationSuiteProjectName:
          type: string
          description: Destination suite project name.
      description: Test suite clone request
    TestSummaryForWorkItem:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/AggregatedDataForResultTrend'
        workItem:
          $ref: '#/components/schemas/WorkItemReference'
      description: ""
    TestTag:
      type: object
      properties:
        name:
          type: string
          description: Name of the tag, alphanumeric value less than 30 chars
      description: Tag attached to a run or result.
    TestTagSummary:
      type: object
      properties:
        tagsGroupByTestArtifact:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/TestTag'
          description: Dictionary which contains tags associated with a test run.
      description: Test tag summary for build or release grouped by test run.
    TestTagsUpdateModel:
      type: object
      properties:
        tags:
          type: array
          items:
            type: object
            properties: {}
      description: Tags to update to a run or result.
    TestToWorkItemLinks:
      type: object
      properties:
        test:
          $ref: '#/components/schemas/TestMethod'
        workItems:
          type: array
          items:
            $ref: '#/components/schemas/WorkItemReference'
      description: ""
    TestVariable:
      type: object
      properties:
        description:
          type: string
          description: Description of the test variable
        id:
          type: integer
          description: Id of the test variable
          format: int32
        name:
          type: string
          description: Name of the test variable
        project:
          $ref: '#/components/schemas/ShallowReference'
        revision:
          type: integer
          description: Revision
          format: int32
        url:
          type: string
          description: Url of the test variable
        values:
          type: array
          description: List of allowed values
          items:
            type: string
      description: ""
    UpdatedProperties:
      type: object
      properties:
        id:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          format: uuid
        lastUpdatedByName:
          type: string
        revision:
          type: integer
          format: int32
      description: ""
    UpdateTestRunRequest:
      type: object
      properties:
        attachmentsToAdd:
          type: array
          items:
            $ref: '#/components/schemas/TestResultAttachment'
        attachmentsToDelete:
          type: array
          items:
            $ref: '#/components/schemas/TestResultAttachmentIdentity'
        projectName:
          type: string
        shouldHyderate:
          type: boolean
        testRun:
          $ref: '#/components/schemas/LegacyTestRun'
      description: ""
    UpdateTestRunResponse:
      type: object
      properties:
        attachmentIds:
          type: array
          items:
            type: integer
            format: int32
        updatedProperties:
          $ref: '#/components/schemas/UpdatedProperties'
      description: ""
    UploadAttachmentsRequest:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/HttpPostedTcmAttachment'
        requestParams:
          type: object
          additionalProperties:
            type: string
      description: ""
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
    WorkItemReference:
      type: object
      properties:
        id:
          type: string
          description: WorkItem Id.
        name:
          type: string
          description: WorkItem Name.
        type:
          type: string
          description: WorkItem Type.
        url:
          type: string
          description: 'WorkItem Url. Valid Values : (Bug, Task, User Story, Test
            Case)'
        webUrl:
          type: string
          description: WorkItem WebUrl.
      description: WorkItem reference Details.
    WorkItemToTestLinks:
      type: object
      properties:
        executedIn:
          type: string
          enum:
          - any
          - tcm
          - tfs
          x-ms-enum:
            name: Service
            values:
            - value: any
              description: ""
            - value: tcm
              description: ""
            - value: tfs
              description: ""
        tests:
          type: array
          items:
            $ref: '#/components/schemas/TestMethod'
        workItem:
          $ref: '#/components/schemas/WorkItemReference'
      description: ""
  parameters:
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '6.1-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '6.1-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.3:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '6.1-preview.3'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.6:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '6.1-preview.6'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.test_write: Grants the ability to read, create, and update test plans,
              cases, results and other test management related artifacts.
            vso.test: Grants the ability to read test plans, cases, results and other
              test management related artifacts.
x-ms-vss-area: Test
x-ms-vss-resource-area-id: c2aa639c-3ccc-4740-b3b6-ce2a1e1d984e
x-ms-paths:
  /{organization}/{project}/_apis/test/runs?minLastUpdatedDate={minLastUpdatedDate}&maxLastUpdatedDate={maxLastUpdatedDate}:
    get:
      tags:
      - Runs
      x-ms-docs-override-version: 6.1-preview.3
      x-ms-vss-resource: runs
      x-ms-vss-method: QueryTestRuns
      x-ms-preview: true
      description: Query Test Runs based on filters. Mandatory fields are minLastUpdatedDate
        and maxLastUpdatedDate.
      operationId: Runs_Query
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: query
        name: minLastUpdatedDate
        description: Minimum Last Modified Date of run to be queried (Mandatory).
        required: true
        type: string
        format: date-time
      - in: query
        name: maxLastUpdatedDate
        description: Maximum Last Modified Date of run to be queried (Mandatory, difference
          between min and max date can be atmost 7 days).
        required: true
        type: string
        format: date-time
      - in: query
        name: state
        description: Current state of the Runs to be queried.
        required: false
        type: string
        enum:
        - unspecified
        - notStarted
        - inProgress
        - completed
        - aborted
        - waiting
        - needsInvestigation
        x-ms-enum:
          name: TestRunState
          values:
          - value: unspecified
            description: Only used during an update to preserve the existing value.
          - value: notStarted
            description: The run is still being created.  No tests have started yet.
          - value: inProgress
            description: Tests are running.
          - value: completed
            description: All tests have completed or been skipped.
          - value: aborted
            description: Run is stopped and remaining tests have been aborted
          - value: waiting
            description: Run is currently initializing This is a legacy state and
              should not be used any more
          - value: needsInvestigation
            description: Run requires investigation because of a test point failure
              This is a legacy state and should not be used any more
      - in: query
        name: planIds
        description: Plan Ids of the Runs to be queried, comma separated list of valid
          ids (limit no. of ids 10).
        required: false
        type: string
        format: array (int32)
      - in: query
        name: isAutomated
        description: Automation type of the Runs to be queried.
        required: false
        type: boolean
      - in: query
        name: publishContext
        description: PublishContext of the Runs to be queried.
        required: false
        type: string
        enum:
        - build
        - release
        - all
        x-ms-enum:
          name: TestRunPublishContext
          values:
          - value: build
            description: Run is published for Build Context.
          - value: release
            description: Run is published for Release Context.
          - value: all
            description: Run is published for any Context.
      - in: query
        name: buildIds
        description: Build Ids of the Runs to be queried, comma separated list of
          valid ids (limit no. of ids 10).
        required: false
        type: string
        format: array (int32)
      - in: query
        name: buildDefIds
        description: Build Definition Ids of the Runs to be queried, comma separated
          list of valid ids (limit no. of ids 10).
        required: false
        type: string
        format: array (int32)
      - in: query
        name: branchName
        description: Source Branch name of the Runs to be queried.
        required: false
        type: string
      - in: query
        name: releaseIds
        description: Release Ids of the Runs to be queried, comma separated list of
          valid ids (limit no. of ids 10).
        required: false
        type: string
        format: array (int32)
      - in: query
        name: releaseDefIds
        description: Release Definition Ids of the Runs to be queried, comma separated
          list of valid ids (limit no. of ids 10).
        required: false
        type: string
        format: array (int32)
      - in: query
        name: releaseEnvIds
        description: Release Environment Ids of the Runs to be queried, comma separated
          list of valid ids (limit no. of ids 10).
        required: false
        type: string
        format: array (int32)
      - in: query
        name: releaseEnvDefIds
        description: Release Environment Definition Ids of the Runs to be queried,
          comma separated list of valid ids (limit no. of ids 10).
        required: false
        type: string
        format: array (int32)
      - in: query
        name: runTitle
        description: Run Title of the Runs to be queried.
        required: false
        type: string
      - in: query
        name: $top
        description: Number of runs to be queried. Limit is 100
        required: false
        type: integer
        format: int32
      - in: query
        name: continuationToken
        description: continuationToken received from previous batch or null for first
          batch. It is not supposed to be created (or altered, if received from last
          batch) by user.
        required: false
        type: string
      - $ref: '#/parameters/api-Version-preview.3'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TestRun'
      security:
      - oauth2:
        - vso.test
  /{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments?testSubResultId={testSubResultId}:
    get:
      tags:
      - Attachments
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTestSubResultAttachments
      x-ms-preview: true
      description: Get list of test sub result attachments
      operationId: Attachments_Get Test Sub Result Attachments
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: runId
        description: ID of the test run that contains the result.
        required: true
        type: integer
        format: int32
      - in: path
        name: testCaseResultId
        description: ID of the test results that contains sub result.
        required: true
        type: integer
        format: int32
      - in: query
        name: testSubResultId
        description: ID of the test sub result whose attachment has to be downloaded
        required: true
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TestAttachment'
      security:
      - oauth2:
        - vso.test
    post:
      tags:
      - Attachments
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: CreateTestSubResultAttachment
      x-ms-preview: true
      description: Attach a file to a test result
      operationId: Attachments_Create Test Sub Result Attachment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: body
        name: body
        description: Attachment Request Model.
        required: true
        schema:
          $ref: '#/definitions/TestAttachmentRequestModel'
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: runId
        description: ID of the test run that contains the result.
        required: true
        type: integer
        format: int32
      - in: path
        name: testCaseResultId
        description: ID of the test results that contains sub result.
        required: true
        type: integer
        format: int32
      - in: query
        name: testSubResultId
        description: ID of the test sub results against which attachment has to be
          uploaded.
        required: true
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TestAttachmentReference'
      security:
      - oauth2:
        - vso.test_write
  ? /{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments/{attachmentId}?testSubResultId={testSubResultId}
  : get:
      tags:
      - Attachments
      x-ms-docs-override-version: 6.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTestSubResultAttachment
      x-ms-preview: true
      description: Download a test sub result attachment
      operationId: Attachments_Get Test Sub Result Attachment Zip
      produces:
      - application/octet-stream
      - application/zip
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: runId
        description: ID of the test run that contains the result.
        required: true
        type: integer
        format: int32
      - in: path
        name: testCaseResultId
        description: ID of the test results that contains sub result.
        required: true
        type: integer
        format: int32
      - in: path
        name: attachmentId
        description: ID of the test result attachment to be downloaded
        required: true
        type: integer
        format: int32
      - in: query
        name: testSubResultId
        description: ID of the test sub result whose attachment has to be downloaded
        required: true
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        200:
          description: successful operation
          schema:
            type: string
            format: Stream
      security:
      - oauth2:
        - vso.test
