openapi: 3.0.1
info:
  title: Core
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "4.1"
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://dev.azure.com/
security:
- accessToken: []
tags:
- name: Processes
  description: Controller for processes.
- name: Projects
  description: Controller to get, create, edit, and delete projects.
- name: Teams
  description: Manage teams in Azure DevOps Services. A DevOps account has one or
    more team projects. Each team project has one or more teams that contribute to
    that project.
paths:
  /{organization}/_apis/process/processes:
    get:
      tags:
      - Processes
      description: Get a list of processes.
      operationId: List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Process'
      security:
      - oauth2:
        - vso.work
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: processes
      x-ms-vss-method: GetProcesses
  /{organization}/_apis/process/processes/{processId}:
    get:
      tags:
      - Processes
      description: Get a process by ID.
      operationId: Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: processId
        in: path
        description: ID for a process.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
      security:
      - oauth2:
        - vso.work
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: processes
      x-ms-vss-method: GetProcessById
  /{organization}/_apis/projects:
    get:
      tags:
      - Projects
      description: Get all projects in the organization that the authenticated user
        has access to.
      operationId: List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: stateFilter
        in: query
        description: 'Filter on team projects in a specific team project state (default:
          WellFormed).'
        schema:
          type: string
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: Project is in the process of being deleted.
            - value: new
              description: Project is in the process of being created.
            - value: wellFormed
              description: Project is completely created and ready to use.
            - value: createPending
              description: Project has been queued for creation, but the process has
                not yet started.
            - value: all
              description: All projects regardless of state.
            - value: unchanged
              description: Project has not been changed.
            - value: deleted
              description: Project has been deleted.
        x-ms-enum:
          name: ProjectState
          values:
          - value: deleting
            description: Project is in the process of being deleted.
          - value: new
            description: Project is in the process of being created.
          - value: wellFormed
            description: Project is completely created and ready to use.
          - value: createPending
            description: Project has been queued for creation, but the process has
              not yet started.
          - value: all
            description: All projects regardless of state.
          - value: unchanged
            description: Project has not been changed.
          - value: deleted
            description: Project has been deleted.
      - name: $top
        in: query
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamProjectReference'
      security:
      - oauth2:
        - vso.profile
        - vso.project
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: projects
      x-ms-vss-method: GetProjects
      x-ms-examples:
        ?
        : $ref: ./httpExamples/projects/GET__projects.json
    post:
      tags:
      - Projects
      description: Queues a project to be created. Use the [GetOperation](../../operations/operations/get)
        to periodically check for create project status.
      operationId: Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The project to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamProject'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationReference'
      security:
      - oauth2:
        - vso.project_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: projects
      x-ms-vss-method: QueueCreateProject
      x-ms-examples:
        ?
        : $ref: ./httpExamples/projects/POST__projects.json
      x-codegen-request-body-name: body
  /{organization}/_apis/projects/{projectId}:
    get:
      tags:
      - Projects
      description: Get project with the specified id or name, optionally including
        capabilities.
      operationId: Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: includeCapabilities
        in: query
        description: 'Include capabilities (such as source control) in the team project
          result (default: false).'
        schema:
          type: boolean
      - name: includeHistory
        in: query
        description: Search within renamed projects (that had such name in the past).
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamProject'
      security:
      - oauth2:
        - vso.profile
        - vso.project
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: projects
      x-ms-vss-method: GetProject
    delete:
      tags:
      - Projects
      description: Queues a project to be deleted. Use the [GetOperation](../../operations/operations/get)
        to periodically check for delete project status.
      operationId: Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The project id of the project to delete.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationReference'
      security:
      - oauth2:
        - vso.project_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: projects
      x-ms-vss-method: QueueDeleteProject
    patch:
      tags:
      - Projects
      description: Update an existing project's name, abbreviation, or description.
      operationId: Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The project id of the project to update.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The updates for the project.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamProject'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationReference'
      security:
      - oauth2:
        - vso.project_write
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: projects
      x-ms-vss-method: UpdateProject
      x-codegen-request-body-name: body
  /{organization}/_apis/projects/{projectId}/properties:
    get:
      tags:
      - Projects
      description: Get a collection of team project properties.
      operationId: Get Project Properties
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The team project ID.
        required: true
        schema:
          type: string
          format: uuid
      - name: keys
        in: query
        description: A comma-delimited string of team project property names. Wildcard
          characters ("?" and "*") are supported. If no key is specified, all properties
          will be returned.
        schema:
          type: string
          format: array (string)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectProperty'
      security:
      - oauth2:
        - vso.profile
        - vso.project
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: properties
      x-ms-vss-method: GetProjectProperties
      x-ms-preview: true
      x-ms-examples:
        Get all team project properties:
          $ref: ./httpExamples/properties/GET__projects__project__properties.json
        Get specific team project properties:
          $ref: ./httpExamples/properties/GET__projects__project__properties_keys-_propertyName_,_wildcard_.json
    patch:
      tags:
      - Projects
      description: Create, update, and delete team project properties.
      operationId: Set Project Properties
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The team project ID.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: A JSON Patch document that represents an array of property operations.
          See RFC 6902 for more details on JSON Patch. The accepted operation verbs
          are Add and Remove, where Add is used for both creating and updating properties.
          The path consists of a forward slash and a property name.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.project_write
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: properties
      x-ms-vss-method: SetProjectProperties
      x-ms-preview: true
      x-ms-examples:
        Create or update a team project property:
          $ref: ./httpExamples/properties/PATCH__projects__project__properties.json
        Delete a team project property:
          $ref: ./httpExamples/properties/PATCH__projects__project__properties2.json
      x-codegen-request-body-name: body
  /{organization}/_apis/projects/{projectId}/teams:
    get:
      tags:
      - Teams
      description: Get a list of teams.
      operationId: Get Teams
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: $mine
        in: query
        description: If true return all the teams requesting user is member, otherwise
          return all the teams user has read access
        schema:
          type: boolean
      - name: $top
        in: query
        description: Maximum number of teams to return.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: Number of teams to skip.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiTeam'
      security:
      - oauth2:
        - vso.profile
        - vso.project
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: teams
      x-ms-vss-method: GetTeams
      x-ms-examples:
        ?
        : $ref: ./httpExamples/teams/GET__projects__projectId__teams.json
    post:
      tags:
      - Teams
      description: |-
        Create a team in a team project.

        Possible failure scenarios
        Invalid project name/ID (project doesn't exist) 404
        Invalid team name or description 400
        Team already exists 400
        Insufficient privileges 400
      operationId: Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The name or ID (GUID) of the team project in which to create
          the team.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The team data used to create the team.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiTeam'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiTeam'
      security:
      - oauth2:
        - vso.project_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: teams
      x-ms-vss-method: CreateTeam
      x-ms-examples:
        ?
        : $ref: ./httpExamples/teams/POST__projects__projectId__teams.json
      x-codegen-request-body-name: body
  /{organization}/_apis/projects/{projectId}/teams/{teamId}:
    get:
      tags:
      - Teams
      description: Get a specific team.
      operationId: Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The name or ID (GUID) of the team project containing the team.
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        description: The name or ID (GUID) of the team.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiTeam'
      security:
      - oauth2:
        - vso.profile
        - vso.project
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: teams
      x-ms-vss-method: GetTeam
      x-ms-examples:
        ?
        : $ref: ./httpExamples/teams/GET__projects__projectId__teams__teamId_.json
    delete:
      tags:
      - Teams
      description: Delete a team.
      operationId: Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The name or ID (GUID) of the team project containing the team
          to delete.
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        description: The name of ID of the team to delete.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.project_manage
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: teams
      x-ms-vss-method: DeleteTeam
      x-ms-examples:
        ?
        : $ref: ./httpExamples/teams/DELETE__projects__projectId__teams__newTeamId_.json
    patch:
      tags:
      - Teams
      description: Update a team's name and/or description.
      operationId: Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The name or ID (GUID) of the team project containing the team
          to update.
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        description: The name of ID of the team to update.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiTeam'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiTeam'
      security:
      - oauth2:
        - vso.project_write
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: teams
      x-ms-vss-method: UpdateTeam
      x-ms-examples:
        ?
        : $ref: ./httpExamples/teams/PATCH__projects__projectId__teams.json
      x-codegen-request-body-name: body
  /{organization}/_apis/projects/{projectId}/teams/{teamId}/members:
    get:
      tags:
      - Teams
      description: Get a list of members for a specific team.
      operationId: Get Team Members With Extended Properties
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: projectId
        in: path
        description: The name or ID (GUID) of the team project the team belongs to.
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        description: The name or ID (GUID) of the team .
        required: true
        schema:
          type: string
      - name: $top
        in: query
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
      security:
      - oauth2:
        - vso.profile
        - vso.project
      x-ms-docs-override-version: "4.1"
      x-ms-vss-resource: members
      x-ms-vss-method: GetTeamMembersWithExtendedProperties
      x-ms-examples:
        ?
        : $ref: ./httpExamples/members/GET__projects__projectId__teams__teamId__members4.1_.json
  /{organization}/_apis/teams:
    get:
      tags:
      - Teams
      description: Get a list of all teams.
      operationId: Get All Teams
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: $mine
        in: query
        description: If true return all the teams requesting user is member, otherwise
          return all the teams user has read access
        schema:
          type: boolean
      - name: $top
        in: query
        description: Maximum number of teams to return.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: Number of teams to skip.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiTeam'
      security:
      - oauth2:
        - vso.project
      x-ms-docs-override-version: 4.1-preview.2
      x-ms-vss-resource: teams
      x-ms-vss-method: GetAllTeams
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/teams/GET__teams__mine-_mine.json
components:
  schemas:
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Organizations.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    IdentityData:
      type: object
      properties:
        identityIds:
          type: array
          items:
            type: string
            format: uuid
      description: ""
    IdentityDescriptor:
      type: object
      properties:
        identifier:
          type: string
          description: The unique identifier for this identity, not exceeding 256
            chars, which will be persisted.
        identityType:
          type: string
          description: Type of descriptor (for example, Windows, Passport, etc.).
      description: An Identity descriptor is a wrapper for the identity type (Windows
        SID, Passport) along with a unique identifier such as the SID or PUID.
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    JsonPatchDocument:
      description: The JSON model for JSON Patch Operations
      allOf:
      - type: array
        items:
          $ref: '#/components/schemas/JsonPatchOperation'
    JsonPatchOperation:
      type: object
      properties:
        from:
          type: string
          description: The path to copy from for the Move/Copy operation.
        op:
          type: string
          description: The patch operation
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          x-ms-enum:
            name: Operation
            values:
            - value: add
              description: ""
            - value: remove
              description: ""
            - value: replace
              description: ""
            - value: move
              description: ""
            - value: copy
              description: ""
            - value: test
              description: ""
        path:
          type: string
          description: The path for the operation
        value:
          type: object
          properties: {}
          description: The value for the operation. This is either a primitive or
            a JToken.
      description: The JSON model for a JSON Patch operation
    OperationReference:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the operation.
          format: uuid
        pluginId:
          type: string
          description: Unique identifier for the plugin.
          format: uuid
        status:
          type: string
          description: The current status of the operation.
          enum:
          - notSet
          - queued
          - inProgress
          - cancelled
          - succeeded
          - failed
          x-ms-enum:
            name: OperationStatus
            values:
            - value: notSet
              description: The operation does not have a status set.
            - value: queued
              description: The operation has been queued.
            - value: inProgress
              description: The operation is in progress.
            - value: cancelled
              description: The operation was cancelled by the user.
            - value: succeeded
              description: The operation completed successfully.
            - value: failed
              description: The operation completed with a failure.
        url:
          type: string
          description: URL to get the full operation object.
      description: Reference for an async operation.
    Process:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ProcessReference'
    ProcessReference:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
      description: ""
    ProjectInfo:
      type: object
      properties:
        abbreviation:
          type: string
          description: The abbreviated name of the project.
        description:
          type: string
          description: The description of the project.
        id:
          type: string
          description: The id of the project.
          format: uuid
        lastUpdateTime:
          type: string
          description: The time that this project was last updated.
          format: date-time
        name:
          type: string
          description: The name of the project.
        properties:
          type: array
          description: A set of name-value pairs storing additional property data
            related to the project.
          items:
            $ref: '#/components/schemas/ProjectProperty'
        revision:
          type: integer
          description: The current revision of the project.
          format: int64
        state:
          type: string
          description: The current state of the project.
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: Project is in the process of being deleted.
            - value: new
              description: Project is in the process of being created.
            - value: wellFormed
              description: Project is completely created and ready to use.
            - value: createPending
              description: Project has been queued for creation, but the process has
                not yet started.
            - value: all
              description: All projects regardless of state.
            - value: unchanged
              description: Project has not been changed.
            - value: deleted
              description: Project has been deleted.
        uri:
          type: string
          description: A Uri that can be used to refer to this project.
        version:
          type: integer
          description: The version number of the project.
          format: int64
        visibility:
          type: string
          description: Indicates whom the project is visible to.
          enum:
          - private
          - public
          x-ms-enum:
            name: ProjectVisibility
            values:
            - value: private
              description: The project is only visible to users with explicit access.
            - value: public
              description: The project is visible to all.
      description: Contains information describing a project.
    ProjectMessage:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectInfo'
        projectChangeType:
          type: string
          enum:
          - modified
          - deleted
          - added
          x-ms-enum:
            name: ProjectChangeType
            values:
            - value: modified
              description: ""
            - value: deleted
              description: ""
            - value: added
              description: ""
        shouldInvalidateSystemStore:
          type: boolean
      description: ""
    ProjectProperty:
      type: object
      properties:
        name:
          type: string
          description: The name of the property.
        value:
          type: object
          properties: {}
          description: The value of the property.
      description: A named value associated with a project.
    Proxy:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/ProxyAuthorization'
        description:
          type: string
          description: This is a description string
        friendlyName:
          type: string
          description: The friendly name of the server
        globalDefault:
          type: boolean
        site:
          type: string
          description: This is a string representation of the site that the proxy
            server is located in (e.g. "NA-WA-RED")
        siteDefault:
          type: boolean
        url:
          type: string
          description: The URL of the proxy server
      description: ""
    ProxyAuthorization:
      type: object
      properties:
        authorizationUrl:
          type: string
          description: Gets or sets the endpoint used to obtain access tokens from
            the configured token service.
        clientId:
          type: string
          description: Gets or sets the client identifier for this proxy.
          format: uuid
        identity:
          $ref: '#/components/schemas/IdentityDescriptor'
        publicKey:
          $ref: '#/components/schemas/PublicKey'
      description: ""
    PublicKey:
      type: object
      properties:
        exponent:
          type: array
          description: Gets or sets the exponent for the public key.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        modulus:
          type: array
          description: Gets or sets the modulus for the public key.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
      description: Represents the public key portion of an RSA asymmetric key.
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    TeamContext:
      type: object
      properties:
        project:
          type: string
          description: The team project Id or name.  Ignored if ProjectId is set.
        projectId:
          type: string
          description: The Team Project ID.  Required if Project is not set.
          format: uuid
        team:
          type: string
          description: The Team Id or name.  Ignored if TeamId is set.
        teamId:
          type: string
          description: The Team Id
          format: uuid
      description: The Team Context for an operation.
    TeamMember:
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/IdentityRef'
        isTeamAdmin:
          type: boolean
      description: ""
    TeamProject:
      description: Represents a Team Project object.
      allOf:
      - $ref: '#/components/schemas/TeamProjectReference'
    TeamProjectCollection:
      description: Data contract for a TeamProjectCollection.
      allOf:
      - $ref: '#/components/schemas/TeamProjectCollectionReference'
    TeamProjectCollectionReference:
      type: object
      properties:
        id:
          type: string
          description: Collection Id.
          format: uuid
        name:
          type: string
          description: Collection Name.
        url:
          type: string
          description: Collection REST Url.
      description: Reference object for a TeamProjectCollection.
    TeamProjectReference:
      type: object
      properties:
        abbreviation:
          type: string
          description: Project abbreviation.
        description:
          type: string
          description: The project's description (if any).
        id:
          type: string
          description: Project identifier.
          format: uuid
        name:
          type: string
          description: Project name.
        revision:
          type: integer
          description: Project revision.
          format: int64
        state:
          type: string
          description: Project state.
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: Project is in the process of being deleted.
            - value: new
              description: Project is in the process of being created.
            - value: wellFormed
              description: Project is completely created and ready to use.
            - value: createPending
              description: Project has been queued for creation, but the process has
                not yet started.
            - value: all
              description: All projects regardless of state.
            - value: unchanged
              description: Project has not been changed.
            - value: deleted
              description: Project has been deleted.
        url:
          type: string
          description: Url to the full version of the object.
        visibility:
          type: string
          description: Project visibility.
          enum:
          - private
          - public
          x-ms-enum:
            name: ProjectVisibility
            values:
            - value: private
              description: The project is only visible to users with explicit access.
            - value: public
              description: The project is visible to all.
      description: Represents a shallow reference to a TeamProject.
    TemporaryDataCreatedDTO:
      description: A data transfer object that stores the metadata associated with
        the creation of temporary data.
      allOf:
      - $ref: '#/components/schemas/TemporaryDataDTO'
    TemporaryDataDTO:
      type: object
      properties:
        expirationSeconds:
          type: integer
          format: int32
        origin:
          type: string
        value:
          type: object
          properties: {}
      description: A data transfer object that stores the metadata associated with
        the temporary data.
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
    WebApiConnectedService:
      description: ""
      allOf:
      - $ref: '#/components/schemas/WebApiConnectedServiceRef'
    WebApiConnectedServiceDetails:
      description: ""
      allOf:
      - $ref: '#/components/schemas/WebApiConnectedServiceRef'
    WebApiConnectedServiceRef:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
      description: ""
    WebApiCreateTagRequestData:
      type: object
      properties:
        name:
          type: string
          description: Name of the tag definition that will be created.
      description: The representation of data needed to create a tag definition which
        is sent across the wire.
    WebApiProject:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TeamProjectReference'
    WebApiProjectCollection:
      description: ""
      allOf:
      - $ref: '#/components/schemas/WebApiProjectCollectionRef'
    WebApiProjectCollectionRef:
      type: object
      properties:
        collectionUrl:
          type: string
          description: Collection Tfs Url (Host Url)
        id:
          type: string
          description: Collection Guid
          format: uuid
        name:
          type: string
          description: Collection Name
        url:
          type: string
          description: Collection REST Url
      description: ""
    WebApiTagDefinition:
      type: object
      properties:
        active:
          type: boolean
          description: Whether or not the tag definition is active.
        id:
          type: string
          description: ID of the tag definition.
          format: uuid
        name:
          type: string
          description: The name of the tag definition.
        url:
          type: string
          description: Resource URL for the Tag Definition.
      description: The representation of a tag definition which is sent across the
        wire.
    WebApiTeam:
      description: ""
      allOf:
      - $ref: '#/components/schemas/WebApiTeamRef'
    WebApiTeamRef:
      type: object
      properties:
        id:
          type: string
          description: Team (Identity) Guid. A Team Foundation ID.
          format: uuid
        name:
          type: string
          description: Team name
        url:
          type: string
          description: Team REST API Url
      description: ""
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1' to use
        this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.profile: Grants the ability to read your profile, accounts, collections,
              projects, teams, and other top-level organizational artifacts.
            vso.project: Grants the ability to read projects and teams.
            vso.project_manage: Grants the ability to create, read, update, and delete
              projects and teams.
            vso.project_write: Grants the ability to read and update projects and
              teams.
            vso.work: Grants the ability to read work items, queries, boards, area
              and iterations paths, and other work item tracking related metadata.
              Also grants the ability to execute queries and to receive notifications
              about work item events via service hooks.
x-ms-vss-area: Core
x-ms-vss-resource-area-id: 79134c72-4a58-4b42-976c-04e7115f32bf
