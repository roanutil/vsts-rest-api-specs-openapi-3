openapi: 3.0.1
info:
  title: TaskAgent
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "4.1"
externalDocs:
  description: Team Foundation Server REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://https://fabrikam-fiber-inc:8080/DefaultCollection/
security:
- accessToken: []
tags:
- name: Deploymentgroups
- name: Targets
- name: Taskgroups
- name: Variablegroups
paths:
  /{collection}/{project}/_apis/distributedtask/deploymentgroups:
    get:
      tags:
      - Deploymentgroups
      description: Get a list of deployment groups by name or IDs.
      operationId: List
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: Name of the deployment group.
        schema:
          type: string
      - name: actionFilter
        in: query
        description: Get only deployment groups on which this action can be performed.
        schema:
          type: string
          enum:
          - none
          - manage
          - use
          x-ms-enum:
            name: DeploymentGroupActionFilter
            values:
            - value: none
              description: All deployment groups.
            - value: manage
              description: Only deployment groups for which caller has **manage**
                permission.
            - value: use
              description: Only deployment groups for which caller has **use** permission.
        x-ms-enum:
          name: DeploymentGroupActionFilter
          values:
          - value: none
            description: All deployment groups.
          - value: manage
            description: Only deployment groups for which caller has **manage** permission.
          - value: use
            description: Only deployment groups for which caller has **use** permission.
      - name: $expand
        in: query
        description: Include these additional details in the returned objects.
        schema:
          type: string
          enum:
          - none
          - machines
          - tags
          x-ms-enum:
            name: DeploymentGroupExpands
            values:
            - value: none
              description: No additional properties.
            - value: machines
              description: 'Deprecated: Include all the deployment targets.'
            - value: tags
              description: Include unique list of tags across all deployment targets.
        x-ms-enum:
          name: DeploymentGroupExpands
          values:
          - value: none
            description: No additional properties.
          - value: machines
            description: 'Deprecated: Include all the deployment targets.'
          - value: tags
            description: Include unique list of tags across all deployment targets.
      - name: continuationToken
        in: query
        description: Get deployment groups with names greater than this continuationToken
          lexicographically.
        schema:
          type: string
      - name: $top
        in: query
        description: Maximum number of deployment groups to return. Default is **1000**.
        schema:
          type: integer
          format: int32
      - name: ids
        in: query
        description: Comma separated list of IDs of the deployment groups.
        schema:
          type: string
          format: array (int32)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentGroup'
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: deploymentgroups
      x-ms-vss-method: GetDeploymentGroups
      x-ms-preview: true
      x-ms-examples:
        Get a deployment group by name:
          $ref: ./httpExamples/deploymentgroups/GET__distributedtask_DeploymentGroups__Name_-onprem.json
        Get deployment groups by IDs:
          $ref: ./httpExamples/deploymentgroups/GET__distributedtask_DeploymentGroups__Ids_-onprem.json
        List all deployment groups:
          $ref: ./httpExamples/deploymentgroups/GET__distributedtask_DeploymentGroups-onprem.json
        Get deployment groups in pages:
          $ref: ./httpExamples/deploymentgroups/GET__distributedtask_DeploymentGroups__Page_-onprem.json
    post:
      tags:
      - Deploymentgroups
      description: Create a deployment group.
      operationId: Add
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Deployment group to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentGroupCreateParameter'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentGroup'
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: deploymentgroups
      x-ms-vss-method: AddDeploymentGroup
      x-ms-preview: true
      x-ms-examples:
        Create a deployment group:
          $ref: ./httpExamples/deploymentgroups/POST__distributedtask_DeploymentGroups-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}:
    get:
      tags:
      - Deploymentgroups
      description: Get a deployment group by its ID.
      operationId: Get
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: deploymentGroupId
        in: path
        description: ID of the deployment group.
        required: true
        schema:
          type: integer
          format: int32
      - name: actionFilter
        in: query
        description: Get the deployment group only if this action can be performed
          on it.
        schema:
          type: string
          enum:
          - none
          - manage
          - use
          x-ms-enum:
            name: DeploymentGroupActionFilter
            values:
            - value: none
              description: All deployment groups.
            - value: manage
              description: Only deployment groups for which caller has **manage**
                permission.
            - value: use
              description: Only deployment groups for which caller has **use** permission.
        x-ms-enum:
          name: DeploymentGroupActionFilter
          values:
          - value: none
            description: All deployment groups.
          - value: manage
            description: Only deployment groups for which caller has **manage** permission.
          - value: use
            description: Only deployment groups for which caller has **use** permission.
      - name: $expand
        in: query
        description: Include these additional details in the returned object.
        schema:
          type: string
          enum:
          - none
          - machines
          - tags
          x-ms-enum:
            name: DeploymentGroupExpands
            values:
            - value: none
              description: No additional properties.
            - value: machines
              description: 'Deprecated: Include all the deployment targets.'
            - value: tags
              description: Include unique list of tags across all deployment targets.
        x-ms-enum:
          name: DeploymentGroupExpands
          values:
          - value: none
            description: No additional properties.
          - value: machines
            description: 'Deprecated: Include all the deployment targets.'
          - value: tags
            description: Include unique list of tags across all deployment targets.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentGroup'
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: deploymentgroups
      x-ms-vss-method: GetDeploymentGroup
      x-ms-preview: true
      x-ms-examples:
        Get a deployment group by its ID:
          $ref: ./httpExamples/deploymentgroups/GET__distributedtask_DeploymentGroups__Id_-onprem.json
    delete:
      tags:
      - Deploymentgroups
      description: Delete a deployment group.
      operationId: Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: deploymentGroupId
        in: path
        description: ID of the deployment group to be deleted.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: deploymentgroups
      x-ms-vss-method: DeleteDeploymentGroup
      x-ms-preview: true
      x-ms-examples:
        Delete a deployment group:
          $ref: ./httpExamples/deploymentgroups/DELETE__distributedtask_DeploymentGroup__Id_-onprem.json
    patch:
      tags:
      - Deploymentgroups
      description: Update a deployment group.
      operationId: Update
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: deploymentGroupId
        in: path
        description: ID of the deployment group.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Deployment group to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentGroupUpdateParameter'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentGroup'
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: deploymentgroups
      x-ms-vss-method: UpdateDeploymentGroup
      x-ms-preview: true
      x-ms-examples:
        Update a deployment group:
          $ref: ./httpExamples/deploymentgroups/PATCH__distributedtask_DeploymentGroups__Id_-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets:
    get:
      tags:
      - Targets
      description: Get a list of deployment targets in a deployment group.
      operationId: List
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: deploymentGroupId
        in: path
        description: ID of the deployment group.
        required: true
        schema:
          type: integer
          format: int32
      - name: tags
        in: query
        description: Get only the deployment targets that contain all these comma
          separted list of tags.
        schema:
          type: string
          format: array (string)
      - name: name
        in: query
        description: Name pattern of the deployment targets to return.
        schema:
          type: string
      - name: partialNameMatch
        in: query
        description: When set to true, treats **name** as pattern. Else treats it
          as absolute match. Default is **false**.
        schema:
          type: boolean
      - name: $expand
        in: query
        description: Include these additional details in the returned objects.
        schema:
          type: string
          enum:
          - none
          - capabilities
          - assignedRequest
          - lastCompletedRequest
          x-ms-enum:
            name: DeploymentTargetExpands
            values:
            - value: none
              description: No additional properties.
            - value: capabilities
              description: Include capabilities of the deployment agent.
            - value: assignedRequest
              description: Include the job request assigned to the deployment agent.
            - value: lastCompletedRequest
              description: Include the last completed job request of the deployment
                agent.
        x-ms-enum:
          name: DeploymentTargetExpands
          values:
          - value: none
            description: No additional properties.
          - value: capabilities
            description: Include capabilities of the deployment agent.
          - value: assignedRequest
            description: Include the job request assigned to the deployment agent.
          - value: lastCompletedRequest
            description: Include the last completed job request of the deployment
              agent.
      - name: agentStatus
        in: query
        description: Get only deployment targets that have this status.
        schema:
          type: string
          enum:
          - offline
          - online
          - all
          x-ms-enum:
            name: TaskAgentStatusFilter
            values:
            - value: offline
              description: Only deployment targets that are offline.
            - value: online
              description: Only deployment targets that are online.
            - value: all
              description: All deployment targets.
        x-ms-enum:
          name: TaskAgentStatusFilter
          values:
          - value: offline
            description: Only deployment targets that are offline.
          - value: online
            description: Only deployment targets that are online.
          - value: all
            description: All deployment targets.
      - name: agentJobResult
        in: query
        description: Get only deployment targets that have this last job result.
        schema:
          type: string
          enum:
          - failed
          - passed
          - neverDeployed
          - all
          x-ms-enum:
            name: TaskAgentJobResultFilter
            values:
            - value: failed
              description: Only those deployment targets on which last job failed
                (**Abandoned**, **Canceled**, **Failed**, **Skipped**).
            - value: passed
              description: Only those deployment targets on which last job Passed
                (**Succeeded**, **Succeeded with issues**).
            - value: neverDeployed
              description: Only those deployment targets that never executed a job.
            - value: all
              description: All deployment targets.
        x-ms-enum:
          name: TaskAgentJobResultFilter
          values:
          - value: failed
            description: Only those deployment targets on which last job failed (**Abandoned**,
              **Canceled**, **Failed**, **Skipped**).
          - value: passed
            description: Only those deployment targets on which last job Passed (**Succeeded**,
              **Succeeded with issues**).
          - value: neverDeployed
            description: Only those deployment targets that never executed a job.
          - value: all
            description: All deployment targets.
      - name: continuationToken
        in: query
        description: Get deployment targets with names greater than this continuationToken
          lexicographically.
        schema:
          type: string
      - name: $top
        in: query
        description: Maximum number of deployment targets to return. Default is **1000**.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentMachine'
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: targets
      x-ms-vss-method: GetDeploymentTargets
      x-ms-preview: true
      x-ms-examples:
        List all deployment targets in a deployment group:
          $ref: ./httpExamples/targets/GET__distributedtask_DeploymentTargets-onprem.json
        Get deployment targets having given tags:
          $ref: ./httpExamples/targets/GET__distributedtask_DeploymentTargets__Tags_-onprem.json
        Get deployment targets by partial name match:
          $ref: ./httpExamples/targets/GET__distributedtask_DeploymentTargets__Name_-onprem.json
        Get deployment targets including their last job requests:
          $ref: ./httpExamples/targets/GET__distributedtask_DeploymentTargets__LastRequest_-onprem.json
        Get deployment targets filtered by agent status:
          $ref: ./httpExamples/targets/GET__distributedtask_DeploymentTargets__AgentStatus_-onprem.json
        Get deployment targets in pages:
          $ref: ./httpExamples/targets/GET__distributedtask_DeploymentTargets__Page_-onprem.json
    patch:
      tags:
      - Targets
      description: Update tags of a list of deployment targets in a deployment group.
      operationId: Update
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: deploymentGroupId
        in: path
        description: ID of the deployment group in which deployment targets are updated.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Deployment targets with tags to udpdate.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeploymentTargetUpdateParameter'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentMachine'
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: targets
      x-ms-vss-method: UpdateDeploymentTargets
      x-ms-preview: true
      x-ms-examples:
        Update tags of a deployment target:
          $ref: ./httpExamples/targets/PATCH__distributedtask_DeploymentTargets-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}:
    get:
      tags:
      - Targets
      description: Get a deployment target by its ID in a deployment group
      operationId: Get
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: deploymentGroupId
        in: path
        description: ID of the deployment group to which deployment target belongs.
        required: true
        schema:
          type: integer
          format: int32
      - name: targetId
        in: path
        description: ID of the deployment target to return.
        required: true
        schema:
          type: integer
          format: int32
      - name: $expand
        in: query
        description: Include these additional details in the returned objects.
        schema:
          type: string
          enum:
          - none
          - capabilities
          - assignedRequest
          - lastCompletedRequest
          x-ms-enum:
            name: DeploymentTargetExpands
            values:
            - value: none
              description: No additional properties.
            - value: capabilities
              description: Include capabilities of the deployment agent.
            - value: assignedRequest
              description: Include the job request assigned to the deployment agent.
            - value: lastCompletedRequest
              description: Include the last completed job request of the deployment
                agent.
        x-ms-enum:
          name: DeploymentTargetExpands
          values:
          - value: none
            description: No additional properties.
          - value: capabilities
            description: Include capabilities of the deployment agent.
          - value: assignedRequest
            description: Include the job request assigned to the deployment agent.
          - value: lastCompletedRequest
            description: Include the last completed job request of the deployment
              agent.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentMachine'
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: targets
      x-ms-vss-method: GetDeploymentTarget
      x-ms-preview: true
      x-ms-examples:
        Get a deployment target by its ID:
          $ref: ./httpExamples/targets/GET__distributedtask_DeploymentTargets__Id_-onprem.json
    delete:
      tags:
      - Targets
      description: Delete a deployment target in a deployment group. This deletes
        the agent from associated deployment pool too.
      operationId: Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: deploymentGroupId
        in: path
        description: ID of the deployment group in which deployment target is deleted.
        required: true
        schema:
          type: integer
          format: int32
      - name: targetId
        in: path
        description: ID of the deployment target to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.machinegroup_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: targets
      x-ms-vss-method: DeleteDeploymentTarget
      x-ms-preview: true
      x-ms-examples:
        Delete a deployment target:
          $ref: ./httpExamples/targets/DELETE_distributedtask_DeploymentTargets__Id_-onprem.json
  /{collection}/{project}/_apis/distributedtask/taskgroups:
    post:
      tags:
      - Taskgroups
      description: Create a task group.
      operationId: Add
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Task group object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGroupCreateParameter'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGroup'
      security:
      - oauth2:
        - vso.taskgroups_write
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: taskgroups
      x-ms-vss-method: AddTaskGroup
      x-ms-preview: true
      x-ms-examples:
        Create a task group:
          $ref: ./httpExamples/taskgroups/POST__CreateTaskGroup-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/distributedtask/taskgroups/{taskGroupId}:
    get:
      tags:
      - Taskgroups
      description: List task groups.
      operationId: List
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: taskGroupId
        in: path
        description: Id of the task group.
        required: true
        schema:
          type: string
          format: uuid
          x-ms-required: false
        x-ms-required: false
      - name: expanded
        in: query
        description: '''true'' to recursively expand task groups. Default is ''false''.'
        schema:
          type: boolean
      - name: taskIdFilter
        in: query
        description: Guid of the taskId to filter.
        schema:
          type: string
          format: uuid
      - name: deleted
        in: query
        description: '''true''to include deleted task groups. Default is ''false''.'
        schema:
          type: boolean
      - name: $top
        in: query
        description: Number of task groups to get.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: Gets the task groups after the continuation token provided.
        schema:
          type: string
          format: date-time
      - name: queryOrder
        in: query
        description: Gets the results in the defined order. Default is 'CreatedOnDescending'.
        schema:
          type: string
          enum:
          - createdOnAscending
          - createdOnDescending
          x-ms-enum:
            name: TaskGroupQueryOrder
            values:
            - value: createdOnAscending
              description: Order by createdon ascending.
            - value: createdOnDescending
              description: Order by createdon descending.
        x-ms-enum:
          name: TaskGroupQueryOrder
          values:
          - value: createdOnAscending
            description: Order by createdon ascending.
          - value: createdOnDescending
            description: Order by createdon descending.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskGroup'
      security:
      - oauth2:
        - vso.taskgroups_read
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: taskgroups
      x-ms-vss-method: GetTaskGroups
      x-ms-preview: true
      x-ms-examples:
        List all task groups:
          $ref: ./httpExamples/taskgroups/LIST__ListAllTaskGroups-onprem.json
        List all versions of a task group:
          $ref: ./httpExamples/taskgroups/LIST__ListAllVersionsOfTaskGroup-onprem.json
    put:
      tags:
      - Taskgroups
      description: Update a task group.
      operationId: Update
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: taskGroupId
        in: path
        description: Id of the task group to update.
        required: true
        schema:
          type: string
          format: uuid
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Task group to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGroupUpdateParameter'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGroup'
      security:
      - oauth2:
        - vso.taskgroups_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: taskgroups
      x-ms-vss-method: UpdateTaskGroup
      x-ms-preview: true
      x-ms-examples:
        Update a task group:
          $ref: ./httpExamples/taskgroups/PUT__UpdateTaskGroup-onprem.json
      x-codegen-request-body-name: body
    delete:
      tags:
      - Taskgroups
      description: Delete a task group.
      operationId: Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: taskGroupId
        in: path
        description: Id of the task group to be deleted.
        required: true
        schema:
          type: string
          format: uuid
      - name: comment
        in: query
        description: Comments to delete.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.taskgroups_manage
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: taskgroups
      x-ms-vss-method: DeleteTaskGroup
      x-ms-preview: true
      x-ms-examples:
        Delete a task group:
          $ref: ./httpExamples/taskgroups/DELETE__DeleteATaskGroup-onprem.json
  /{collection}/{project}/_apis/distributedtask/variablegroups:
    get:
      tags:
      - Variablegroups
      description: Get variable groups by ids.
      operationId: Get Variable Groups By Id
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: groupIds
        in: query
        description: Comma separated list of Ids of variable groups.
        required: true
        schema:
          type: string
          format: array (int32)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariableGroup'
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: variablegroups
      x-ms-vss-method: GetVariableGroupsById
      x-ms-preview: true
      x-ms-examples:
        Get variable groups by ids:
          $ref: ./httpExamples/variablegroups/GET_VariableGroupsByIds-onprem.json
    post:
      tags:
      - Variablegroups
      description: Add a variable group.
      operationId: Add
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Variable group to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableGroupParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableGroup'
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: variablegroups
      x-ms-vss-method: AddVariableGroup
      x-ms-preview: true
      x-ms-examples:
        Add a variable group:
          $ref: ./httpExamples/variablegroups/POST_CreateVariableGroup-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/distributedtask/variablegroups/{groupId}:
    get:
      tags:
      - Variablegroups
      description: Get a variable group.
      operationId: Get
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: Id of the variable group.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableGroup'
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: variablegroups
      x-ms-vss-method: GetVariableGroup
      x-ms-preview: true
      x-ms-examples:
        Get a variable group:
          $ref: ./httpExamples/variablegroups/GET_VariableGroup-onprem.json
    put:
      tags:
      - Variablegroups
      description: Update a variable group.
      operationId: Update
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: Id of the variable group to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Variable group to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableGroupParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableGroup'
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: variablegroups
      x-ms-vss-method: UpdateVariableGroup
      x-ms-preview: true
      x-ms-examples:
        Update a variable group:
          $ref: ./httpExamples/variablegroups/PUT_UpdateVariableGroup-onprem.json
      x-codegen-request-body-name: body
    delete:
      tags:
      - Variablegroups
      description: Delete a variable group
      operationId: Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Team Foundation Server collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: Id of the variable group.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: variablegroups
      x-ms-vss-method: DeleteVariableGroup
      x-ms-preview: true
      x-ms-examples:
        Delete a variable group:
          $ref: ./httpExamples/variablegroups/DELETE_VariableGroup-onprem.json
components:
  schemas:
    AadOauthTokenRequest:
      type: object
      properties:
        refresh:
          type: boolean
        resource:
          type: string
        tenantId:
          type: string
        token:
          type: string
      description: ""
    AadOauthTokenResult:
      type: object
      properties:
        accessToken:
          type: string
        refreshTokenCache:
          type: string
      description: ""
    AgentChangeEvent:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/TaskAgent'
        eventType:
          type: string
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
      description: ""
    AgentJobRequestMessage:
      description: ""
      allOf:
      - $ref: '#/components/schemas/JobRequestMessage'
    AgentMigrationMessage:
      type: object
      properties:
        accessToken:
          type: string
      description: ""
    AgentPoolEvent:
      type: object
      properties:
        eventType:
          type: string
        pool:
          $ref: '#/components/schemas/TaskAgentPool'
      description: ""
    AgentQueueEvent:
      type: object
      properties:
        eventType:
          type: string
        queue:
          $ref: '#/components/schemas/TaskAgentQueue'
      description: ""
    AgentQueuesEvent:
      type: object
      properties:
        eventType:
          type: string
        queues:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentQueue'
      description: ""
    AgentRefreshMessage:
      type: object
      properties:
        agentId:
          type: integer
          format: int32
        targetVersion:
          type: string
        timeout:
          type: string
          format: TimeSpan
      description: ""
    AuthenticationSchemeReference:
      type: object
      properties:
        inputs:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
      description: ""
    AuthorizationHeader:
      type: object
      properties:
        name:
          type: string
          description: Gets or sets the name of authorization header.
        value:
          type: string
          description: Gets or sets the value of authorization header.
      description: ""
    AzureKeyVaultPermission:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AzureResourcePermission'
    AzureKeyVaultVariableGroupProviderData:
      description: ""
      allOf:
      - $ref: '#/components/schemas/VariableGroupProviderData'
    AzureKeyVaultVariableValue:
      description: ""
      allOf:
      - $ref: '#/components/schemas/VariableValue'
    AzurePermission:
      type: object
      properties:
        provisioned:
          type: boolean
        resourceProvider:
          type: string
      description: ""
    AzureResourcePermission:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AzurePermission'
    AzureRoleAssignmentPermission:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AzurePermission'
    AzureSpnOperationStatus:
      type: object
      properties:
        state:
          type: string
        statusMessage:
          type: string
      description: ""
    AzureSubscription:
      type: object
      properties:
        displayName:
          type: string
        subscriptionId:
          type: string
        subscriptionTenantId:
          type: string
        subscriptionTenantName:
          type: string
      description: ""
    AzureSubscriptionQueryResult:
      type: object
      properties:
        errorMessage:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/AzureSubscription'
      description: ""
    ClientCertificate:
      type: object
      properties:
        value:
          type: string
          description: Gets or sets the value of client certificate.
      description: ""
    DataSource:
      type: object
      properties:
        authenticationScheme:
          $ref: '#/components/schemas/AuthenticationSchemeReference'
        endpointUrl:
          type: string
        headers:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
        name:
          type: string
        resourceUrl:
          type: string
        resultSelector:
          type: string
      description: ""
    DataSourceBinding:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DataSourceBindingBase'
    DataSourceBindingBase:
      type: object
      properties:
        dataSourceName:
          type: string
          description: Gets or sets the name of the data source.
        endpointId:
          type: string
          description: Gets or sets the endpoint Id.
        endpointUrl:
          type: string
          description: Gets or sets the url of the service endpoint.
        headers:
          type: array
          description: Gets or sets the authorization headers.
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters for the data source.
        resultSelector:
          type: string
          description: Gets or sets the result selector.
        resultTemplate:
          type: string
          description: Gets or sets the result template.
        target:
          type: string
          description: Gets or sets the target of the data source.
      description: Represents binding of data source for the service endpoint request.
    DataSourceDetails:
      type: object
      properties:
        dataSourceName:
          type: string
        dataSourceUrl:
          type: string
        headers:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
        parameters:
          type: object
          additionalProperties:
            type: string
        resourceUrl:
          type: string
        resultSelector:
          type: string
      description: ""
    Demand:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: ""
    DependencyBinding:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: ""
    DependencyData:
      type: object
      properties:
        input:
          type: string
        map:
          type: array
          items:
            type: object
            additionalProperties:
              type: array
              items:
                type: object
                additionalProperties:
                  type: string
      description: ""
    DependsOn:
      type: object
      properties:
        input:
          type: string
        map:
          type: array
          items:
            $ref: '#/components/schemas/DependencyBinding'
      description: ""
    DeploymentGroup:
      description: Deployment group.
      allOf:
      - $ref: '#/components/schemas/DeploymentGroupReference'
    DeploymentGroupCreateParameter:
      type: object
      properties:
        description:
          type: string
          description: Description of the deployment group.
        name:
          type: string
          description: Name of the deployment group.
        poolId:
          type: integer
          description: Identifier of the deployment pool in which deployment agents
            are registered.
          format: int32
      description: Properties to create Deployment group.
    DeploymentGroupCreateParameterPoolProperty:
      type: object
      properties:
        id:
          type: integer
          description: Deployment pool identifier.
          format: int32
      description: Properties of Deployment pool to create Deployment group.
    DeploymentGroupMetrics:
      type: object
      properties:
        columnsHeader:
          $ref: '#/components/schemas/MetricsColumnsHeader'
        deploymentGroup:
          $ref: '#/components/schemas/DeploymentGroupReference'
        rows:
          type: array
          description: 'Values of properties and the metrics. E.g. 1: total count
            of deployment targets for which ''TargetState'' is ''offline''. E.g. 2:
            Average time of deployment to the deployment targets for which ''LastJobStatus''
            is ''passed'' and ''TargetState'' is ''online''.'
          items:
            $ref: '#/components/schemas/MetricsRow'
      description: Deployment group metrics.
    DeploymentGroupReference:
      type: object
      properties:
        id:
          type: integer
          description: Deployment group identifier.
          format: int32
        name:
          type: string
          description: Name of the deployment group.
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        project:
          $ref: '#/components/schemas/ProjectReference'
      description: Deployment group reference. This is useful for referring a deployment
        group in another object.
    DeploymentGroupUpdateParameter:
      type: object
      properties:
        description:
          type: string
          description: Description of the deployment group.
        name:
          type: string
          description: Name of the deployment group.
      description: Deployment group update parameter.
    DeploymentMachine:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/TaskAgent'
        id:
          type: integer
          description: Deployment target Identifier.
          format: int32
        tags:
          type: array
          description: Tags of the deployment target.
          items:
            type: string
      description: Deployment target.
    DeploymentMachineGroup:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeploymentMachineGroupReference'
    DeploymentMachineGroupReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        project:
          $ref: '#/components/schemas/ProjectReference'
      description: ""
    DeploymentMachinesChangeEvent:
      type: object
      properties:
        machineGroupReference:
          $ref: '#/components/schemas/DeploymentGroupReference'
        machines:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentMachine'
      description: ""
    DeploymentPoolSummary:
      type: object
      properties:
        deploymentGroups:
          type: array
          description: List of deployment groups referring to the deployment pool.
          items:
            $ref: '#/components/schemas/DeploymentGroupReference'
        offlineAgentsCount:
          type: integer
          description: Number of deployment agents that are offline.
          format: int32
        onlineAgentsCount:
          type: integer
          description: Number of deployment agents that are online.
          format: int32
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
      description: Deployment pool summary.
    DeploymentTargetUpdateParameter:
      type: object
      properties:
        id:
          type: integer
          description: Identifier of the deployment target.
          format: int32
        tags:
          type: array
          items:
            type: string
      description: Deployment target update parameter.
    DiagnosticLogMetadata:
      type: object
      properties:
        agentId:
          type: integer
          format: int32
        agentName:
          type: string
        fileName:
          type: string
        phaseName:
          type: string
        phaseResult:
          type: string
        poolId:
          type: integer
          format: int32
      description: ""
    EndpointAuthorization:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters for the selected authorization
            scheme.
        scheme:
          type: string
          description: Gets or sets the scheme used for service endpoint authentication.
      description: ""
    EndpointUrl:
      type: object
      properties:
        dependsOn:
          $ref: '#/components/schemas/DependsOn'
        displayName:
          type: string
          description: Gets or sets the display name of service endpoint url.
        helpText:
          type: string
          description: Gets or sets the help text of service endpoint url.
        isVisible:
          type: string
          description: Gets or sets the visibility of service endpoint url.
        value:
          type: string
          description: Gets or sets the value of service endpoint url.
      description: Represents url of the service endpoint.
    EventsConfig:
      type: object
      description: ""
    ExpressionValidationItem:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ValidationItem'
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Collections.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    HelpLink:
      type: object
      properties:
        text:
          type: string
        url:
          type: string
      description: ""
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    InputBindingContext:
      type: object
      properties:
        value:
          type: string
          description: Value of the input
      description: ""
    InputDescriptor:
      type: object
      properties:
        dependencyInputIds:
          type: array
          description: The ids of all inputs that the value of this input is dependent
            on.
          items:
            type: string
        description:
          type: string
          description: Description of what this input is used for
        groupName:
          type: string
          description: The group localized name to which this input belongs and can
            be shown as a header for the container that will include all the inputs
            in the group.
        hasDynamicValueInformation:
          type: boolean
          description: If true, the value information for this input is dynamic and
            should be fetched when the value of dependency inputs change.
        id:
          type: string
          description: Identifier for the subscription input
        inputMode:
          type: string
          description: Mode in which the value of this input should be entered
          enum:
          - none
          - textBox
          - passwordBox
          - combo
          - radioButtons
          - checkBox
          - textArea
          x-ms-enum:
            name: InputMode
            values:
            - value: none
              description: This input should not be shown in the UI
            - value: textBox
              description: An input text box should be shown
            - value: passwordBox
              description: An password input box should be shown
            - value: combo
              description: A select/combo control should be shown
            - value: radioButtons
              description: Radio buttons should be shown
            - value: checkBox
              description: Checkbox should be shown(for true/false values)
            - value: textArea
              description: A multi-line text area should be shown
        isConfidential:
          type: boolean
          description: Gets whether this input is confidential, such as for a password
            or application key
        name:
          type: string
          description: Localized name which can be shown as a label for the subscription
            input
        properties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: Custom properties for the input which can be used by the service
            provider
        type:
          type: string
          description: Underlying data type for the input value. When this value is
            specified, InputMode, Validation and Values are optional.
        useInDefaultDescription:
          type: boolean
          description: Gets whether this input is included in the default generated
            action description.
        validation:
          $ref: '#/components/schemas/InputValidation'
        valueHint:
          type: string
          description: A hint for input value. It can be used in the UI as the input
            placeholder.
        values:
          $ref: '#/components/schemas/InputValues'
      description: Describes an input for subscriptions.
    InputValidation:
      type: object
      properties:
        dataType:
          type: string
          enum:
          - none
          - string
          - number
          - boolean
          - guid
          - uri
          x-ms-enum:
            name: InputDataType
            values:
            - value: none
              description: No data type is specified.
            - value: string
              description: Represents a textual value.
            - value: number
              description: Represents a numberic value.
            - value: boolean
              description: Represents a value of true or false.
            - value: guid
              description: Represents a Guid.
            - value: uri
              description: Represents a URI.
        isRequired:
          type: boolean
        maxLength:
          type: integer
          format: int32
        maxValue:
          type: string
          format: decimal
        minLength:
          type: integer
          format: int32
        minValue:
          type: string
          format: decimal
        pattern:
          type: string
        patternMismatchErrorMessage:
          type: string
      description: Describes what values are valid for a subscription input
    InputValidationItem:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ValidationItem'
    InputValidationRequest:
      type: object
      properties:
        inputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ValidationItem'
      description: ""
    InputValue:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: Any other data about this input
        displayValue:
          type: string
          description: The text to show for the display of this value
        value:
          type: string
          description: The value to store for this input
      description: Information about a single value for an input
    InputValues:
      type: object
      properties:
        defaultValue:
          type: string
          description: The default value to use for this input
        error:
          $ref: '#/components/schemas/InputValuesError'
        inputId:
          type: string
          description: The id of the input
        isDisabled:
          type: boolean
          description: Should this input be disabled
        isLimitedToPossibleValues:
          type: boolean
          description: Should the value be restricted to one of the values in the
            PossibleValues (True) or are the values in PossibleValues just a suggestion
            (False)
        isReadOnly:
          type: boolean
          description: Should this input be made read-only
        possibleValues:
          type: array
          description: Possible values that this input can take
          items:
            $ref: '#/components/schemas/InputValue'
      description: Information about the possible/allowed values for a given subscription
        input
    InputValuesError:
      type: object
      properties:
        message:
          type: string
          description: The error message.
      description: Error information related to a subscription input value.
    Issue:
      type: object
      properties:
        category:
          type: string
        data:
          type: object
          additionalProperties:
            type: string
        message:
          type: string
        type:
          type: string
          enum:
          - error
          - warning
          x-ms-enum:
            name: IssueType
            values:
            - value: error
              description: ""
            - value: warning
              description: ""
      description: ""
    JobAssignedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/JobEvent'
    JobCancelMessage:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        timeout:
          type: string
          format: TimeSpan
      description: ""
    JobCompletedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/JobEvent'
    JobEnvironment:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpoint'
        mask:
          type: array
          items:
            $ref: '#/components/schemas/MaskHint'
        options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JobOption'
        secureFiles:
          type: array
          items:
            $ref: '#/components/schemas/SecureFile'
        systemConnection:
          $ref: '#/components/schemas/ServiceEndpoint'
        variables:
          type: object
          additionalProperties:
            type: string
      description: Represents the context of variables and vectors for a job request.
    JobEvent:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        name:
          type: string
      description: ""
    JobEventConfig:
      type: object
      properties:
        timeout:
          type: string
      description: ""
    JobEventsConfig:
      description: ""
      allOf:
      - $ref: '#/components/schemas/EventsConfig'
    JObject:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/JToken'
        type:
          type: string
          format: JTokenType
      description: ""
    JobOption:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          description: Gets the id of the option.
          format: uuid
      description: Represents an option that may affect the way an agent runs the
        job.
    JobRequestMessage:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/JobEnvironment'
        jobId:
          type: string
          format: uuid
        jobName:
          type: string
        jobRefName:
          type: string
        messageType:
          type: string
        plan:
          $ref: '#/components/schemas/TaskOrchestrationPlanReference'
        timeline:
          $ref: '#/components/schemas/TimelineReference'
      description: ""
    JobStartedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/JobEvent'
    JToken:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/JToken'
        hasValues:
          type: boolean
        item:
          $ref: '#/components/schemas/JToken'
        last:
          $ref: '#/components/schemas/JToken'
        next:
          $ref: '#/components/schemas/JToken'
        parent:
          type: string
          format: JContainer
        path:
          type: string
        previous:
          $ref: '#/components/schemas/JToken'
        root:
          $ref: '#/components/schemas/JToken'
        type:
          type: string
          format: JTokenType
      description: ""
    MaskHint:
      type: object
      properties:
        type:
          type: string
          enum:
          - variable
          - regex
          x-ms-enum:
            name: MaskType
            values:
            - value: variable
              description: ""
            - value: regex
              description: ""
        value:
          type: string
      description: ""
    MetricsColumnMetaData:
      type: object
      properties:
        columnName:
          type: string
          description: Name.
        columnValueType:
          type: string
          description: Data type.
      description: Meta data for a metrics column.
    MetricsColumnsHeader:
      type: object
      properties:
        dimensions:
          type: array
          description: 'Properties of deployment group for which metrics are provided.
            E.g. 1: LastJobStatus E.g. 2: TargetState'
          items:
            $ref: '#/components/schemas/MetricsColumnMetaData'
        metrics:
          type: array
          description: 'The types of metrics. E.g. 1: total count of deployment targets.
            E.g. 2: Average time of deployment to the deployment targets.'
          items:
            $ref: '#/components/schemas/MetricsColumnMetaData'
      description: Metrics columns header
    MetricsRow:
      type: object
      properties:
        dimensions:
          type: array
          description: 'The values of the properties mentioned as ''Dimensions'' in
            column header. E.g. 1: For a property ''LastJobStatus'' - metrics will
            be provided for ''passed'', ''failed'', etc. E.g. 2: For a property ''TargetState''
            - metrics will be provided for ''online'', ''offline'' targets.'
          items:
            type: string
        metrics:
          type: array
          description: Metrics in serialized format. Should be deserialized based
            on the data type provided in header.
          items:
            type: string
      description: Metrics row.
    OAuthConfiguration:
      type: object
      properties:
        clientId:
          type: string
          description: Gets or sets the ClientId
        clientSecret:
          type: string
          description: Gets or sets the ClientSecret
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets or sets the time when config was created.
          format: date-time
        endpointType:
          type: string
          description: Gets or sets the type of the endpoint.
        id:
          type: integer
          description: Gets or sets the unique identifier of this field
          format: int32
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Gets or sets the time when variable group was modified
          format: date-time
        name:
          type: string
          description: Gets or sets the name
        url:
          type: string
          description: Gets or sets the Url
      description: ""
    OAuthConfigurationParams:
      type: object
      properties:
        clientId:
          type: string
          description: Gets or sets the ClientId
        clientSecret:
          type: string
          description: Gets or sets the ClientSecret
        endpointType:
          type: string
          description: Gets or sets the type of the endpoint.
        name:
          type: string
          description: Gets or sets the name
        url:
          type: string
          description: Gets or sets the Url
      description: ""
    PackageMetadata:
      type: object
      properties:
        createdOn:
          type: string
          description: The date the package was created
          format: date-time
        downloadUrl:
          type: string
          description: A direct link to download the package.
        filename:
          type: string
          description: The UI uses this to display instructions, i.e. "unzip MyAgent.zip"
        hashValue:
          type: string
          description: MD5 hash as a base64 string
        infoUrl:
          type: string
          description: A link to documentation
        platform:
          type: string
          description: The platform (win7, linux, etc.)
        type:
          type: string
          description: The type of package (e.g. "agent")
        version:
          $ref: '#/components/schemas/PackageVersion'
      description: Represents a downloadable package.
    PackageVersion:
      type: object
      properties:
        major:
          type: integer
          format: int32
        minor:
          type: integer
          format: int32
        patch:
          type: integer
          format: int32
      description: ""
    PlanEnvironment:
      type: object
      properties:
        mask:
          type: array
          items:
            $ref: '#/components/schemas/MaskHint'
        options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JobOption'
        variables:
          type: object
          additionalProperties:
            type: string
      description: ""
    ProjectReference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      description: ""
    PropertiesCollection:
      type: object
      properties:
        count:
          type: integer
          description: The count of properties in the collection.
          format: int32
        item:
          type: object
          properties: {}
        keys:
          type: array
          description: The set of keys in the collection.
          items:
            type: string
        values:
          type: array
          description: The set of values in the collection.
          items:
            type: string
      description: The class represents a property bag as a collection of key-value
        pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`)
        except for `DBNull` are accepted. Values of type Byte[], Int32, Double, DateType
        and String preserve their type, other primitives are retuned as a String.
        Byte[] expected as base64 encoded string.
    PublishTaskGroupMetadata:
      type: object
      properties:
        comment:
          type: string
        parentDefinitionRevision:
          type: integer
          format: int32
        preview:
          type: boolean
        taskGroupId:
          type: string
          format: uuid
        taskGroupRevision:
          type: integer
          format: int32
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    ResourceUsage:
      type: object
      properties:
        runningPlanGroups:
          type: array
          items:
            $ref: '#/components/schemas/TaskOrchestrationPlanGroup'
        totalCount:
          type: integer
          format: int32
        usedCount:
          type: integer
          format: int32
      description: ""
    ResultTransformationDetails:
      type: object
      properties:
        resultTemplate:
          type: string
      description: ""
    SecureFile:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          format: date-time
        name:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
        ticket:
          type: string
      description: ""
    SendJobResponse:
      type: object
      properties:
        events:
          $ref: '#/components/schemas/JobEventsConfig'
        variables:
          type: object
          additionalProperties:
            type: string
      description: ""
    ServerExecutionDefinition:
      type: object
      properties:
        events:
          $ref: '#/components/schemas/EventsConfig'
        handlerName:
          type: string
      description: ""
    ServerTaskRequestMessage:
      description: ""
      allOf:
      - $ref: '#/components/schemas/JobRequestMessage'
    ServiceEndpoint:
      type: object
      properties:
        administratorsGroup:
          $ref: '#/components/schemas/IdentityRef'
        authorization:
          $ref: '#/components/schemas/EndpointAuthorization'
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        data:
          type: object
          additionalProperties:
            type: string
        description:
          type: string
          description: Gets or sets the description of endpoint.
        groupScopeId:
          type: string
          format: uuid
        id:
          type: string
          description: Gets or sets the identifier of this endpoint.
          format: uuid
        isReady:
          type: boolean
          description: EndPoint state indictor
        name:
          type: string
          description: Gets or sets the friendly name of the endpoint.
        operationStatus:
          $ref: '#/components/schemas/JObject'
        readersGroup:
          $ref: '#/components/schemas/IdentityRef'
        type:
          type: string
          description: Gets or sets the type of the endpoint.
        url:
          type: string
          description: Gets or sets the url of the endpoint.
      description: Represents an endpoint which may be used by an orchestration job.
    ServiceEndpointAuthenticationScheme:
      type: object
      properties:
        authorizationHeaders:
          type: array
          description: Gets or sets the authorization headers of service endpoint
            authentication scheme.
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
        clientCertificates:
          type: array
          description: Gets or sets the certificates of service endpoint authentication
            scheme.
          items:
            $ref: '#/components/schemas/ClientCertificate'
        displayName:
          type: string
          description: Gets or sets the display name for the service endpoint authentication
            scheme.
        inputDescriptors:
          type: array
          description: Gets or sets the input descriptors for the service endpoint
            authentication scheme.
          items:
            $ref: '#/components/schemas/InputDescriptor'
        scheme:
          type: string
          description: Gets or sets the scheme for service endpoint authentication.
      description: ""
    ServiceEndpointDetails:
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/EndpointAuthorization'
        data:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
        url:
          type: string
      description: ""
    ServiceEndpointExecutionData:
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        finishTime:
          type: string
          description: Gets the finish time of service endpoint execution.
          format: date-time
        id:
          type: integer
          description: Gets the Id of service endpoint execution data.
          format: int64
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planType:
          type: string
          description: Gets the plan type of service endpoint execution data.
        result:
          type: string
          description: Gets the result of service endpoint execution.
          enum:
          - succeeded
          - succeededWithIssues
          - failed
          - canceled
          - skipped
          - abandoned
          x-ms-enum:
            name: TaskResult
            values:
            - value: succeeded
              description: ""
            - value: succeededWithIssues
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: abandoned
              description: ""
        startTime:
          type: string
          description: Gets the start time of service endpoint execution.
          format: date-time
      description: Represents service endpoint execution data.
    ServiceEndpointExecutionRecord:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceEndpointExecutionData'
        endpointId:
          type: string
          description: Gets the Id of service endpoint.
          format: uuid
      description: ""
    ServiceEndpointExecutionRecordsInput:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceEndpointExecutionData'
        endpointIds:
          type: array
          items:
            type: string
            format: uuid
      description: ""
    ServiceEndpointRequest:
      type: object
      properties:
        dataSourceDetails:
          $ref: '#/components/schemas/DataSourceDetails'
        resultTransformationDetails:
          $ref: '#/components/schemas/ResultTransformationDetails'
        serviceEndpointDetails:
          $ref: '#/components/schemas/ServiceEndpointDetails'
      description: ""
    ServiceEndpointRequestResult:
      type: object
      properties:
        errorMessage:
          type: string
        result:
          $ref: '#/components/schemas/JToken'
        statusCode:
          type: string
          enum:
          - continue
          - switchingProtocols
          - oK
          - created
          - accepted
          - nonAuthoritativeInformation
          - noContent
          - resetContent
          - partialContent
          - multipleChoices
          - ambiguous
          - movedPermanently
          - moved
          - found
          - redirect
          - seeOther
          - redirectMethod
          - notModified
          - useProxy
          - unused
          - temporaryRedirect
          - redirectKeepVerb
          - badRequest
          - unauthorized
          - paymentRequired
          - forbidden
          - notFound
          - methodNotAllowed
          - notAcceptable
          - proxyAuthenticationRequired
          - requestTimeout
          - conflict
          - gone
          - lengthRequired
          - preconditionFailed
          - requestEntityTooLarge
          - requestUriTooLong
          - unsupportedMediaType
          - requestedRangeNotSatisfiable
          - expectationFailed
          - upgradeRequired
          - internalServerError
          - notImplemented
          - badGateway
          - serviceUnavailable
          - gatewayTimeout
          - httpVersionNotSupported
          x-ms-enum:
            name: HttpStatusCode
            values:
            - value: continue
              description: ""
            - value: switchingProtocols
              description: ""
            - value: oK
              description: ""
            - value: created
              description: ""
            - value: accepted
              description: ""
            - value: nonAuthoritativeInformation
              description: ""
            - value: noContent
              description: ""
            - value: resetContent
              description: ""
            - value: partialContent
              description: ""
            - value: multipleChoices
              description: ""
            - value: ambiguous
              description: ""
            - value: movedPermanently
              description: ""
            - value: moved
              description: ""
            - value: found
              description: ""
            - value: redirect
              description: ""
            - value: seeOther
              description: ""
            - value: redirectMethod
              description: ""
            - value: notModified
              description: ""
            - value: useProxy
              description: ""
            - value: unused
              description: ""
            - value: temporaryRedirect
              description: ""
            - value: redirectKeepVerb
              description: ""
            - value: badRequest
              description: ""
            - value: unauthorized
              description: ""
            - value: paymentRequired
              description: ""
            - value: forbidden
              description: ""
            - value: notFound
              description: ""
            - value: methodNotAllowed
              description: ""
            - value: notAcceptable
              description: ""
            - value: proxyAuthenticationRequired
              description: ""
            - value: requestTimeout
              description: ""
            - value: conflict
              description: ""
            - value: gone
              description: ""
            - value: lengthRequired
              description: ""
            - value: preconditionFailed
              description: ""
            - value: requestEntityTooLarge
              description: ""
            - value: requestUriTooLong
              description: ""
            - value: unsupportedMediaType
              description: ""
            - value: requestedRangeNotSatisfiable
              description: ""
            - value: expectationFailed
              description: ""
            - value: upgradeRequired
              description: ""
            - value: internalServerError
              description: ""
            - value: notImplemented
              description: ""
            - value: badGateway
              description: ""
            - value: serviceUnavailable
              description: ""
            - value: gatewayTimeout
              description: ""
            - value: httpVersionNotSupported
              description: ""
      description: ""
    ServiceEndpointType:
      type: object
      properties:
        authenticationSchemes:
          type: array
          description: Authentication scheme of service endpoint type.
          items:
            $ref: '#/components/schemas/ServiceEndpointAuthenticationScheme'
        dataSources:
          type: array
          description: Data sources of service endpoint type.
          items:
            $ref: '#/components/schemas/DataSource'
        dependencyData:
          type: array
          description: Dependency data of service endpoint type.
          items:
            $ref: '#/components/schemas/DependencyData'
        description:
          type: string
          description: Gets or sets the description of service endpoint type.
        displayName:
          type: string
          description: Gets or sets the display name of service endpoint type.
        endpointUrl:
          $ref: '#/components/schemas/EndpointUrl'
        helpLink:
          $ref: '#/components/schemas/HelpLink'
        helpMarkDown:
          type: string
        iconUrl:
          type: string
          description: Gets or sets the icon url of service endpoint type.
        inputDescriptors:
          type: array
          description: Input descriptor of service endpoint type.
          items:
            $ref: '#/components/schemas/InputDescriptor'
        name:
          type: string
          description: Gets or sets the name of service endpoint type.
        trustedHosts:
          type: array
          description: Trusted hosts of a service endpoint type.
          items:
            type: string
        uiContributionId:
          type: string
          description: Gets or sets the ui contribution id of service endpoint type.
      description: Represents type of the service endpoint.
    TaskAgent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskAgentReference'
    TaskAgentAuthorization:
      type: object
      properties:
        authorizationUrl:
          type: string
          description: Gets or sets the endpoint used to obtain access tokens from
            the configured token service.
        clientId:
          type: string
          description: Gets or sets the client identifier for this agent.
          format: uuid
        publicKey:
          $ref: '#/components/schemas/TaskAgentPublicKey'
      description: Provides data necessary for authorizing the agent using OAuth 2.0
        authentication flows.
    TaskAgentDelaySource:
      type: object
      properties:
        delays:
          type: array
          items:
            type: string
            format: TimeSpan
        taskAgent:
          $ref: '#/components/schemas/TaskAgentReference'
      description: ""
    TaskAgentJobRequest:
      type: object
      properties:
        agentDelays:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentDelaySource'
        assignTime:
          type: string
          format: date-time
        data:
          type: object
          additionalProperties:
            type: string
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        demands:
          type: array
          items:
            $ref: '#/components/schemas/Demand'
        expectedDuration:
          type: string
          format: TimeSpan
        finishTime:
          type: string
          format: date-time
        hostId:
          type: string
          format: uuid
        jobId:
          type: string
          format: uuid
        jobName:
          type: string
        lockedUntil:
          type: string
          format: date-time
        matchedAgents:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentReference'
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planGroup:
          type: string
        planId:
          type: string
          format: uuid
        planType:
          type: string
        poolId:
          type: integer
          format: int32
        queueId:
          type: integer
          format: int32
        queueTime:
          type: string
          format: date-time
        receiveTime:
          type: string
          format: date-time
        requestId:
          type: integer
          format: int64
        reservedAgent:
          $ref: '#/components/schemas/TaskAgentReference'
        result:
          type: string
          enum:
          - succeeded
          - succeededWithIssues
          - failed
          - canceled
          - skipped
          - abandoned
          x-ms-enum:
            name: TaskResult
            values:
            - value: succeeded
              description: ""
            - value: succeededWithIssues
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: abandoned
              description: ""
        scopeId:
          type: string
          format: uuid
        serviceOwner:
          type: string
          format: uuid
      description: ""
    TaskAgentManualUpdate:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskAgentUpdateReason'
    TaskAgentMessage:
      type: object
      properties:
        body:
          type: string
          description: Gets or sets the body of the message. If the <c>IV</c> property
            is provided the body will need to be decrypted using the <c>TaskAgentSession.EncryptionKey</c>
            value in addition to the <c>IV</c>.
        iV:
          type: array
          description: Gets or sets the intialization vector used to encrypt this
            message.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        messageId:
          type: integer
          description: Gets or sets the message identifier.
          format: int64
        messageType:
          type: string
          description: Gets or sets the message type, describing the data contract
            found in <c>TaskAgentMessage.Body</c>.
      description: Provides a contract for receiving messages from the task orchestrator.
    TaskAgentMinAgentVersionRequiredUpdate:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskAgentUpdateReason'
    TaskAgentPool:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskAgentPoolReference'
    TaskAgentPoolMaintenanceDefinition:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable maintenance
        id:
          type: integer
          description: Id
          format: int32
        jobTimeoutInMinutes:
          type: integer
          description: Maintenance job timeout per agent
          format: int32
        maxConcurrentAgentsPercentage:
          type: integer
          description: Max percentage of agents within a pool running maintenance
            job at given time
          format: int32
        options:
          $ref: '#/components/schemas/TaskAgentPoolMaintenanceOptions'
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        retentionPolicy:
          $ref: '#/components/schemas/TaskAgentPoolMaintenanceRetentionPolicy'
        scheduleSetting:
          $ref: '#/components/schemas/TaskAgentPoolMaintenanceSchedule'
      description: ""
    TaskAgentPoolMaintenanceJob:
      type: object
      properties:
        definitionId:
          type: integer
          description: The maintenance definition for the maintenance job
          format: int32
        errorCount:
          type: integer
          description: The total error counts during the maintenance job
          format: int32
        finishTime:
          type: string
          description: Time that the maintenance job was completed
          format: date-time
        jobId:
          type: integer
          description: Id of the maintenance job
          format: int32
        logsDownloadUrl:
          type: string
          description: The log download url for the maintenance job
        orchestrationId:
          type: string
          description: Orchestration/Plan Id for the maintenance job
          format: uuid
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        queueTime:
          type: string
          description: Time that the maintenance job was queued
          format: date-time
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        result:
          type: string
          description: The maintenance job result
          enum:
          - succeeded
          - failed
          - canceled
          x-ms-enum:
            name: TaskAgentPoolMaintenanceJobResult
            values:
            - value: succeeded
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
        startTime:
          type: string
          description: Time that the maintenance job was started
          format: date-time
        status:
          type: string
          description: Status of the maintenance job
          enum:
          - inProgress
          - completed
          - cancelling
          - queued
          x-ms-enum:
            name: TaskAgentPoolMaintenanceJobStatus
            values:
            - value: inProgress
              description: ""
            - value: completed
              description: ""
            - value: cancelling
              description: ""
            - value: queued
              description: ""
        targetAgents:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentPoolMaintenanceJobTargetAgent'
        warningCount:
          type: integer
          description: The total warning counts during the maintenance job
          format: int32
      description: ""
    TaskAgentPoolMaintenanceJobTargetAgent:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/TaskAgentReference'
        jobId:
          type: integer
          format: int32
        result:
          type: string
          enum:
          - succeeded
          - failed
          - canceled
          x-ms-enum:
            name: TaskAgentPoolMaintenanceJobResult
            values:
            - value: succeeded
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
        status:
          type: string
          enum:
          - inProgress
          - completed
          - cancelling
          - queued
          x-ms-enum:
            name: TaskAgentPoolMaintenanceJobStatus
            values:
            - value: inProgress
              description: ""
            - value: completed
              description: ""
            - value: cancelling
              description: ""
            - value: queued
              description: ""
      description: ""
    TaskAgentPoolMaintenanceOptions:
      type: object
      properties:
        workingDirectoryExpirationInDays:
          type: integer
          description: time to consider a System.DefaultWorkingDirectory is stale
          format: int32
      description: ""
    TaskAgentPoolMaintenanceRetentionPolicy:
      type: object
      properties:
        numberOfHistoryRecordsToKeep:
          type: integer
          description: Number of records to keep for maintenance job executed with
            this definition.
          format: int32
      description: ""
    TaskAgentPoolMaintenanceSchedule:
      type: object
      properties:
        daysToBuild:
          type: string
          description: Days for a build (flags enum for days of the week)
          enum:
          - none
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
          - all
          x-ms-enum:
            name: TaskAgentPoolMaintenanceScheduleDays
            values:
            - value: none
              description: Do not run.
            - value: monday
              description: Run on Monday.
            - value: tuesday
              description: Run on Tuesday.
            - value: wednesday
              description: Run on Wednesday.
            - value: thursday
              description: Run on Thursday.
            - value: friday
              description: Run on Friday.
            - value: saturday
              description: Run on Saturday.
            - value: sunday
              description: Run on Sunday.
            - value: all
              description: Run on all days of the week.
        scheduleJobId:
          type: string
          description: The Job Id of the Scheduled job that will queue the pool maintenance
            job.
          format: uuid
        startHours:
          type: integer
          description: Local timezone hour to start
          format: int32
        startMinutes:
          type: integer
          description: Local timezone minute to start
          format: int32
        timeZoneId:
          type: string
          description: Time zone of the build schedule (string representation of the
            time zone id)
      description: ""
    TaskAgentPoolReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        isHosted:
          type: boolean
          description: Gets or sets a value indicating whether or not this pool is
            managed by the service.
        name:
          type: string
        poolType:
          type: string
          description: Gets or sets the type of the pool
          enum:
          - automation
          - deployment
          x-ms-enum:
            name: TaskAgentPoolType
            values:
            - value: automation
              description: ""
            - value: deployment
              description: ""
        scope:
          type: string
          format: uuid
        size:
          type: integer
          description: Gets the current size of the pool.
          format: int32
      description: ""
    TaskAgentPoolSummary:
      type: object
      properties:
        columnsHeader:
          $ref: '#/components/schemas/MetricsColumnsHeader'
        deploymentGroups:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentGroupReference'
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        queues:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentQueue'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/MetricsRow'
      description: ""
    TaskAgentPublicKey:
      type: object
      properties:
        exponent:
          type: array
          description: Gets or sets the exponent for the public key.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        modulus:
          type: array
          description: Gets or sets the modulus for the public key.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
      description: Represents the public key portion of an RSA asymmetric key.
    TaskAgentQueue:
      type: object
      properties:
        id:
          type: integer
          description: Id of the queue
          format: int32
        name:
          type: string
          description: Name of the queue
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        projectId:
          type: string
          description: Project Id
          format: uuid
      description: ""
    TaskAgentReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        enabled:
          type: boolean
          description: Gets or sets a value indicating whether or not this agent should
            be enabled for job execution.
        id:
          type: integer
          description: Gets the identifier of the agent.
          format: int32
        name:
          type: string
          description: Gets the name of the agent.
        oSDescription:
          type: string
          description: Gets the OS of the agent.
        status:
          type: string
          description: Gets the current connectivity status of the agent.
          enum:
          - offline
          - online
          x-ms-enum:
            name: TaskAgentStatus
            values:
            - value: offline
              description: ""
            - value: online
              description: ""
        version:
          type: string
          description: Gets the version of the agent.
      description: ""
    TaskAgentSession:
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/TaskAgentReference'
        encryptionKey:
          $ref: '#/components/schemas/TaskAgentSessionKey'
        ownerName:
          type: string
          description: Gets or sets the owner name of this session. Generally this
            will be the machine of origination.
        sessionId:
          type: string
          description: Gets the unique identifier for this session.
          format: uuid
        systemCapabilities:
          type: object
          additionalProperties:
            type: string
      description: Represents a session for performing message exchanges from an agent.
    TaskAgentSessionKey:
      type: object
      properties:
        encrypted:
          type: boolean
          description: Gets or sets a value indicating whether or not the key value
            is encrypted. If this value is true, the Value property should be decrypted
            using the <c>RSA</c> key exchanged with the server during registration.
        value:
          type: array
          description: Gets or sets the symmetric key value.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
      description: Represents a symmetric key used for message-level encryption for
        communication sent to an agent.
    TaskAgentUpdate:
      type: object
      properties:
        currentState:
          type: string
          description: The current state of this agent update
        reason:
          $ref: '#/components/schemas/TaskAgentUpdateReason'
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        requestTime:
          type: string
          description: Gets the date on which this agent update was requested.
          format: date-time
        sourceVersion:
          $ref: '#/components/schemas/PackageVersion'
        targetVersion:
          $ref: '#/components/schemas/PackageVersion'
      description: ""
    TaskAgentUpdateReason:
      type: object
      properties:
        code:
          type: string
          enum:
          - manual
          - minAgentVersionRequired
          x-ms-enum:
            name: TaskAgentUpdateReasonType
            values:
            - value: manual
              description: ""
            - value: minAgentVersionRequired
              description: ""
      description: ""
    TaskAssignedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskEvent'
    TaskAttachment:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        createdOn:
          type: string
          format: date-time
        lastChangedBy:
          type: string
          format: uuid
        lastChangedOn:
          type: string
          format: date-time
        name:
          type: string
        recordId:
          type: string
          format: uuid
        timelineId:
          type: string
          format: uuid
        type:
          type: string
      description: ""
    TaskCompletedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskEvent'
    TaskDefinition:
      type: object
      properties:
        agentExecution:
          $ref: '#/components/schemas/TaskExecution'
        author:
          type: string
        category:
          type: string
        contentsUploaded:
          type: boolean
        contributionIdentifier:
          type: string
        contributionVersion:
          type: string
        dataSourceBindings:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceBinding'
        definitionType:
          type: string
        demands:
          type: array
          items:
            $ref: '#/components/schemas/Demand'
        deprecated:
          type: boolean
        description:
          type: string
        disabled:
          type: boolean
        execution:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JObject'
        friendlyName:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/TaskGroupDefinition'
        helpMarkDown:
          type: string
        hostType:
          type: string
        iconUrl:
          type: string
        id:
          type: string
          format: uuid
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/TaskInputDefinition'
        instanceNameFormat:
          type: string
        minimumAgentVersion:
          type: string
        name:
          type: string
        outputVariables:
          type: array
          items:
            $ref: '#/components/schemas/TaskOutputVariable'
        packageLocation:
          type: string
        packageType:
          type: string
        preview:
          type: boolean
        releaseNotes:
          type: string
        runsOn:
          type: array
          items:
            type: string
        satisfies:
          type: array
          items:
            type: string
        serverOwned:
          type: boolean
        sourceDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/TaskSourceDefinition'
        sourceLocation:
          type: string
        version:
          $ref: '#/components/schemas/TaskVersion'
        visibility:
          type: array
          items:
            type: string
      description: ""
    TaskDefinitionEndpoint:
      type: object
      properties:
        connectionId:
          type: string
          description: An ID that identifies a service connection to be used for authenticating
            endpoint requests.
        keySelector:
          type: string
          description: An Json based keyselector to filter response returned by fetching
            the endpoint <c>Url</c>.A Json based keyselector must be prefixed with
            "jsonpath:". KeySelector can be used to specify the filter to get the
            keys for the values specified with Selector. <example> The following keyselector
            defines an Json for extracting nodes named 'ServiceName'. <code> endpoint.KeySelector
            = "jsonpath://ServiceName"; </code></example>
        scope:
          type: string
          description: The scope as understood by Connected Services. Essentialy,
            a project-id for now.
        selector:
          type: string
          description: An XPath/Json based selector to filter response returned by
            fetching the endpoint <c>Url</c>. An XPath based selector must be prefixed
            with the string "xpath:". A Json based selector must be prefixed with
            "jsonpath:". <example> The following selector defines an XPath for extracting
            nodes named 'ServiceName'. <code> endpoint.Selector = "xpath://ServiceName";
            </code></example>
        taskId:
          type: string
          description: TaskId that this endpoint belongs to.
        url:
          type: string
          description: URL to GET.
      description: ""
    TaskDefinitionReference:
      type: object
      properties:
        definitionType:
          type: string
          description: Gets or sets the definition type. Values can be 'task' or 'metaTask'.
        id:
          type: string
          description: Gets or sets the unique identifier of task.
          format: uuid
        versionSpec:
          type: string
          description: Gets or sets the version specification of task.
      description: ""
    TaskEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/JobEvent'
    TaskExecution:
      type: object
      properties:
        execTask:
          $ref: '#/components/schemas/TaskReference'
        platformInstructions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
          description: 'If a task is going to run code, then this provides the type/script
            etc... information by platform. For example, it might look like. net45:
            { typeName: "Microsoft.TeamFoundation.Automation.Tasks.PowerShellTask",
            assemblyName: "Microsoft.TeamFoundation.Automation.Tasks.PowerShell.dll"
            } net20: { typeName: "Microsoft.TeamFoundation.Automation.Tasks.PowerShellTask",
            assemblyName: "Microsoft.TeamFoundation.Automation.Tasks.PowerShell.dll"
            } java: { jar: "powershelltask.tasks.automation.teamfoundation.microsoft.com",
            } node: { script: "powershellhost.js", }'
      description: ""
    TaskGroup:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskDefinition'
    TaskGroupCreateParameter:
      type: object
      properties:
        author:
          type: string
          description: Sets author name of the task group.
        category:
          type: string
          description: Sets category of the task group.
        description:
          type: string
          description: Sets description of the task group.
        friendlyName:
          type: string
          description: Sets friendly name of the task group.
        iconUrl:
          type: string
          description: Sets url icon of the task group.
        inputs:
          type: array
          description: Sets input for the task group.
          items:
            $ref: '#/components/schemas/TaskInputDefinition'
        instanceNameFormat:
          type: string
          description: Sets display name of the task group.
        name:
          type: string
          description: Sets name of the task group.
        parentDefinitionId:
          type: string
          description: Sets parent task group Id. This is used while creating a draft
            task group.
          format: uuid
        runsOn:
          type: array
          description: Sets RunsOn of the task group. Value can be 'Agent', 'Server'
            or 'DeploymentGroup'.
          items:
            type: string
        tasks:
          type: array
          description: Sets tasks for the task group.
          items:
            $ref: '#/components/schemas/TaskGroupStep'
        version:
          $ref: '#/components/schemas/TaskVersion'
      description: ""
    TaskGroupDefinition:
      type: object
      properties:
        displayName:
          type: string
        isExpanded:
          type: boolean
        name:
          type: string
        tags:
          type: array
          items:
            type: string
        visibleRule:
          type: string
      description: ""
    TaskGroupRevision:
      type: object
      properties:
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        changedDate:
          type: string
          format: date-time
        changeType:
          type: string
          enum:
          - add
          - update
          - delete
          - undelete
          x-ms-enum:
            name: AuditAction
            values:
            - value: add
              description: ""
            - value: update
              description: ""
            - value: delete
              description: ""
            - value: undelete
              description: ""
        comment:
          type: string
        fileId:
          type: integer
          format: int32
        revision:
          type: integer
          format: int32
        taskGroupId:
          type: string
          format: uuid
      description: ""
    TaskGroupStep:
      type: object
      properties:
        alwaysRun:
          type: boolean
          description: Gets or sets as 'true' to run the task always, 'false' otherwise.
        condition:
          type: string
          description: Gets or sets condition for the task.
        continueOnError:
          type: boolean
          description: Gets or sets as 'true' to continue on error, 'false' otherwise.
        displayName:
          type: string
          description: Gets or sets the display name.
        enabled:
          type: boolean
          description: Gets or sets as task is enabled or not.
        inputs:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets dictionary of inputs.
        task:
          $ref: '#/components/schemas/TaskDefinitionReference'
        timeoutInMinutes:
          type: integer
          description: Gets or sets the maximum time, in minutes, that a task is allowed
            to execute on agent before being cancelled by server. A zero value indicates
            an infinite timeout.
          format: int32
      description: Represents tasks in the task group.
    TaskGroupUpdateParameter:
      type: object
      properties:
        author:
          type: string
          description: Sets author name of the task group.
        category:
          type: string
          description: Sets category of the task group.
        comment:
          type: string
          description: Sets comment of the task group.
        description:
          type: string
          description: Sets description of the task group.
        friendlyName:
          type: string
          description: Sets friendly name of the task group.
        iconUrl:
          type: string
          description: Sets url icon of the task group.
        id:
          type: string
          description: Sets the unique identifier of this field.
          format: uuid
        inputs:
          type: array
          description: Sets input for the task group.
          items:
            $ref: '#/components/schemas/TaskInputDefinition'
        instanceNameFormat:
          type: string
          description: Sets display name of the task group.
        name:
          type: string
          description: Sets name of the task group.
        parentDefinitionId:
          type: string
          description: Gets or sets parent task group Id. This is used while creating
            a draft task group.
          format: uuid
        revision:
          type: integer
          description: Sets revision of the task group.
          format: int32
        runsOn:
          type: array
          description: Sets RunsOn of the task group. Value can be 'Agent', 'Server'
            or 'DeploymentGroup'.
          items:
            type: string
        tasks:
          type: array
          description: Sets tasks for the task group.
          items:
            $ref: '#/components/schemas/TaskGroupStep'
        version:
          $ref: '#/components/schemas/TaskVersion'
      description: ""
    TaskHubLicenseDetails:
      type: object
      properties:
        enterpriseUsersCount:
          type: integer
          format: int32
        freeHostedLicenseCount:
          type: integer
          format: int32
        freeLicenseCount:
          type: integer
          format: int32
        hasLicenseCountEverUpdated:
          type: boolean
        hostedAgentMinutesFreeCount:
          type: integer
          format: int32
        hostedAgentMinutesUsedCount:
          type: integer
          format: int32
        msdnUsersCount:
          type: integer
          format: int32
        purchasedHostedLicenseCount:
          type: integer
          format: int32
        purchasedLicenseCount:
          type: integer
          format: int32
        totalLicenseCount:
          type: integer
          format: int32
      description: ""
    TaskInputDefinition:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskInputDefinitionBase'
    TaskInputDefinitionBase:
      type: object
      properties:
        aliases:
          type: array
          items:
            type: string
        defaultValue:
          type: string
        groupName:
          type: string
        helpMarkDown:
          type: string
        label:
          type: string
        name:
          type: string
        options:
          type: object
          additionalProperties:
            type: string
        properties:
          type: object
          additionalProperties:
            type: string
        required:
          type: boolean
        type:
          type: string
        validation:
          $ref: '#/components/schemas/TaskInputValidation'
        visibleRule:
          type: string
      description: ""
    TaskInputValidation:
      type: object
      properties:
        expression:
          type: string
          description: Conditional expression
        message:
          type: string
          description: Message explaining how user can correct if validation fails
      description: ""
    TaskInstance:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskReference'
    TaskLog:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskLogReference'
    TaskLogReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        location:
          type: string
      description: ""
    TaskOrchestrationContainer:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskOrchestrationItem'
    TaskOrchestrationItem:
      type: object
      properties:
        itemType:
          type: string
          enum:
          - container
          - job
          x-ms-enum:
            name: TaskOrchestrationItemType
            values:
            - value: container
              description: ""
            - value: job
              description: ""
      description: ""
    TaskOrchestrationJob:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskOrchestrationItem'
    TaskOrchestrationOwner:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          format: int32
        name:
          type: string
      description: ""
    TaskOrchestrationPlan:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskOrchestrationPlanReference'
    TaskOrchestrationPlanGroup:
      type: object
      properties:
        planGroup:
          type: string
        project:
          $ref: '#/components/schemas/ProjectReference'
        runningRequests:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentJobRequest'
      description: ""
    TaskOrchestrationPlanGroupsQueueMetrics:
      type: object
      properties:
        count:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - running
          - queued
          - all
          x-ms-enum:
            name: PlanGroupStatus
            values:
            - value: running
              description: ""
            - value: queued
              description: ""
            - value: all
              description: ""
      description: ""
    TaskOrchestrationPlanReference:
      type: object
      properties:
        artifactLocation:
          type: string
        artifactUri:
          type: string
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planGroup:
          type: string
        planId:
          type: string
          format: uuid
        planType:
          type: string
        scopeIdentifier:
          type: string
          format: uuid
        version:
          type: integer
          format: int32
      description: ""
    TaskOrchestrationQueuedPlan:
      type: object
      properties:
        assignTime:
          type: string
          format: date-time
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planGroup:
          type: string
        planId:
          type: string
          format: uuid
        poolId:
          type: integer
          format: int32
        queuePosition:
          type: integer
          format: int32
        queueTime:
          type: string
          format: date-time
        scopeIdentifier:
          type: string
          format: uuid
      description: ""
    TaskOrchestrationQueuedPlanGroup:
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planGroup:
          type: string
        plans:
          type: array
          items:
            $ref: '#/components/schemas/TaskOrchestrationQueuedPlan'
        project:
          $ref: '#/components/schemas/ProjectReference'
        queuePosition:
          type: integer
          format: int32
      description: ""
    TaskOutputVariable:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      description: ""
    TaskPackageMetadata:
      type: object
      properties:
        type:
          type: string
          description: Gets the name of the package.
        url:
          type: string
          description: Gets the url of the package.
        version:
          type: string
          description: Gets the version of the package.
      description: ""
    TaskReference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        inputs:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        version:
          type: string
      description: ""
    TaskSourceDefinition:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskSourceDefinitionBase'
    TaskSourceDefinitionBase:
      type: object
      properties:
        authKey:
          type: string
        endpoint:
          type: string
        keySelector:
          type: string
        selector:
          type: string
        target:
          type: string
      description: ""
    TaskStartedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskEvent'
    TaskVersion:
      type: object
      properties:
        isTest:
          type: boolean
        major:
          type: integer
          format: int32
        minor:
          type: integer
          format: int32
        patch:
          type: integer
          format: int32
      description: ""
    Timeline:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TimelineReference'
    TimelineRecord:
      type: object
      properties:
        changeId:
          type: integer
          format: int32
        currentOperation:
          type: string
        details:
          $ref: '#/components/schemas/TimelineReference'
        errorCount:
          type: integer
          format: int32
        finishTime:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
        issues:
          type: array
          items:
            $ref: '#/components/schemas/Issue'
        lastModified:
          type: string
          format: date-time
        location:
          type: string
        log:
          $ref: '#/components/schemas/TaskLogReference'
        name:
          type: string
        order:
          type: integer
          format: int32
        parentId:
          type: string
          format: uuid
        percentComplete:
          type: integer
          format: int32
        refName:
          type: string
        result:
          type: string
          enum:
          - succeeded
          - succeededWithIssues
          - failed
          - canceled
          - skipped
          - abandoned
          x-ms-enum:
            name: TaskResult
            values:
            - value: succeeded
              description: ""
            - value: succeededWithIssues
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: abandoned
              description: ""
        resultCode:
          type: string
        startTime:
          type: string
          format: date-time
        state:
          type: string
          enum:
          - pending
          - inProgress
          - completed
          x-ms-enum:
            name: TimelineRecordState
            values:
            - value: pending
              description: ""
            - value: inProgress
              description: ""
            - value: completed
              description: ""
        task:
          $ref: '#/components/schemas/TaskReference'
        type:
          type: string
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariableValue'
        warningCount:
          type: integer
          format: int32
        workerName:
          type: string
      description: ""
    TimelineReference:
      type: object
      properties:
        changeId:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        location:
          type: string
      description: ""
    ValidationItem:
      type: object
      properties:
        isValid:
          type: boolean
          description: Tells whether the current input is valid or not
        reason:
          type: string
          description: Reason for input validation failure
        type:
          type: string
          description: Type of validation item
        value:
          type: string
          description: Value to validate. The conditional expression to validate for
            the input for "expression" type Eg:eq(variables['Build.SourceBranch'],
            'refs/heads/master');eq(value, 'refs/heads/master')
      description: ""
    VariableGroup:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets or sets the time when variable group was created.
          format: date-time
        description:
          type: string
          description: Gets or sets description of the variable group.
        id:
          type: integer
          description: Gets or sets id of the variable group.
          format: int32
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Gets or sets the time when variable group was modified
          format: date-time
        name:
          type: string
          description: Gets or sets name of the variable group.
        providerData:
          $ref: '#/components/schemas/VariableGroupProviderData'
        type:
          type: string
          description: Gets or sets type of the variable group.
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariableValue'
          description: Gets or sets variables contained in the variable group.
      description: A variable group is a collection of related variables.
    VariableGroupParameters:
      type: object
      properties:
        description:
          type: string
          description: Sets description of the variable group.
        name:
          type: string
          description: Sets name of the variable group.
        providerData:
          $ref: '#/components/schemas/VariableGroupProviderData'
        type:
          type: string
          description: Sets type of the variable group.
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariableValue'
          description: Sets variables contained in the variable group.
      description: ""
    VariableGroupProviderData:
      type: object
      description: Defines provider data of the variable group.
    VariableValue:
      type: object
      properties:
        isSecret:
          type: boolean
        value:
          type: string
      description: ""
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1' to use
        this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.agentpools: Grants the ability to view tasks, pools, queues, agents,
              and currently running or recently completed jobs for agents
            vso.agentpools_manage: Grants the ability to manage pools, queues, and
              agents
            vso.serviceendpoint: Grants the ability to read service endpoints.
            vso.serviceendpoint_manage: Grants the ability to read, query and manage
              service endpoints.
            vso.serviceendpoint_query: Grants the ability to read and query service
              endpoints.
            vso.machinegroup_manage: Provides ability to manage deployment group and
              agent pools
            vso.taskgroups_manage: Grants the ability to read, create and manage taskgroups.
            vso.taskgroups_read: Grants the ability to read task groups
            vso.taskgroups_write: Grants the ability to read and create task groups
x-ms-parameterized-host:
  hostTemplate: '{instance}'
  parameters:
  - name: instance
    description: TFS server name ({server:port})
    required: true
    type: string
    in: path
x-ms-vss-area: TaskAgent
x-ms-vss-resource-area-id: a85b8835-c1a1-4aac-ae97-1c3d0ba72dbd
x-ms-paths:
  /{collection}/{project}/_apis/distributedtask/variablegroups?:
    get:
      tags:
      - Variablegroups
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: variablegroups
      x-ms-vss-method: GetVariableGroups
      x-ms-preview: true
      description: Get variable groups.
      operationId: Get Variable Groups
      produces:
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Team Foundation Server collection.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: query
        name: groupName
        description: Name of variable group.
        required: false
        type: string
      - in: query
        name: actionFilter
        description: Action filter for the variable group. It specifies the action
          which can be performed on the variable groups.
        required: false
        type: string
        enum:
        - none
        - manage
        - use
        x-ms-enum:
          name: VariableGroupActionFilter
          values:
          - value: none
            description: ""
          - value: manage
            description: ""
          - value: use
            description: ""
      - in: query
        name: $top
        description: Number of variable groups to get.
        required: false
        type: integer
        format: int32
      - in: query
        name: continuationToken
        description: Gets the variable groups after the continuation token provided.
        required: false
        type: integer
        format: int32
      - in: query
        name: queryOrder
        description: Gets the results in the defined order. Default is 'IdDescending'.
        required: false
        type: string
        enum:
        - idAscending
        - idDescending
        x-ms-enum:
          name: VariableGroupQueryOrder
          values:
          - value: idAscending
            description: Order by id ascending.
          - value: idDescending
            description: Order by id descending.
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/VariableGroup'
      x-ms-examples:
        Get variable groups using group name filter:
          $ref: ./httpExamples/variablegroups/GET_VariableGroupsByGroupName-onprem.json
        Get variable groups using action filter:
          $ref: ./httpExamples/variablegroups/GET_VariableGroupsByActionFilter-onprem.json
