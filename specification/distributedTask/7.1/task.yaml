openapi: 3.0.1
info:
  title: Task
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: 7.1-preview
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://dev.azure.com/
security:
- accessToken: []
tags:
- name: Events
- name: Logs
- name: Oidctoken
- name: Records
paths:
  /{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/events:
    post:
      tags:
      - Events
      description: Send a pipeline job event to be processed by the execution plan.
      operationId: Events_Post Event
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: scopeIdentifier
        in: path
        description: The project GUID to scope the request
        required: true
        schema:
          type: string
          format: uuid
      - name: hubName
        in: path
        description: 'The name of the server hub. Common examples: "build", "rm",
          "checks"'
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: The ID of the plan.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The event data to be processed by the plan.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobEvent'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-ms-docs-override-version: 7.1-preview.1
      x-ms-vss-resource: events
      x-ms-vss-method: PostEvent
      x-ms-preview: true
      x-ms-examples:
        Send a TaskCompletedEvent:
          $ref: ./httpExamples/events/POST_distributedtask_PostEvent_.json
      x-codegen-request-body-name: body
  /{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/jobs/{jobId}/oidctoken:
    post:
      tags:
      - Oidctoken
      operationId: Oidctoken_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: scopeIdentifier
        in: path
        description: The project GUID to scope the request
        required: true
        schema:
          type: string
          format: uuid
      - name: hubName
        in: path
        description: 'The name of the server hub. Common examples: "build", "rm",
          "checks"'
        required: true
        schema:
          type: string
      - name: planId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: jobId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: serviceConnectionId
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskHubOidcToken'
      x-ms-docs-override-version: 7.1-preview.1
      x-ms-vss-resource: oidctoken
      x-ms-vss-method: CreateOidcToken
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs:
    post:
      tags:
      - Logs
      description: Create a log and connect it to a pipeline run's execution plan.
      operationId: Logs_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: scopeIdentifier
        in: path
        description: The project GUID to scope the request
        required: true
        schema:
          type: string
          format: uuid
      - name: hubName
        in: path
        description: 'The name of the server hub. Common examples: "build", "rm",
          "checks"'
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: The ID of the plan.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: An object that contains information about log's path.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskLog'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskLog'
      x-ms-docs-override-version: 7.1-preview.1
      x-ms-vss-resource: logs
      x-ms-vss-method: CreateLog
      x-ms-preview: true
      x-ms-examples:
        Create a log:
          $ref: ./httpExamples/logs/POST__distributedtask_CreateLog_.json
      x-codegen-request-body-name: body
  /{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs/{logId}:
    post:
      tags:
      - Logs
      description: Append a log to a task's log. The log should be sent in the body
        of the request as a TaskLog object stream.
      operationId: Logs_Append Log Content
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: scopeIdentifier
        in: path
        description: The project GUID to scope the request
        required: true
        schema:
          type: string
          format: uuid
      - name: hubName
        in: path
        description: 'The name of the server hub. Common examples: "build", "rm",
          "checks"'
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: The ID of the plan.
        required: true
        schema:
          type: string
          format: uuid
      - name: logId
        in: path
        description: The ID of the log.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Stream to upload
        content:
          application/octet-stream:
            schema:
              type: string
              format: Stream
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskLog'
      x-ms-docs-override-version: 7.1-preview.1
      x-ms-vss-resource: logs
      x-ms-vss-method: AppendLogContent
      x-ms-preview: true
      x-ms-examples:
        Append content to a log:
          $ref: ./httpExamples/logs/POST__distributedtask_AppendLogContent_.json
      x-codegen-request-body-name: body
  /{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}/records:
    patch:
      tags:
      - Records
      description: Update timeline records if they already exist, otherwise create
        new ones for the same timeline.
      operationId: Records_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: scopeIdentifier
        in: path
        description: The project GUID to scope the request
        required: true
        schema:
          type: string
          format: uuid
      - name: hubName
        in: path
        description: 'The name of the server hub. Common examples: "build", "rm",
          "checks"'
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: The ID of the plan.
        required: true
        schema:
          type: string
          format: uuid
      - name: timelineId
        in: path
        description: The ID of the timeline.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The array of timeline records to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VssJsonCollectionWrapper'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimelineRecord'
      x-ms-docs-override-version: 7.1-preview.1
      x-ms-vss-resource: records
      x-ms-vss-method: UpdateRecords
      x-ms-preview: true
      x-ms-examples:
        Update timeline's records:
          $ref: ./httpExamples/records/PATCH__distributedtask_UpdateRecords_.json
      x-codegen-request-body-name: body
components:
  schemas:
    Issue:
      type: object
      properties:
        category:
          type: string
          description: 'The category of the issue. <br />Example: Code - refers to
            compilation errors <br />Example: General - refers to generic errors'
        data:
          type: object
          additionalProperties:
            type: string
          description: A dictionary containing details about the issue.
        message:
          type: string
          description: A description of issue.
        type:
          type: string
          description: The type (error, warning) of the issue.
          enum:
          - error
          - warning
          x-ms-enum:
            name: IssueType
            values:
            - value: error
              description: ""
            - value: warning
              description: ""
      description: An issue (error, warning) associated with a pipeline run.
    JobEvent:
      type: object
      properties:
        jobId:
          type: string
          description: The ID of the pipeline job affected by the event.
          format: uuid
        name:
          type: string
          description: The name of the pipeline job event.
      description: A pipeline job event to be processed by the execution plan.
    JObject:
      type: object
      properties:
        item:
          type: string
          format: JToken
        type:
          type: string
          description: Gets the node type for this JToken.
          format: JTokenType
      description: Represents a JSON object.
    JobOption:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          description: Gets the id of the option.
          format: uuid
      description: Represents an option that may affect the way an agent runs the
        job.
    MaskHint:
      type: object
      properties:
        type:
          type: string
          enum:
          - variable
          - regex
          x-ms-enum:
            name: MaskType
            values:
            - value: variable
              description: ""
            - value: regex
              description: ""
        value:
          type: string
      description: ""
    PlanEnvironment:
      type: object
      properties:
        mask:
          type: array
          items:
            $ref: '#/components/schemas/MaskHint'
        options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JobOption'
        variables:
          type: object
          additionalProperties:
            type: string
      description: ""
    ProjectReference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    TaskAgentJob:
      type: object
      properties:
        container:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        sidecarContainers:
          type: object
          additionalProperties:
            type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentJobStep'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/TaskAgentJobVariable'
      description: ""
    TaskAgentJobStep:
      type: object
      properties:
        condition:
          type: string
        continueOnError:
          type: boolean
        enabled:
          type: boolean
        env:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          format: uuid
        inputs:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        retryCountOnTaskFailure:
          type: integer
          format: int32
        task:
          $ref: '#/components/schemas/TaskAgentJobTask'
        timeoutInMinutes:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - task
          - action
          x-ms-enum:
            name: TaskAgentJobStepType
            values:
            - value: task
              description: ""
            - value: action
              description: ""
      description: ""
    TaskAgentJobTask:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        version:
          type: string
      description: ""
    TaskAgentJobVariable:
      type: object
      properties:
        name:
          type: string
        secret:
          type: boolean
        value:
          type: string
      description: ""
    TaskAttachment:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        createdOn:
          type: string
          format: date-time
        lastChangedBy:
          type: string
          format: uuid
        lastChangedOn:
          type: string
          format: date-time
        name:
          type: string
        recordId:
          type: string
          format: uuid
        timelineId:
          type: string
          format: uuid
        type:
          type: string
      description: ""
    TaskHubOidcToken:
      type: object
      properties:
        oidcToken:
          type: string
      description: ""
    TaskLog:
      description: A task log connected to a timeline record.
      allOf:
      - $ref: '#/components/schemas/TaskLogReference'
    TaskLogReference:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the task log.
          format: int32
        location:
          type: string
          description: The REST URL of the task log.
      description: A reference to a task log. This class contains information about
        the output printed to the timeline record's logs console during pipeline run.
    TaskOrchestrationContainer:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskOrchestrationItem'
    TaskOrchestrationItem:
      type: object
      properties:
        itemType:
          type: string
          enum:
          - container
          - job
          x-ms-enum:
            name: TaskOrchestrationItemType
            values:
            - value: container
              description: ""
            - value: job
              description: ""
      description: ""
    TaskOrchestrationOwner:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          format: int32
        name:
          type: string
      description: ""
    TaskOrchestrationPlan:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TaskOrchestrationPlanReference'
    TaskOrchestrationPlanGroupsQueueMetrics:
      type: object
      properties:
        count:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - running
          - queued
          - all
          x-ms-enum:
            name: PlanGroupStatus
            values:
            - value: running
              description: ""
            - value: queued
              description: ""
            - value: all
              description: ""
      description: ""
    TaskOrchestrationPlanReference:
      type: object
      properties:
        artifactLocation:
          type: string
        artifactUri:
          type: string
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planGroup:
          type: string
        planId:
          type: string
          format: uuid
        planType:
          type: string
        scopeIdentifier:
          type: string
          format: uuid
        version:
          type: integer
          format: int32
      description: ""
    TaskOrchestrationQueuedPlan:
      type: object
      properties:
        assignTime:
          type: string
          format: date-time
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planGroup:
          type: string
        planId:
          type: string
          format: uuid
        poolId:
          type: integer
          format: int32
        queuePosition:
          type: integer
          format: int32
        queueTime:
          type: string
          format: date-time
        scopeIdentifier:
          type: string
          format: uuid
      description: ""
    TaskOrchestrationQueuedPlanGroup:
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        owner:
          $ref: '#/components/schemas/TaskOrchestrationOwner'
        planGroup:
          type: string
        plans:
          type: array
          items:
            $ref: '#/components/schemas/TaskOrchestrationQueuedPlan'
        project:
          $ref: '#/components/schemas/ProjectReference'
        queuePosition:
          type: integer
          format: int32
      description: ""
    TaskReference:
      type: object
      properties:
        id:
          type: string
          description: 'The ID of the task definition. Corresponds to the id value
            of task.json file. <br />Example: CmdLineV2 { "id": "D9BAFED4-0B18-4F58-968D-86655B4D2CE9"
            }'
          format: uuid
        inputs:
          type: object
          additionalProperties:
            type: string
          description: A dictionary of inputs specific to a task definition. Corresponds
            to inputs value of task.json file.
        name:
          type: string
          description: 'The name of the task definition. Corresponds to the name value
            of task.json file. <br />Example: CmdLineV2 { "name": "CmdLine" }'
        version:
          type: string
          description: 'The version of the task definition. Corresponds to the version
            value of task.json file. <br />Example: CmdLineV2 { "version": { "Major":
            2, "Minor": 212, "Patch": 0 } }'
      description: A reference to a task.
    Timeline:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TimelineReference'
    TimelineAttempt:
      type: object
      properties:
        attempt:
          type: integer
          description: The attempt of the record.
          format: int32
        identifier:
          type: string
          description: The unique identifier for the record.
        recordId:
          type: string
          description: The record identifier located within the specified timeline.
          format: uuid
        timelineId:
          type: string
          description: The timeline identifier which owns the record representing
            this attempt.
          format: uuid
      description: An attempt to update a TimelineRecord.
    TimelineRecord:
      type: object
      properties:
        agentSpecification:
          $ref: '#/components/schemas/JObject'
        attempt:
          type: integer
          description: The number of record attempts.
          format: int32
        changeId:
          type: integer
          description: The ID connecting all records updated at the same time. This
            value is taken from timeline's ChangeId.
          format: int32
        currentOperation:
          type: string
          description: A string that indicates the current operation.
        details:
          $ref: '#/components/schemas/TimelineReference'
        errorCount:
          type: integer
          description: The number of errors produced by this operation.
          format: int32
        finishTime:
          type: string
          description: The finish time of the record.
          format: date-time
        id:
          type: string
          description: The ID of the record.
          format: uuid
        identifier:
          type: string
          description: String identifier that is consistent across attempts.
        issues:
          type: array
          description: The list of issues produced by this operation.
          items:
            $ref: '#/components/schemas/Issue'
        lastModified:
          type: string
          description: The time the record was last modified.
          format: date-time
        location:
          type: string
          description: The REST URL of the record.
        log:
          $ref: '#/components/schemas/TaskLogReference'
        name:
          type: string
          description: The name of the record.
        order:
          type: integer
          description: An ordinal value relative to other records within the timeline.
          format: int32
        parentId:
          type: string
          description: 'The ID of the record''s parent. <br />Example: Stage is a
            parent of a Phase, Phase is a parent of a Job, Job is a parent of a Task.'
          format: uuid
        percentComplete:
          type: integer
          description: The percentage of record completion.
          format: int32
        previousAttempts:
          type: array
          description: The previous record attempts.
          items:
            $ref: '#/components/schemas/TimelineAttempt'
        queueId:
          type: integer
          description: The ID of the queue which connects projects to agent pools
            on which the operation ran on. Applicable when record is of type Job.
          format: int32
        refName:
          type: string
          description: Name of the referenced record.
        result:
          type: string
          description: The result of the record.
          enum:
          - succeeded
          - succeededWithIssues
          - failed
          - canceled
          - skipped
          - abandoned
          x-ms-enum:
            name: TaskResult
            values:
            - value: succeeded
              description: ""
            - value: succeededWithIssues
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: abandoned
              description: ""
        resultCode:
          type: string
          description: 'Evaluation of predefined conditions upon completion of record''s
            operation. <br />Example: Evaluating `succeeded()`, Result = True <br
            />Example: Evaluating `and(succeeded(), eq(variables[''system.debug''],
            False))`, Result = False'
        startTime:
          type: string
          description: The start time of the record.
          format: date-time
        state:
          type: string
          description: The state of the record.
          enum:
          - pending
          - inProgress
          - completed
          x-ms-enum:
            name: TimelineRecordState
            values:
            - value: pending
              description: ""
            - value: inProgress
              description: ""
            - value: completed
              description: ""
        task:
          $ref: '#/components/schemas/TaskReference'
        type:
          type: string
          description: 'The type of operation being tracked by the record. <br />Example:
            Stage, Phase, Job, Task...'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariableValue'
          description: The variables of the record.
        warningCount:
          type: integer
          description: The number of warnings produced by this operation.
          format: int32
        workerName:
          type: string
          description: The name of the agent running the operation. Applicable when
            record is of type Job.
      description: Detailed information about the execution of different operations
        during pipeline run.
    TimelineRecordFeedLinesWrapper:
      type: object
      properties:
        count:
          type: integer
          format: int32
        endLine:
          type: integer
          format: int64
        startLine:
          type: integer
          format: int64
        stepId:
          type: string
          format: uuid
        value:
          type: array
          items:
            type: string
      description: ""
    TimelineReference:
      type: object
      properties:
        changeId:
          type: integer
          description: The change ID.
          format: int32
        id:
          type: string
          description: The ID of the timeline.
          format: uuid
        location:
          type: string
          description: The REST URL of the timeline.
      description: A reference to a timeline.
    VariableValue:
      type: object
      properties:
        isReadOnly:
          type: boolean
          description: Indicates whether the variable can be changed during script's
            execution runtime.
        isSecret:
          type: boolean
          description: Indicates whether the variable should be encrypted at rest.
        value:
          type: string
          description: The value of the variable.
      description: A wrapper class for a generic variable.
    VssJsonCollectionWrapper:
      description: This class is used to serialize collections as a single JSON object
        on the wire.
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          description: The number of serialized items.
          format: int32
      description: ""
  parameters:
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.1-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.1-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
x-ms-vss-area: Task
