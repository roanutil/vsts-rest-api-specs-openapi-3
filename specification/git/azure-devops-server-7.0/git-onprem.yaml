openapi: 3.0.1
info:
  title: Git
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "7.0"
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://https://fabrikam-fiber-inc:8080/DefaultCollection/
security:
- accessToken: []
tags:
- name: Annotated Tags
  description: Git annotated tags are tags with additional metadata including the
    person who created the tag and a comment.
- name: Blobs
  description: Blobs are files in the Git repository.
- name: Cherry Picks
  description: |-
    This API provides a way to cherry pick into a new branch either a specific commit or commits that are associated to a
    pull request.
- name: Commits
  description: Controller to handle all REST calls against commits
- name: Diffs
  description: |-
    Diffs compare a target version with a base version and return a list of items that are only in the target version.
    If either the target or base version isn't specified, then the default branch is used.
- name: Forks
- name: Import Requests
  description: Create, query, and update requests to import data from another source
    control system.
- name: Items
  description: |-
    Items are the files, folders, and submodules in a repository.
    Files are represented by blobs and folders are trees.
    If the repository contains submodules, they will appear as commits.
- name: Merge Bases
  description: Ways to find merge base(s) between commits.
- name: Merges
  description: Merge endpoints provides a way to perform git merge operation.
- name: Policy Configurations
  description: "This API provides a way to list Git policy configurations.  For more\
    \ information, see \n[Improve code quality with branch policies](https://go.microsoft.com/fwlink/?linkid=859025)"
- name: Pull Request Attachments
  description: This API provides a way to create and retrieve files that have been
    attached to a pull request
- name: Pull Request Comment Likes
  description: |-
    This API provides methods for marking comments on pull requests as liked.
    Liking a comment is a used as a way of indicating agreement with the author.
- name: Pull Request Commits
  description: Provides REST API methods for Git commits associated with a pull request.
- name: Pull Request Iteration Changes
  description: Controller to handle all REST calls against pull request iterations
- name: Pull Request Iterations
  description: |-
    Provides REST API methods for Git pull request iterations.
    Iterations are created as a result of creating and pushing updates to a pull request.
- name: Pull Request Iteration Statuses
  description: |-
    Pull request statuses can be posted on pull request iteration to indicate that status links particular iteration. Iteration statuses behave the same way
    as pull request statuses, but can expire on new source updates when StatusPolicy is properly configured.

    Pull request statuses provide extensibility to the pull request experience. Third party services or users with read permission to the repository
    can create and get statuses associated with a pull request or an iteration via this REST API. An example of pull request status can be "CI Build Passed",
    "Integration tests pending", "Linting check succeeded".
    In order to update a status create a new status with the same genre and name values.
- name: Pull Request Labels
  description: "Pull Request labels provide extensibility to the pull request experience.\
    \ \nThird party services or users with read permission in the repository can\n\
    create, get, and delete labels associated with a pull request via this REST API.\n\
    Labels are used to provide quick insights into a pull request, an example\ncan\
    \ be labelling a Pull request as \"WIP\", \"Feature\", or \"Bug\" to let others\n\
    know the state and purpose of the Pull Request.\n\nLabels are posted to the pull\
    \ request and will be displayed in both the details and list views for pull requests."
- name: Pull Request Properties
  description: |-
    This API provides a way to manage external properties associated with a pull request. Third party services can use this API
    to store additional information on the pull request without maintaining their own storage.
- name: Pull Request Query
- name: Pull Request Reviewers
- name: Pull Requests
  description: This API provides a way to create, retrieve, and modify pull requests.
- name: Pull Request Share
- name: Pull Request Statuses
  description: |-
    Pull request statuses provide extensibility to the pull request experience. Third party services or users with read permission to the repository
    can create and get statuses associated with a pull request or an iteration via this REST API. An example of pull request status can be "CI Build Passed",
    "Integration tests pending", "Linting check succeeded".
    In order to update a status create a new status with the same genre and name values.
- name: Pull Request Thread Comments
  description: |-
    This API provides a way to retrieve or modify comments associated with threads in a pull request.
    Each thread in a pull request can contain one or more comments.
- name: Pull Request Threads
  description: |-
    This API provides a way to retrieve or modify threads in a pull request.
    Each thread in a pull request can contain one or more comments.
- name: Pull Request Work Items
  description: This API provides a way to manipulate the work items associated with
    a pull request.
- name: Pushes
  description: Create and Query Git pushes.
- name: Refs
  description: Controller to handle REST requests for git refs
- name: Refs Favorites
  description: Controller to handle REST requests for Git Ref Favorites
- name: Repositories
  description: Controller to handle all REST calls against Git Repositories
- name: Reverts
  description: |-
    This API provides a way to revert into a new branch either a specific commit or commits that are associated to a
    pull request.
- name: Stats
  description: "Branch statistics indicate how far behind and ahead a branch is from\
    \ the default branch. \nBranch A is \"ahead\" of branch B if branch A contains\
    \ commits not in branch B's history."
- name: Statuses
  description: |-
    This API provides a way to manipulate statuses associated with the Git commit.
    Commit status allows you to mark commits with status information from other systems.
    For instance, it's used in VSTS to surface the state of the build associated with the status in the web UI.
- name: Suggestions
  description: API for retrieving git pull request suggestions.
- name: Trees
paths:
  /{collection}/{project}/_apis/git/deletedrepositories:
    get:
      tags:
      - Repositories
      description: Retrieve deleted git repositories.
      operationId: Repositories_Get Deleted Repositories
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitDeletedRepository'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: deletedRepositories
      x-ms-vss-method: GetDeletedRepositories
  /{collection}/{project}/_apis/git/favorites/refs:
    get:
      tags:
      - Refs Favorites
      description: Gets the refs favorites for a repo and an identity.
      operationId: Refs Favorites_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: query
        description: The id of the repository.
        schema:
          type: string
      - name: identityId
        in: query
        description: The id of the identity whose favorites are to be retrieved. If
          null, the requesting identity is used.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitRefFavorite'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: refsFavorites
      x-ms-vss-method: GetRefFavorites
    post:
      tags:
      - Refs Favorites
      description: Creates a ref favorite
      operationId: Refs Favorites_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The ref favorite to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRefFavorite'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRefFavorite'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: refsFavorites
      x-ms-vss-method: CreateFavorite
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/favorites/refs/{favoriteId}:
    get:
      tags:
      - Refs Favorites
      description: Gets the refs favorite for a favorite Id.
      operationId: Refs Favorites_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: favoriteId
        in: path
        description: The Id of the requested ref favorite.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRefFavorite'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: refsFavorites
      x-ms-vss-method: GetRefFavorite
    delete:
      tags:
      - Refs Favorites
      description: Deletes the refs favorite specified
      operationId: Refs Favorites_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: favoriteId
        in: path
        description: The Id of the ref favorite to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: refsFavorites
      x-ms-vss-method: DeleteRefFavorite
  /{collection}/{project}/_apis/git/policy/configurations:
    get:
      tags:
      - Policy Configurations
      description: |-
        Retrieve a list of policy configurations by a given set of scope/filtering criteria.

        Below is a short description of how all of the query parameters interact with each other:
        - repositoryId set, refName set: returns all policy configurations that *apply* to a particular branch in a repository
        - repositoryId set, refName unset: returns all policy configurations that *apply* to a particular repository
        - repositoryId unset, refName unset: returns all policy configurations that are *defined* at the project level
        - repositoryId unset, refName set: returns all project-level branch policies, plus the project level configurations
        For all of the examples above, when policyType is set, it'll restrict results to the given policy type
      operationId: Policy Configurations_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: query
        description: The repository id.
        schema:
          type: string
          format: uuid
      - name: refName
        in: query
        description: The fully-qualified Git ref name (e.g. refs/heads/master).
        schema:
          type: string
      - name: policyType
        in: query
        description: The policy type filter.
        schema:
          type: string
          format: uuid
      - name: $top
        in: query
        description: Maximum number of policies to return.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: Pass a policy configuration ID to fetch the next page of results,
          up to top number of results, for this endpoint.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          headers:
            x-ms-continuationtoken:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyConfiguration'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: policyConfigurations
      x-ms-vss-method: GetPolicyConfigurations
  /{collection}/{project}/_apis/git/pullrequests:
    get:
      tags:
      - Pull Requests
      description: |-
        Retrieve all pull requests matching a specified criteria.

        Please note that description field will be truncated up to 400 symbols in the result.
      operationId: Pull Requests_Get Pull Requests By Project
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: searchCriteria.creatorId
        in: query
        description: If set, search for pull requests that were created by this identity.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.includeLinks
        in: query
        description: Whether to include the _links field on the shallow references
        schema:
          type: boolean
      - name: searchCriteria.repositoryId
        in: query
        description: If set, search for pull requests whose target branch is in this
          repository.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.reviewerId
        in: query
        description: If set, search for pull requests that have this identity as a
          reviewer.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.sourceRefName
        in: query
        description: If set, search for pull requests from this branch.
        schema:
          type: string
      - name: searchCriteria.sourceRepositoryId
        in: query
        description: If set, search for pull requests whose source branch is in this
          repository.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.status
        in: query
        description: If set, search for pull requests that are in this state. Defaults
          to Active if unset.
        schema:
          type: string
          enum:
          - notSet
          - active
          - abandoned
          - completed
          - all
          x-ms-enum:
            name: PullRequestStatus
            values:
            - value: notSet
              description: Status not set. Default state.
            - value: active
              description: Pull request is active.
            - value: abandoned
              description: Pull request is abandoned.
            - value: completed
              description: Pull request is completed.
            - value: all
              description: Used in pull request search criteria to include all statuses.
        x-ms-enum:
          name: PullRequestStatus
          values:
          - value: notSet
            description: Status not set. Default state.
          - value: active
            description: Pull request is active.
          - value: abandoned
            description: Pull request is abandoned.
          - value: completed
            description: Pull request is completed.
          - value: all
            description: Used in pull request search criteria to include all statuses.
      - name: searchCriteria.targetRefName
        in: query
        description: If set, search for pull requests into this branch.
        schema:
          type: string
      - name: maxCommentLength
        in: query
        description: Not used.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: The number of pull requests to ignore. For example, to retrieve
          results 101-150, set top to 50 and skip to 100.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: The number of pull requests to retrieve.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitPullRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: GetPullRequestsByProject
      x-ms-examples:
        Pull requests by project:
          $ref: ./httpExamples/pullRequests/GET__git_pullRequests-onprem.json
  /{collection}/{project}/_apis/git/pullrequests/{pullRequestId}:
    get:
      tags:
      - Pull Requests
      description: Retrieve a pull request.
      operationId: Pull Requests_Get Pull Request By Id
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: The ID of the pull request to retrieve.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: GetPullRequestById
      x-ms-examples:
        ?
        : $ref: ./httpExamples/pullRequests/GET__git_repositories__repositoryId__pullRequests__pullRequestId_-onprem.json
  /{collection}/{project}/_apis/git/recycleBin/repositories:
    get:
      tags:
      - Repositories
      description: Retrieve soft-deleted git repositories from the recycle bin.
      operationId: Repositories_Get Recycle Bin Repositories
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitDeletedRepository'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: recycleBinRepositories
      x-ms-vss-method: GetRecycleBinRepositories
  /{collection}/{project}/_apis/git/recycleBin/repositories/{repositoryId}:
    delete:
      tags:
      - Repositories
      description: Destroy (hard delete) a soft-deleted Git repository.
      operationId: Repositories_Delete Repository From Recycle Bin
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The ID of the repository.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: recycleBinRepositories
      x-ms-vss-method: DeleteRepositoryFromRecycleBin
    patch:
      tags:
      - Repositories
      description: Recover a soft-deleted Git repository. Recently deleted repositories
        go into a soft-delete state for a period of time before they are hard deleted
        and become unrecoverable.
      operationId: Repositories_Restore Repository From Recycle Bin
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The ID of the repository.
        required: true
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRecycleBinRepositoryDetails'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepository'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: recycleBinRepositories
      x-ms-vss-method: RestoreRepositoryFromRecycleBin
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories:
    get:
      tags:
      - Repositories
      description: Retrieve git repositories.
      operationId: Repositories_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: includeLinks
        in: query
        description: '[optional] True to include reference links. The default value
          is false.'
        schema:
          type: boolean
      - name: includeAllUrls
        in: query
        description: '[optional] True to include all remote URLs. The default value
          is false.'
        schema:
          type: boolean
      - name: includeHidden
        in: query
        description: '[optional] True to include hidden repositories. The default
          value is false.'
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitRepository'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: repositories
      x-ms-vss-method: GetRepositories
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Repositories/GET__git_repositories-onprem.json
    post:
      tags:
      - Repositories
      description: Create a git repository in a team project.
      operationId: Repositories_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: sourceRef
        in: query
        description: '[optional] Specify the source refs to use while creating a fork
          repo'
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Specify the repo name, team project and/or parent repository.
          Team project information can be omitted from gitRepositoryToCreate if the
          request is project-scoped (i.e., includes project Id).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRepositoryCreateOptions'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepository'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: repositories
      x-ms-vss-method: CreateRepository
      x-ms-examples:
        Create a repository:
          $ref: ./httpExamples/Repositories/POST__git_repositories-onprem.json
        Create a fork of a parent repository:
          $ref: ./httpExamples/Repositories/POST__git_repositories_fork-onprem.json
        Create a fork of a parent repository syncing only the provided refs:
          $ref: ./httpExamples/Repositories/POST__git_repositories_fork_source_ref-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}:
    get:
      tags:
      - Repositories
      description: Retrieve a git repository.
      operationId: Repositories_Get Repository
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepository'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: repositories
      x-ms-vss-method: GetRepository
      x-ms-examples:
        Get a repository by repositoryId:
          $ref: ./httpExamples/Repositories/GET__git_repositories__repositoryId_-onprem.json
        Get a repository by remote URL:
          $ref: ./httpExamples/Repositories/GET__git_repositories__remoteurl-onprem.json
    delete:
      tags:
      - Repositories
      description: Delete a git repository
      operationId: Repositories_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The ID of the repository.
        required: true
        schema:
          type: string
          format: uuid
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: repositories
      x-ms-vss-method: DeleteRepository
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Repositories/DELETE__git_repositories__repositoryId_-onprem.json
    patch:
      tags:
      - Repositories
      description: Updates the Git repository with either a new repo name or a new
        default branch.
      operationId: Repositories_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The ID of the repository.
        required: true
        schema:
          type: string
          format: uuid
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Specify a new repo name or a new default branch of the repository
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRepository'
        required: true
      responses:
        200:
          description: The operation succeeded. The response contains the updated
            repository information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepository'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: repositories
      x-ms-vss-method: UpdateRepository
      x-ms-examples:
        Disable repository:
          $ref: ./httpExamples/Repositories/PATCH__git_repositories__disable_-onprem.json
        Update a respository without specifying the project:
          $ref: ./httpExamples/Repositories/PATCH__git_repositories__repositoryId_-onprem.json
        Update a respository while specifying the project:
          $ref: ./httpExamples/Repositories/PATCH__git_repositories__project_-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/annotatedtags:
    post:
      tags:
      - Annotated Tags
      description: |-
        Create an annotated tag.

        Repositories have both a name and an identifier. Identifiers are globally unique, but several projects
        may contain a repository of the same name. You don't need to include the project if you specify a
        repository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).
      operationId: Annotated Tags_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID or name of the repository.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Object containing details of tag to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitAnnotatedTag'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitAnnotatedTag'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: annotatedTags
      x-ms-vss-method: CreateAnnotatedTag
      x-ms-examples:
        ?
        : $ref: ./httpExamples/annotatedTags/POST__git_repositories__annotated__tags-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/annotatedtags/{objectId}:
    get:
      tags:
      - Annotated Tags
      description: |-
        Get an annotated tag.

        Repositories have both a name and an identifier. Identifiers are globally unique, but several projects
        may contain a repository of the same name. You don't need to include the project if you specify a
        repository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).
      operationId: Annotated Tags_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID or name of the repository.
        required: true
        schema:
          type: string
      - name: objectId
        in: path
        description: ObjectId (Sha1Id) of tag to get.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitAnnotatedTag'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: annotatedTags
      x-ms-vss-method: GetAnnotatedTag
      x-ms-examples:
        ?
        : $ref: ./httpExamples/annotatedTags/GET__git_repositories__annotated__tags-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/blobs:
    post:
      tags:
      - Blobs
      description: Gets one or more blobs in a zip file download.
      operationId: Blobs_Get Blobs Zip
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: filename
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Blob IDs (SHA1 hashes) to be returned in the zip file.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: blobs
      x-ms-vss-method: GetBlobs
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/blobs/{sha1}:
    get:
      tags:
      - Blobs
      description: |-
        Get a single blob.

        Repositories have both a name and an identifier. Identifiers are globally unique,
        but several projects may contain a repository of the same name. You don't need to include
        the project if you specify a repository by ID. However, if you specify a repository by name,
        you must also specify the project (by name or ID).
      operationId: Blobs_Get Blob
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: sha1
        in: path
        description: SHA1 hash of the file. You can get the SHA1 of a file using the
          "Git/Items/Get Item" endpoint.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: download
        in: query
        description: 'If true, prompt for a download rather than rendering in a browser.
          Note: this value defaults to true if $format is zip'
        schema:
          type: boolean
      - name: fileName
        in: query
        description: Provide a fileName to use for a download.
        schema:
          type: string
      - name: $format
        in: query
        description: 'Options: json, zip, text, octetstream. If not set, defaults
          to the MIME type set in the Accept header.'
        schema:
          type: string
      - name: resolveLfs
        in: query
        description: If true, try to resolve a blob to its LFS contents, if it's an
          LFS pointer file. Only compatible with octet-stream Accept headers or $format
          types
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/GitBlobRef'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/GitBlobRef'
            application/json:
              schema:
                $ref: '#/components/schemas/GitBlobRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: blobs
      x-ms-vss-method: GetBlob
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Blobs/GET__git_repositories__repositoryId__blobs__objectId_-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/cherryPicks:
    get:
      tags:
      - Cherry Picks
      description: Retrieve information about a cherry pick operation for a specific
        branch. This operation is expensive due to the underlying object structure,
        so this API only looks at the 1000 most recent cherry pick operations.
      operationId: Cherry Picks_Get Cherry Pick For Ref Name
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: refName
        in: query
        description: The GitAsyncRefOperationParameters generatedRefName used for
          the cherry pick operation.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitCherryPick'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: cherryPicks
      x-ms-vss-method: GetCherryPickForRefName
    post:
      tags:
      - Cherry Picks
      description: Cherry pick a specific commit or commits that are associated to
        a pull request into a new branch.
      operationId: Cherry Picks_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitAsyncRefOperationParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitCherryPick'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: cherryPicks
      x-ms-vss-method: CreateCherryPick
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/cherryPicks/{cherryPickId}:
    get:
      tags:
      - Cherry Picks
      description: Retrieve information about a cherry pick operation by cherry pick
        Id.
      operationId: Cherry Picks_Get Cherry Pick
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: cherryPickId
        in: path
        description: ID of the cherry pick.
        required: true
        schema:
          type: integer
          format: int32
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitCherryPick'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: cherryPicks
      x-ms-vss-method: GetCherryPick
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/commits:
    get:
      tags:
      - Commits
      description: Retrieve a list of commits associated with a particular push.
      operationId: Commits_Get Push Commits
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The id or friendly name of the repository. To use the friendly
          name, projectId must also be specified.
        required: true
        schema:
          type: string
      - name: pushId
        in: query
        description: The id of the push.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: top
        in: query
        description: The maximum number of commits to return ("get the top x commits").
        schema:
          type: integer
          format: int32
      - name: skip
        in: query
        description: The number of commits to skip.
        schema:
          type: integer
          format: int32
      - name: includeLinks
        in: query
        description: Set to false to avoid including REST Url links for resources.
          Defaults to true.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitCommitRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: commits
      x-ms-vss-method: GetPushCommits
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__pushes__pushId__commits-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}:
    get:
      tags:
      - Commits
      description: Retrieve a particular commit.
      operationId: Commits_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: commitId
        in: path
        description: The id of the commit.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The id or friendly name of the repository. To use the friendly
          name, projectId must also be specified.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: changeCount
        in: query
        description: The number of changes to include in the result.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitCommit'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: commits
      x-ms-vss-method: GetCommit
      x-ms-examples:
        Get by ID:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits__commitId_-onprem.json
        With limited changes:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits__commitId__changeCount-10-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/changes:
    get:
      tags:
      - Commits
      description: Retrieve changes for a particular commit.
      operationId: Commits_Get Changes
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: commitId
        in: path
        description: The id of the commit.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The id or friendly name of the repository. To use the friendly
          name, projectId must also be specified.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: top
        in: query
        description: The maximum number of changes to return.
        schema:
          type: integer
          format: int32
      - name: skip
        in: query
        description: The number of changes to skip.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitCommitChanges'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: changes
      x-ms-vss-method: GetChanges
      x-ms-examples:
        With changes:
          $ref: ./httpExamples/Changes/GET__git_repositories__repositoryId__commits__commitId__changes_top-_top__skip-_skip_-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/statuses:
    get:
      tags:
      - Statuses
      description: Get statuses associated with the Git commit.
      operationId: Statuses_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: commitId
        in: path
        description: ID of the Git commit.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: top
        in: query
        description: Optional. The number of statuses to retrieve. Default is 1000.
        schema:
          type: integer
          format: int32
      - name: skip
        in: query
        description: Optional. The number of statuses to ignore. Default is 0. For
          example, to retrieve results 101-150, set top to 50 and skip to 100.
        schema:
          type: integer
          format: int32
      - name: latestOnly
        in: query
        description: The flag indicates whether to get only latest statuses grouped
          by `Context.Name` and `Context.Genre`.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitStatus'
      security:
      - oauth2:
        - vso.code
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: statuses
      x-ms-vss-method: GetStatuses
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Statuses/GET__git_repositories__repositoryId__commits__commitId__statuses-onprem.json
    post:
      tags:
      - Statuses
      description: Create Git commit status.
      operationId: Statuses_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: commitId
        in: path
        description: ID of the Git commit.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Git commit status object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitStatus'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitStatus'
      security:
      - oauth2:
        - vso.code_write
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: statuses
      x-ms-vss-method: CreateCommitStatus
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Statuses/POST__git_repositories__repositoryId__commits__commitId__statuses-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/commitsbatch:
    post:
      tags:
      - Commits
      description: Retrieve git commits for a project matching the search criteria
      operationId: Commits_Get Commits Batch
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: $skip
        in: query
        description: Number of commits to skip.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: Maximum number of commits to return.
        schema:
          type: integer
          format: int32
      - name: includeStatuses
        in: query
        description: True to include additional commit status information.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Search options
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitQueryCommitsCriteria'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitCommitRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: commitsBatch
      x-ms-vss-method: GetCommitsBatch
      x-ms-examples:
        Commits by a list of commit IDs:
          $ref: ./httpExamples/CommitsBatch/POST__git_repositories__repositoryId__commitsBatch__ids-onprem.json
        Commits between two versions:
          $ref: ./httpExamples/CommitsBatch/POST__git_repositories__repositoryId__commitsBatch2-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/diffs/commits:
    get:
      tags:
      - Diffs
      description: Find the closest common commit (the merge base) between base and
        target commits, and get the diff between either the base and target commits
        or common and target commits.
      operationId: Diffs_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: diffCommonCommit
        in: query
        description: If true, diff between common and target commits. If false, diff
          between base and target commits.
        schema:
          type: boolean
      - name: $top
        in: query
        description: Maximum number of changes to return. Defaults to 100.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: Number of changes to skip
        schema:
          type: integer
          format: int32
      - name: baseVersion
        in: query
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        schema:
          type: string
      - name: baseVersionOptions
        in: query
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        schema:
          type: string
          enum:
          - none
          - previousChange
          - firstParent
          x-ms-enum:
            name: GitVersionOptions
            values:
            - value: none
              description: Not specified
            - value: previousChange
              description: Commit that changed item prior to the current version
            - value: firstParent
              description: First parent of commit (HEAD^)
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - name: baseVersionType
        in: query
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        schema:
          type: string
          enum:
          - branch
          - tag
          - commit
          x-ms-enum:
            name: GitVersionType
            values:
            - value: branch
              description: Interpret the version as a branch name
            - value: tag
              description: Interpret the version as a tag name
            - value: commit
              description: Interpret the version as a commit ID (SHA1)
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - name: targetVersion
        in: query
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        schema:
          type: string
      - name: targetVersionOptions
        in: query
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        schema:
          type: string
          enum:
          - none
          - previousChange
          - firstParent
          x-ms-enum:
            name: GitVersionOptions
            values:
            - value: none
              description: Not specified
            - value: previousChange
              description: Commit that changed item prior to the current version
            - value: firstParent
              description: First parent of commit (HEAD^)
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - name: targetVersionType
        in: query
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        schema:
          type: string
          enum:
          - branch
          - tag
          - commit
          x-ms-enum:
            name: GitVersionType
            values:
            - value: branch
              description: Interpret the version as a branch name
            - value: tag
              description: Interpret the version as a tag name
            - value: commit
              description: Interpret the version as a commit ID (SHA1)
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitCommitDiffs'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: commitDiffs
      x-ms-vss-method: GetCommitDiffs
      x-ms-examples:
        Between commit IDs:
          $ref: ./httpExamples/CommitDiffs/GET__git_repositories__repositoryId__diffs_commits_baseVersionType-_baseVersionType_-onprem.json
        Between branches:
          $ref: ./httpExamples/CommitDiffs/GET__git_repositories__repositoryId__diffs_commits_targetVersion-_targetVersion__baseVersion-_baseVersion_-onprem.json
        A page at a time:
          $ref: ./httpExamples/CommitDiffs/GET__git_repositories__repositoryId__diffs_commits_targetVersion-_targetVersion__baseVersion-_baseVersion_top-_top_skip-_skip_-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/importRequests:
    get:
      tags:
      - Import Requests
      description: Retrieve import requests for a repository.
      operationId: Import Requests_Query
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: includeAbandoned
        in: query
        description: True to include abandoned import requests in the results.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitImportRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: importRequests
      x-ms-vss-method: QueryImportRequests
      x-ms-examples:
        By repository ID:
          $ref: ./httpExamples/ImportRequests/GET__git_repositories__repositoryId__importRequests-onprem.json
        By repository ID with abandoned requests:
          $ref: ./httpExamples/ImportRequests/GET__git_repositories__repositoryId__importRequests_includeAbandoned-True-onprem.json
    post:
      tags:
      - Import Requests
      description: Create an import request.
      operationId: Import Requests_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The import request to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitImportRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitImportRequest'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: importRequests
      x-ms-vss-method: CreateImportRequest
      x-ms-examples:
        ?
        : $ref: ./httpExamples/ImportRequests/POST__git_repositories__repositoryId__importRequests-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/importRequests/{importRequestId}:
    get:
      tags:
      - Import Requests
      description: Retrieve a particular import request.
      operationId: Import Requests_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: importRequestId
        in: path
        description: The unique identifier for the import request.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitImportRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: importRequests
      x-ms-vss-method: GetImportRequest
      x-ms-examples:
        ?
        : $ref: ./httpExamples/ImportRequests/GET__git_repositories__repositoryId__importRequests__importRequestId_-onprem.json
    patch:
      tags:
      - Import Requests
      description: |-
        Retry or abandon a failed import request.

        There can only be one active import request associated with a repository. Marking a failed import request abandoned makes it inactive.
      operationId: Import Requests_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: importRequestId
        in: path
        description: The unique identifier for the import request to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The updated version of the import request. Currently, the only
          change allowed is setting the Status to Queued or Abandoned.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitImportRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitImportRequest'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: importRequests
      x-ms-vss-method: UpdateImportRequest
      x-ms-examples:
        Retry or abandon a failed import request:
          $ref: ./httpExamples/ImportRequests/PATCH__git_repositories__repositoryId__importRequests__importRequestId_-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/items:
    get:
      tags:
      - Items
      description: Get Item Metadata and/or Content for a collection of items. The
        download parameter is to indicate whether the content should be available
        as a download or just sent as a stream in the response. Doesn't apply to zipped
        content which is always returned as a download.
      operationId: Items_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: scopePath
        in: query
        description: The path scope.  The default is null.
        schema:
          type: string
      - name: recursionLevel
        in: query
        description: The recursion level of this request. The default is 'none', no
          recursion.
        schema:
          type: string
          enum:
          - none
          - oneLevel
          - oneLevelPlusNestedEmptyFolders
          - full
          x-ms-enum:
            name: VersionControlRecursionType
            values:
            - value: none
              description: Only return the specified item.
            - value: oneLevel
              description: Return the specified item and its direct children.
            - value: oneLevelPlusNestedEmptyFolders
              description: Return the specified item and its direct children, as well
                as recursive chains of nested child folders that only contain a single
                folder.
            - value: full
              description: Return specified item and all descendants
        x-ms-enum:
          name: VersionControlRecursionType
          values:
          - value: none
            description: Only return the specified item.
          - value: oneLevel
            description: Return the specified item and its direct children.
          - value: oneLevelPlusNestedEmptyFolders
            description: Return the specified item and its direct children, as well
              as recursive chains of nested child folders that only contain a single
              folder.
          - value: full
            description: Return specified item and all descendants
      - name: includeContentMetadata
        in: query
        description: Set to true to include content metadata.  Default is false.
        schema:
          type: boolean
      - name: latestProcessedChange
        in: query
        description: Set to true to include the latest changes.  Default is false.
        schema:
          type: boolean
      - name: download
        in: query
        description: Set to true to download the response as a file.  Default is false.
        schema:
          type: boolean
      - name: includeLinks
        in: query
        description: Set to true to include links to items.  Default is false.
        schema:
          type: boolean
      - name: $format
        in: query
        description: If specified, this overrides the HTTP Accept request header to
          return either 'json' or 'zip'. If $format is specified, then api-version
          should also be specified as a query parameter.
        schema:
          type: string
      - name: versionDescriptor.version
        in: query
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        schema:
          type: string
      - name: versionDescriptor.versionOptions
        in: query
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        schema:
          type: string
          enum:
          - none
          - previousChange
          - firstParent
          x-ms-enum:
            name: GitVersionOptions
            values:
            - value: none
              description: Not specified
            - value: previousChange
              description: Commit that changed item prior to the current version
            - value: firstParent
              description: First parent of commit (HEAD^)
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - name: versionDescriptor.versionType
        in: query
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        schema:
          type: string
          enum:
          - branch
          - tag
          - commit
          x-ms-enum:
            name: GitVersionType
            values:
            - value: branch
              description: Interpret the version as a branch name
            - value: tag
              description: Interpret the version as a tag name
            - value: commit
              description: Interpret the version as a commit ID (SHA1)
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitItem'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: items
      x-ms-vss-method: GetItems
      x-ms-examples:
        For a path:
          $ref: ./httpExamples/Items/GET__git_repositories__repositoryId__items_scopePath-_folderPath_-onprem.json
        Single level of recursion:
          $ref: ./httpExamples/Items/GET__git_repositories__repositoryId__items_scopePath-_folderPath__recursionLevel-OneLevel-onprem.json
        Full recursion and with content metadata:
          $ref: ./httpExamples/Items/GET__git_repositories__repositoryId__items_scopePath-_folderPath__recursionLevel-Full_includeContentMetadata-true-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/itemsbatch:
    post:
      tags:
      - Items
      description: Post for retrieving a creating a batch out of a set of items in
        a repo / project given a list of paths or a long path
      operationId: Items_Get Items Batch
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: 'Request data attributes: ItemDescriptors, IncludeContentMetadata,
          LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items
          to fetch, including path, version, and recursion level. IncludeContentMetadata:
          Whether to include metadata for all items LatestProcessedChange: Whether
          to include shallow ref to commit that last changed each item. IncludeLinks:
          Whether to include the _links field on the shallow references.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitItemRequestData'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: itemsBatch
      x-ms-vss-method: GetItemsBatch
      x-ms-examples:
        Multiple items:
          $ref: ./httpExamples/ItemsBatch/POST__git_repositories__repositoryId__itemsBatch-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullrequestquery:
    post:
      tags:
      - Pull Request Query
      description: This API is used to find what pull requests are related to a given
        commit.  It can be used to either find the pull request that created a particular
        merge commit or it can be used to find all pull requests that have ever merged
        a particular commit.  The input is a list of queries which each contain a
        list of commits. For each commit that you search against, you will get back
        a dictionary of commit -> pull requests.
      operationId: Pull Request Query_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The list of queries to perform.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPullRequestQuery'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestQuery'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestQuery
      x-ms-vss-method: GetPullRequestQuery
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullrequests:
    get:
      tags:
      - Pull Requests
      description: |-
        Retrieve all pull requests matching a specified criteria.

        Please note that description field will be truncated up to 400 symbols in the result.
      operationId: Pull Requests_Get Pull Requests
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: searchCriteria.creatorId
        in: query
        description: If set, search for pull requests that were created by this identity.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.includeLinks
        in: query
        description: Whether to include the _links field on the shallow references
        schema:
          type: boolean
      - name: searchCriteria.repositoryId
        in: query
        description: If set, search for pull requests whose target branch is in this
          repository.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.reviewerId
        in: query
        description: If set, search for pull requests that have this identity as a
          reviewer.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.sourceRefName
        in: query
        description: If set, search for pull requests from this branch.
        schema:
          type: string
      - name: searchCriteria.sourceRepositoryId
        in: query
        description: If set, search for pull requests whose source branch is in this
          repository.
        schema:
          type: string
          format: uuid
      - name: searchCriteria.status
        in: query
        description: If set, search for pull requests that are in this state. Defaults
          to Active if unset.
        schema:
          type: string
          enum:
          - notSet
          - active
          - abandoned
          - completed
          - all
          x-ms-enum:
            name: PullRequestStatus
            values:
            - value: notSet
              description: Status not set. Default state.
            - value: active
              description: Pull request is active.
            - value: abandoned
              description: Pull request is abandoned.
            - value: completed
              description: Pull request is completed.
            - value: all
              description: Used in pull request search criteria to include all statuses.
        x-ms-enum:
          name: PullRequestStatus
          values:
          - value: notSet
            description: Status not set. Default state.
          - value: active
            description: Pull request is active.
          - value: abandoned
            description: Pull request is abandoned.
          - value: completed
            description: Pull request is completed.
          - value: all
            description: Used in pull request search criteria to include all statuses.
      - name: searchCriteria.targetRefName
        in: query
        description: If set, search for pull requests into this branch.
        schema:
          type: string
      - name: maxCommentLength
        in: query
        description: Not used.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: The number of pull requests to ignore. For example, to retrieve
          results 101-150, set top to 50 and skip to 100.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: The number of pull requests to retrieve.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitPullRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: GetPullRequests
      x-ms-examples:
        Pull requests by repository:
          $ref: ./httpExamples/pullRequests/GET__git_repositories__repositoryId__pullRequests-onprem.json
        Just completed pull requests:
          $ref: ./httpExamples/pullRequests/GET__git_repositories__repositoryId__pullRequests_status-completed-onprem.json
        Targeting a specific branch:
          $ref: ./httpExamples/pullRequests/GET__git_repositories__repositoryId__pullRequests_targetRefName-refs_heads_master-onprem.json
    post:
      tags:
      - Pull Requests
      description: Create a pull request.
      operationId: Pull Requests_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: supportsIterations
        in: query
        description: If true, subsequent pushes to the pull request will be individually
          reviewable. Set this to false for large pull requests for performance reasons
          if this functionality is not needed.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The pull request to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPullRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequest'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: CreatePullRequest
      x-ms-examples:
        ?
        : $ref: ./httpExamples/pullRequests/POST__git_repositories__repositoryId__pullRequests-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullrequests/{pullRequestId}:
    get:
      tags:
      - Pull Requests
      description: Retrieve a pull request.
      operationId: Pull Requests_Get Pull Request
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: The ID of the pull request to retrieve.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: maxCommentLength
        in: query
        description: Not used.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: Not used.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: Not used.
        schema:
          type: integer
          format: int32
      - name: includeCommits
        in: query
        description: If true, the pull request will be returned with the associated
          commits.
        schema:
          type: boolean
      - name: includeWorkItemRefs
        in: query
        description: If true, the pull request will be returned with the associated
          work item references.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: GetPullRequest
    patch:
      tags:
      - Pull Requests
      description: |-
        Update a pull request

        These are the properties that can be updated with the API:
         - Status
         - Title
         - Description (up to 4000 characters)
         - CompletionOptions
         - MergeOptions
         - AutoCompleteSetBy.Id
         - TargetRefName (when the PR retargeting feature is enabled)
         Attempting to update other properties outside of this list will either cause the server to throw an `InvalidArgumentValueException`,
         or to silently ignore the update.
      operationId: Pull Requests_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The pull request content that should be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPullRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequest'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: UpdatePullRequest
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments:
    get:
      tags:
      - Pull Request Attachments
      description: Get a list of files attached to a given pull request.
      operationId: Pull Request Attachments_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestAttachments
      x-ms-vss-method: GetAttachments
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}:
    get:
      tags:
      - Pull Request Attachments
      description: Get the file content of a pull request attachment.
      operationId: Pull Request Attachments_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: fileName
        in: path
        description: The name of the attachment.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: Stream
            application/zip:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestAttachments
      x-ms-vss-method: GetAttachment
    post:
      tags:
      - Pull Request Attachments
      description: Attach a new file to a pull request.
      operationId: Pull Request Attachments_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: fileName
        in: path
        description: The name of the file.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Stream to upload
        content:
          application/octet-stream:
            schema:
              type: string
              format: Stream
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestAttachments
      x-ms-vss-method: CreateAttachment
      x-codegen-request-body-name: body
    delete:
      tags:
      - Pull Request Attachments
      description: Delete a pull request attachment.
      operationId: Pull Request Attachments_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: fileName
        in: path
        description: The name of the attachment to delete.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestAttachments
      x-ms-vss-method: DeleteAttachment
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/commits:
    get:
      tags:
      - Pull Request Commits
      description: Get the commits for the specified pull request.
      operationId: Pull Request Commits_Get Pull Request Commits
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID or name of the repository.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: $top
        in: query
        description: Maximum number of commits to return.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: The continuation token used for pagination.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitCommitRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestCommits
      x-ms-vss-method: GetPullRequestCommits
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations:
    get:
      tags:
      - Pull Request Iterations
      description: Get the list of iterations for the specified pull request.
      operationId: Pull Request Iterations_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID or name of the repository.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: includeCommits
        in: query
        description: If true, include the commits associated with each iteration in
          the response.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitPullRequestIteration'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterations
      x-ms-vss-method: GetPullRequestIterations
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}:
    get:
      tags:
      - Pull Request Iterations
      description: Get the specified iteration for a pull request.
      operationId: Pull Request Iterations_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID or name of the repository.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the pull request iteration to return.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestIteration'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterations
      x-ms-vss-method: GetPullRequestIteration
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/changes:
    get:
      tags:
      - Pull Request Iteration Changes
      description: Retrieve the changes made in a pull request between two iterations.
      operationId: Pull Request Iteration Changes_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the pull request iteration. <br /> Iteration one is the
          head of the source branch at the time the pull request is created and subsequent
          iterations are created when there are pushes to the source branch. Allowed
          values are between 1 and the maximum iteration on this pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: $top
        in: query
        description: Optional. The number of changes to retrieve.  The default value
          is 100 and the maximum value is 2000.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: Optional. The number of changes to ignore.  For example, to retrieve
          changes 101-150, set top 50 and skip to 100.
        schema:
          type: integer
          format: int32
      - name: $compareTo
        in: query
        description: ID of the pull request iteration to compare against.  The default
          value is zero which indicates the comparison is made against the common
          commit between the source and target branches
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestIterationChanges'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterationChanges
      x-ms-vss-method: GetPullRequestIterationChanges
      x-ms-examples:
        Changes in a specific iteration:
          $ref: ./httpExamples/PullRequestIterationChanges/GET__git_repositories__repositoryId__pullRequests__pullRequestId__iterations__iterationId__changes-onprem.json
        Changes since an earlier iteration:
          $ref: ./httpExamples/PullRequestIterationChanges/GET__git_repositories__repositoryId__pullRequests__pullRequestId__iterations__iterationId__changes__compareTo-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/commits:
    get:
      tags:
      - Pull Request Commits
      description: Get the commits for the specified iteration of a pull request.
      operationId: Pull Request Commits_Get Pull Request Iteration Commits
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID or name of the repository.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the iteration from which to get the commits.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: top
        in: query
        description: Maximum number of commits to return. The maximum number of commits
          that can be returned per batch is 500.
        schema:
          type: integer
          format: int32
      - name: skip
        in: query
        description: Number of commits to skip.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitCommitRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestCommits
      x-ms-vss-method: GetPullRequestIterationCommits
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses:
    get:
      tags:
      - Pull Request Iteration Statuses
      description: Get all the statuses associated with a pull request iteration.
      operationId: Pull Request Iteration Statuses_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the pull request iteration.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitPullRequestStatus'
      security:
      - oauth2:
        - vso.code
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterationStatuses
      x-ms-vss-method: GetPullRequestIterationStatuses
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestIterationStatuses/GET_git_pullRequestStatuses_iterationStatuses-onprem.json
    post:
      tags:
      - Pull Request Iteration Statuses
      description: |-
        Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.

        The only required field for the status is `Context.Name` that uniquely identifies the status.
        Note that `iterationId` in the request body is optional since `iterationId` can be specified in the URL.
        A conflict between `iterationId` in the URL and `iterationId` in the request body will result in status code 400.
      operationId: Pull Request Iteration Statuses_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the pull request iteration.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Pull request status to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPullRequestStatus'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestStatus'
      security:
      - oauth2:
        - vso.code_write
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterationStatuses
      x-ms-vss-method: CreatePullRequestIterationStatus
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestIterationStatuses/POST_git_pullRequestStatuses_iterationStatus-onprem.json
      x-codegen-request-body-name: body
    patch:
      tags:
      - Pull Request Iteration Statuses
      description: |-
        Update pull request iteration statuses collection. The only supported operation type is `remove`.

        This operation allows to delete multiple statuses in one call.
        The path of the `remove` operation should refer to the ID of the pull request status.
        For example `path="/1"` refers to the pull request status with ID 1.
      operationId: Pull Request Iteration Statuses_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the pull request iteration.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Operations to apply to the pull request statuses in JSON Patch
          format.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterationStatuses
      x-ms-vss-method: UpdatePullRequestIterationStatuses
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestIterationStatuses/PATCH_git_pullRequestStatuses_iterationStatuses-onprem.json
      x-codegen-request-body-name: body
  ? /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}
  : get:
      tags:
      - Pull Request Iteration Statuses
      description: Get the specific pull request iteration status by ID. The status
        ID is unique within the pull request across all iterations.
      operationId: Pull Request Iteration Statuses_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the pull request iteration.
        required: true
        schema:
          type: integer
          format: int32
      - name: statusId
        in: path
        description: ID of the pull request status.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestStatus'
      security:
      - oauth2:
        - vso.code
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterationStatuses
      x-ms-vss-method: GetPullRequestIterationStatus
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestIterationStatuses/GET_git_pullRequestStatuses_iterationStatus-onprem.json
    delete:
      tags:
      - Pull Request Iteration Statuses
      description: |-
        Delete pull request iteration status.

        You can remove multiple statuses in one call by using Update operation.
      operationId: Pull Request Iteration Statuses_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: iterationId
        in: path
        description: ID of the pull request iteration.
        required: true
        schema:
          type: integer
          format: int32
      - name: statusId
        in: path
        description: ID of the pull request status.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestIterationStatuses
      x-ms-vss-method: DeletePullRequestIterationStatus
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestIterationStatuses/DELETE_git_pullRequestStatuses_iterationStatus-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels:
    get:
      tags:
      - Pull Request Labels
      description: Get all the labels assigned to a pull request.
      operationId: Pull Request Labels_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: projectId
        in: query
        description: Project ID or project name.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebApiTagDefinition'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestLabels
      x-ms-vss-method: GetPullRequestLabels
    post:
      tags:
      - Pull Request Labels
      description: Create a label for a specified pull request. The only required
        field is the name of the new label.
      operationId: Pull Request Labels_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: projectId
        in: query
        description: Project ID or project name.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Label to assign to the pull request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApiCreateTagRequestData'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiTagDefinition'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestLabels
      x-ms-vss-method: CreatePullRequestLabel
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}:
    get:
      tags:
      - Pull Request Labels
      description: Retrieves a single label that has been assigned to a pull request.
      operationId: Pull Request Labels_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: labelIdOrName
        in: path
        description: The name or ID of the label requested.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: projectId
        in: query
        description: Project ID or project name.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApiTagDefinition'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestLabels
      x-ms-vss-method: GetPullRequestLabel
    delete:
      tags:
      - Pull Request Labels
      description: Removes a label from the set of those assigned to the pull request.
      operationId: Pull Request Labels_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: labelIdOrName
        in: path
        description: The name or ID of the label requested.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: projectId
        in: query
        description: Project ID or project name.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestLabels
      x-ms-vss-method: DeletePullRequestLabels
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/properties:
    get:
      tags:
      - Pull Request Properties
      description: Get external properties of the pull request.
      operationId: Pull Request Properties_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestProperties
      x-ms-vss-method: GetPullRequestProperties
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestProperties/GetPullRequestProperties-onprem.json
    patch:
      tags:
      - Pull Request Properties
      description: Create or update pull request external properties. The patch operation
        can be `add`, `replace` or `remove`. For `add` operation, the path can be
        empty. If the path is empty, the value must be a list of key value pairs.
        For `replace` operation, the path cannot be empty. If the path does not exist,
        the property will be added to the collection. For `remove` operation, the
        path cannot be empty. If the path does not exist, no action will be performed.
      operationId: Pull Request Properties_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Properties to add, replace or remove in JSON Patch format.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestProperties
      x-ms-vss-method: UpdatePullRequestProperties
      x-ms-examples:
        Add properties:
          $ref: ./httpExamples/PullRequestProperties/AddPullRequestProperties-onprem.json
        Remove and replace properties:
          $ref: ./httpExamples/PullRequestProperties/RemoveAndReplacePullRequestProperties-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers:
    get:
      tags:
      - Pull Request Reviewers
      description: Retrieve the reviewers for a pull request
      operationId: Pull Request Reviewers_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityRefWithVote'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: GetPullRequestReviewers
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestReviewers/GET__git_repositories__repositoryId__pullRequests__pullRequestId__reviewers-onprem.json
    put:
      tags:
      - Pull Request Reviewers
      description: Add an unmaterialized identity to the reviewers of a pull request.
      operationId: Pull Request Reviewers_Create Unmaterialized Pull Request Reviewer
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Reviewer to add to the pull request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRefWithVote'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRefWithVote'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: CreateUnmaterializedPullRequestReviewer
      x-codegen-request-body-name: body
    post:
      tags:
      - Pull Request Reviewers
      description: Add reviewers to a pull request.
      operationId: Pull Request Reviewers_Create Pull Request Reviewers
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Reviewers to add to the pull request.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentityRef'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityRefWithVote'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: CreatePullRequestReviewers
      x-codegen-request-body-name: body
    patch:
      tags:
      - Pull Request Reviewers
      description: 'Reset the votes of multiple reviewers on a pull request.  NOTE:
        This endpoint only supports updating votes, but does not support updating
        required reviewers (use policy) or display names.'
      operationId: Pull Request Reviewers_Update Pull Request Reviewers
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: IDs of the reviewers whose votes will be reset to zero
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentityRefWithVote'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: UpdatePullRequestReviewers
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}:
    get:
      tags:
      - Pull Request Reviewers
      description: Retrieve information about a particular reviewer on a pull request
      operationId: Pull Request Reviewers_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: reviewerId
        in: path
        description: ID of the reviewer.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRefWithVote'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: GetPullRequestReviewer
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestReviewers/GET__git_repositories__repositoryId__pullRequests__pullRequestId__reviewers__additionalReviewerId_-onprem.json
    put:
      tags:
      - Pull Request Reviewers
      description: Add a reviewer to a pull request or cast a vote.
      operationId: Pull Request Reviewers_Create Pull Request Reviewer
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: reviewerId
        in: path
        description: ID of the reviewer.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Reviewer's vote.<br />If the reviewer's ID is included here,
          it must match the reviewerID parameter.<br />Reviewers can set their own
          vote with this method.  When adding other reviewers, vote must be set to
          zero.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRefWithVote'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRefWithVote'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: CreatePullRequestReviewer
      x-ms-examples:
        Set vote:
          $ref: ./httpExamples/PullRequestReviewers/PUT__git_repositories__repositoryId__pullRequests__pullRequestId__reviewers__initialReviewerId_-onprem.json
        Add a reviewer:
          $ref: ./httpExamples/PullRequestReviewers/PUT__git_repositories__repositoryId__pullRequests__pullRequestId__reviewers__additionalReviewerId_-onprem.json
      x-codegen-request-body-name: body
    delete:
      tags:
      - Pull Request Reviewers
      description: Remove a reviewer from a pull request.
      operationId: Pull Request Reviewers_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: reviewerId
        in: path
        description: ID of the reviewer to remove.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: DeletePullRequestReviewer
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestReviewers/DELETE__git_repositories__repositoryId__pullRequests__pullRequestId__reviewers__additionalReviewerId_-onprem.json
    patch:
      tags:
      - Pull Request Reviewers
      description: 'Edit a reviewer entry. These fields are patchable: isFlagged,
        hasDeclined'
      operationId: Pull Request Reviewers_Update Pull Request Reviewer
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: reviewerId
        in: path
        description: ID of the reviewer.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Reviewer data.<br />If the reviewer's ID is included here, it
          must match the reviewerID parameter.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRefWithVote'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRefWithVote'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestReviewers
      x-ms-vss-method: UpdatePullRequestReviewer
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/share:
    post:
      tags:
      - Pull Request Share
      description: Sends an e-mail notification about a specific pull request to a
        set of recipients
      operationId: Pull Request Share_Share Pull Request
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the git repository.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareNotificationContext'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestShare
      x-ms-vss-method: SharePullRequest
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses:
    get:
      tags:
      - Pull Request Statuses
      description: Get all the statuses associated with a pull request.
      operationId: Pull Request Statuses_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitPullRequestStatus'
      security:
      - oauth2:
        - vso.code
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestStatuses
      x-ms-vss-method: GetPullRequestStatuses
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestStatuses/GET_git_pullRequestStatuses_statuses-onprem.json
    post:
      tags:
      - Pull Request Statuses
      description: |-
        Create a pull request status.

        The only required field for the status is `Context.Name` that uniquely identifies the status.
        Note that you can specify iterationId in the request body to post the status on the iteration.
      operationId: Pull Request Statuses_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Pull request status to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPullRequestStatus'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestStatus'
      security:
      - oauth2:
        - vso.code_write
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestStatuses
      x-ms-vss-method: CreatePullRequestStatus
      x-ms-examples:
        On pull request:
          $ref: ./httpExamples/PullRequestStatuses/POST_git_pullRequestStatuses_status-onprem.json
        On iteration:
          $ref: ./httpExamples/PullRequestStatuses/POST_git_pullRequestStatuses_statusIterationInBody-onprem.json
        With properties:
          $ref: ./httpExamples/PullRequestStatuses/POST_git_pullRequestStatuses_statusWithProperties-onprem.json
      x-codegen-request-body-name: body
    patch:
      tags:
      - Pull Request Statuses
      description: |-
        Update pull request statuses collection. The only supported operation type is `remove`.

        This operation allows to delete multiple statuses in one call.
        The path of the `remove` operation should refer to the ID of the pull request status.
        For example `path="/1"` refers to the pull request status with ID 1.
      operationId: Pull Request Statuses_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Operations to apply to the pull request statuses in JSON Patch
          format.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestStatuses
      x-ms-vss-method: UpdatePullRequestStatuses
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestStatuses/PATCH_git_pullRequestStatuses_statuses-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}:
    get:
      tags:
      - Pull Request Statuses
      description: Get the specific pull request status by ID. The status ID is unique
        within the pull request across all iterations.
      operationId: Pull Request Statuses_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: statusId
        in: path
        description: ID of the pull request status.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestStatus'
      security:
      - oauth2:
        - vso.code
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestStatuses
      x-ms-vss-method: GetPullRequestStatus
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestStatuses/GET_git_pullRequestStatuses_status-onprem.json
    delete:
      tags:
      - Pull Request Statuses
      description: |-
        Delete pull request status.

        You can remove multiple statuses in one call by using Update operation.
      operationId: Pull Request Statuses_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request’s target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: statusId
        in: path
        description: ID of the pull request status.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
        - vso.code_status
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestStatuses
      x-ms-vss-method: DeletePullRequestStatus
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestStatuses/DELETE_git_pullRequestStatuses_status-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads:
    get:
      tags:
      - Pull Request Threads
      description: Retrieve all threads in a pull request.
      operationId: Pull Request Threads_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: $iteration
        in: query
        description: If specified, thread positions will be tracked using this iteration
          as the right side of the diff.
        schema:
          type: integer
          format: int32
      - name: $baseIteration
        in: query
        description: If specified, thread positions will be tracked using this iteration
          as the left side of the diff.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitPullRequestCommentThread'
      security:
      - oauth2:
        - vso.code
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreads
      x-ms-vss-method: GetThreads
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestThreads/GET__git_repositories__repositoryId__pullRequests__pullRequestId__threads-onprem.json
    post:
      tags:
      - Pull Request Threads
      description: Create a thread in a pull request.
      operationId: Pull Request Threads_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: Repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The thread to create. Thread must contain at least one comment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPullRequestCommentThread'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestCommentThread'
      security:
      - oauth2:
        - vso.code_write
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreads
      x-ms-vss-method: CreateThread
      x-ms-examples:
        Comment on the pull request:
          $ref: ./httpExamples/PullRequestThreads/POST__git_repositories__repositoryId__pullRequests__pullRequestId__threads-onprem.json
        Comment on a specific file in the pull request:
          $ref: ./httpExamples/PullRequestThreads/POST__git_repositories__repositoryId__pullRequests__pullRequestId__threads2-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}:
    get:
      tags:
      - Pull Request Threads
      description: Retrieve a thread in a pull request.
      operationId: Pull Request Threads_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: ID of the thread.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: $iteration
        in: query
        description: If specified, thread position will be tracked using this iteration
          as the right side of the diff.
        schema:
          type: integer
          format: int32
      - name: $baseIteration
        in: query
        description: If specified, thread position will be tracked using this iteration
          as the left side of the diff.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestCommentThread'
      security:
      - oauth2:
        - vso.code
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreads
      x-ms-vss-method: GetPullRequestThread
    patch:
      tags:
      - Pull Request Threads
      description: Update a thread in a pull request.
      operationId: Pull Request Threads_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: ID of the thread to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The thread content that should be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPullRequestCommentThread'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPullRequestCommentThread'
      security:
      - oauth2:
        - vso.code_write
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreads
      x-ms-vss-method: UpdateThread
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments:
    get:
      tags:
      - Pull Request Thread Comments
      description: Retrieve all comments associated with a specific thread in a pull
        request.
      operationId: Pull Request Thread Comments_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: ID of the thread.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
      security:
      - oauth2:
        - vso.code
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreadComments
      x-ms-vss-method: GetComments
    post:
      tags:
      - Pull Request Thread Comments
      description: Create a comment on a specific thread in a pull request (up to
        500 comments can be created per thread).
      operationId: Pull Request Thread Comments_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: ID of the thread that the desired comment is in.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The comment to create. Comments can be up to 150,000 characters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      security:
      - oauth2:
        - vso.code_write
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreadComments
      x-ms-vss-method: CreateComment
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestThreadComments/POST__git_repositories__repositoryId__pullRequests__pullRequestId__threads__threadId__comments-onprem.json
      x-codegen-request-body-name: body
  ? /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}
  : get:
      tags:
      - Pull Request Thread Comments
      description: Retrieve a comment associated with a specific thread in a pull
        request.
      operationId: Pull Request Thread Comments_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: ID of the thread that the desired comment is in.
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        description: ID of the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      security:
      - oauth2:
        - vso.code
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreadComments
      x-ms-vss-method: GetComment
    delete:
      tags:
      - Pull Request Thread Comments
      description: Delete a comment associated with a specific thread in a pull request.
      operationId: Pull Request Thread Comments_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: ID of the thread that the desired comment is in.
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        description: ID of the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreadComments
      x-ms-vss-method: DeleteComment
      x-ms-examples:
        ?
        : $ref: ./httpExamples/PullRequestThreadComments/DELETE__git_repositories__repositoryId__pullRequests__pullRequestId__threads__threadId__comments__commentId_-onprem.json
    patch:
      tags:
      - Pull Request Thread Comments
      description: Update a comment associated with a specific thread in a pull request.
      operationId: Pull Request Thread Comments_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: ID of the thread that the desired comment is in.
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        description: ID of the comment to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The comment content that should be updated. Comments can be up
          to 150,000 characters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      security:
      - oauth2:
        - vso.code_write
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestThreadComments
      x-ms-vss-method: UpdateComment
      x-codegen-request-body-name: body
  ? /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes
  : get:
      tags:
      - Pull Request Comment Likes
      description: Get likes for a comment.
      operationId: Pull Request Comment Likes_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: The ID of the thread that contains the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        description: The ID of the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityRef'
      security:
      - oauth2:
        - vso.code
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestCommentLikes
      x-ms-vss-method: GetLikes
    post:
      tags:
      - Pull Request Comment Likes
      description: Add a like on a comment.
      operationId: Pull Request Comment Likes_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: The ID of the thread that contains the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        description: The ID of the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestCommentLikes
      x-ms-vss-method: CreateLike
    delete:
      tags:
      - Pull Request Comment Likes
      description: Delete a like on a comment.
      operationId: Pull Request Comment Likes_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The repository ID of the pull request's target branch.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: threadId
        in: path
        description: The ID of the thread that contains the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        description: The ID of the comment.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.code_write
        - vso.threads_full
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestCommentLikes
      x-ms-vss-method: DeleteLike
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/workitems:
    get:
      tags:
      - Pull Request Work Items
      description: Retrieve a list of work items associated with a pull request.
      operationId: Pull Request Work Items_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID or name of the repository.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: ID of the pull request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequestWorkItems
      x-ms-vss-method: GetPullRequestWorkItemRefs
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pushes:
    get:
      tags:
      - Pushes
      description: Retrieves pushes associated with the specified repository.
      operationId: Pushes_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: $skip
        in: query
        description: Number of pushes to skip.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: Number of pushes to return.
        schema:
          type: integer
          format: int32
      - name: searchCriteria.fromDate
        in: query
        description: 'Search criteria attributes: fromDate, toDate, pusherId, refName,
          includeRefUpdates or includeLinks. fromDate: Start date to search from.
          toDate: End date to search to. pusherId: Identity of the person who submitted
          the push. refName: Branch name to consider. includeRefUpdates: If true,
          include the list of refs that were updated by the push. includeLinks: Whether
          to include the _links field on the shallow references.'
        schema:
          type: string
          format: date-time
      - name: searchCriteria.includeLinks
        in: query
        description: Whether to include the _links field on the shallow references
        schema:
          type: boolean
      - name: searchCriteria.includeRefUpdates
        in: query
        description: 'Search criteria attributes: fromDate, toDate, pusherId, refName,
          includeRefUpdates or includeLinks. fromDate: Start date to search from.
          toDate: End date to search to. pusherId: Identity of the person who submitted
          the push. refName: Branch name to consider. includeRefUpdates: If true,
          include the list of refs that were updated by the push. includeLinks: Whether
          to include the _links field on the shallow references.'
        schema:
          type: boolean
      - name: searchCriteria.pusherId
        in: query
        description: 'Search criteria attributes: fromDate, toDate, pusherId, refName,
          includeRefUpdates or includeLinks. fromDate: Start date to search from.
          toDate: End date to search to. pusherId: Identity of the person who submitted
          the push. refName: Branch name to consider. includeRefUpdates: If true,
          include the list of refs that were updated by the push. includeLinks: Whether
          to include the _links field on the shallow references.'
        schema:
          type: string
          format: uuid
      - name: searchCriteria.refName
        in: query
        description: 'Search criteria attributes: fromDate, toDate, pusherId, refName,
          includeRefUpdates or includeLinks. fromDate: Start date to search from.
          toDate: End date to search to. pusherId: Identity of the person who submitted
          the push. refName: Branch name to consider. includeRefUpdates: If true,
          include the list of refs that were updated by the push. includeLinks: Whether
          to include the _links field on the shallow references.'
        schema:
          type: string
      - name: searchCriteria.toDate
        in: query
        description: 'Search criteria attributes: fromDate, toDate, pusherId, refName,
          includeRefUpdates or includeLinks. fromDate: Start date to search from.
          toDate: End date to search to. pusherId: Identity of the person who submitted
          the push. refName: Branch name to consider. includeRefUpdates: If true,
          include the list of refs that were updated by the push. includeLinks: Whether
          to include the _links field on the shallow references.'
        schema:
          type: string
          format: date-time
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitPush'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pushes
      x-ms-vss-method: GetPushes
      x-ms-examples:
        By repository ID:
          $ref: ./httpExamples/pushes/GET__git_repositories__repositoryId__pushes-onprem.json
        In a date range:
          $ref: ./httpExamples/pushes/GET__git_repositories__repositoryId__pushes_fromDate-_fromDate__toDate-_toDate_-onprem.json
        By who submitted the pushes:
          $ref: ./httpExamples/pushes/GET__git_repositories__repositoryId__pushes_pusherId-_pusherId_-onprem.json
        A page at a time:
          $ref: ./httpExamples/pushes/GET__git_repositories__repositoryId__pushes__skip-_skip___top-_top_-onprem.json
        For a particular branch, including ref updates:
          $ref: ./httpExamples/pushes/GET__git_repositories__repositoryId__pushes_refName-_refName__includeRefUpdates-true-onprem.json
    post:
      tags:
      - Pushes
      description: Push changes to the repository.
      operationId: Pushes_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitPush'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPush'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pushes
      x-ms-vss-method: CreatePush
      x-ms-examples:
        Initial commit (Create a new branch):
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes-onprem.json
        Add a text file:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes2-onprem.json
        Add a binary file:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes3-onprem.json
        Update a file:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes4-onprem.json
        Delete a file:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes5-onprem.json
        Rename a file:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes6-onprem.json
        Move a file:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes7-onprem.json
        Update a file in a new branch:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes8-onprem.json
        Multiple changes:
          $ref: ./httpExamples/pushes/POST__git_repositories__tempRepoId__pushes9-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/pushes/{pushId}:
    get:
      tags:
      - Pushes
      description: Retrieves a particular push.
      operationId: Pushes_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: pushId
        in: path
        description: ID of the push.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: includeCommits
        in: query
        description: The number of commits to include in the result.
        schema:
          type: integer
          format: int32
      - name: includeRefUpdates
        in: query
        description: If true, include the list of refs that were updated by the push.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitPush'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pushes
      x-ms-vss-method: GetPush
      x-ms-examples:
        Just the push:
          $ref: ./httpExamples/pushes/GET__git_repositories__repositoryId__pushes__pushId_-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/refs:
    get:
      tags:
      - Refs
      description: Queries the provided repository for its refs and returns them.
      operationId: Refs_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: filter
        in: query
        description: '[optional] A filter to apply to the refs (starts with).'
        schema:
          type: string
      - name: includeLinks
        in: query
        description: '[optional] Specifies if referenceLinks should be included in
          the result. default is false.'
        schema:
          type: boolean
      - name: includeStatuses
        in: query
        description: '[optional] Includes up to the first 1000 commit statuses for
          each ref. The default value is false.'
        schema:
          type: boolean
      - name: includeMyBranches
        in: query
        description: '[optional] Includes only branches that the user owns, the branches
          the user favorites, and the default branch. The default value is false.
          Cannot be combined with the filter parameter.'
        schema:
          type: boolean
      - name: latestStatusesOnly
        in: query
        description: '[optional] True to include only the tip commit status for each
          ref. This option requires `includeStatuses` to be true. The default value
          is false.'
        schema:
          type: boolean
      - name: peelTags
        in: query
        description: '[optional] Annotated tags will populate the PeeledObjectId property.
          default is false.'
        schema:
          type: boolean
      - name: filterContains
        in: query
        description: '[optional] A filter to apply to the refs (contains).'
        schema:
          type: string
      - name: $top
        in: query
        description: '[optional] Maximum number of refs to return. It cannot be bigger
          than 1000. If it is not provided but continuationToken is, top will default
          to 100.'
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: The continuation token used for pagination.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: refs
      x-ms-vss-method: GetRefs
      x-ms-examples:
        Refs:
          $ref: ./httpExamples/refs/GET__git_repositories__repositoryId__refs-onprem.json
        Refs heads:
          $ref: ./httpExamples/refs/GET__git_repositories__repositoryId__refs_heads-onprem.json
        Refs heads statuses:
          $ref: ./httpExamples/refs/GET__git_repositories__repositoryId__refs_heads_statuses-onprem.json
        Refs tags:
          $ref: ./httpExamples/refs/GET__git_repositories__repositoryId__refs_tags-onprem.json
        Refs heads that contain a word:
          $ref: ./httpExamples/refs/GET__git_repositories__repositoryId__refs_heads_contains_replacer-onprem.json
    post:
      tags:
      - Refs
      description: |-
        Creating, updating, or deleting refs(branches).

        Updating a ref means making it point at a different commit than it used to. You must specify both the old and new commit to avoid race conditions.
      operationId: Refs_Update Refs
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: projectId
        in: query
        description: ID or name of the team project. Optional if specifying an ID
          for repository.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: List of ref updates to attempt to perform
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GitRefUpdate'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitRefUpdateResult'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: refs
      x-ms-vss-method: UpdateRefs
      x-ms-examples:
        Create/Update/Delete a ref by repositoryId:
          $ref: ./httpExamples/refs/POST__git_repositories__repositoryId__refs-onprem.json
      x-codegen-request-body-name: body
    patch:
      tags:
      - Refs
      description: Lock or Unlock a branch.
      operationId: Refs_Update Ref
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: The name of the branch to lock/unlock
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: projectId
        in: query
        description: ID or name of the team project. Optional if specifying an ID
          for repository.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The ref update action (lock/unlock) to perform
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRefUpdate'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRef'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: refs
      x-ms-vss-method: UpdateRef
      x-ms-examples:
        Lock/unlock branch:
          $ref: ./httpExamples/refs/PATCH__git_repositories__repositoryId__refs-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/reverts:
    get:
      tags:
      - Reverts
      description: Retrieve information about a revert operation for a specific branch.
      operationId: Reverts_Get Revert For Ref Name
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: refName
        in: query
        description: The GitAsyncRefOperationParameters generatedRefName used for
          the revert operation.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRevert'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: reverts
      x-ms-vss-method: GetRevertForRefName
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Reverts/GetRevert-onprem.json
    post:
      tags:
      - Reverts
      description: Starts the operation to create a new branch which reverts changes
        introduced by either a specific commit or commits that are associated to a
        pull request.
      operationId: Reverts_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitAsyncRefOperationParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRevert'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: reverts
      x-ms-vss-method: CreateRevert
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Reverts/CreateRevert-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/reverts/{revertId}:
    get:
      tags:
      - Reverts
      description: Retrieve information about a revert operation by revert Id.
      operationId: Reverts_Get Revert
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: revertId
        in: path
        description: ID of the revert operation.
        required: true
        schema:
          type: integer
          format: int32
      - name: repositoryId
        in: path
        description: ID of the repository.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRevert'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: reverts
      x-ms-vss-method: GetRevert
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/stats/branches:
    get:
      tags:
      - Stats
      description: Retrieve statistics about all branches within a repository.
      operationId: Stats_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: baseVersionDescriptor.version
        in: query
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        schema:
          type: string
      - name: baseVersionDescriptor.versionOptions
        in: query
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        schema:
          type: string
          enum:
          - none
          - previousChange
          - firstParent
          x-ms-enum:
            name: GitVersionOptions
            values:
            - value: none
              description: Not specified
            - value: previousChange
              description: Commit that changed item prior to the current version
            - value: firstParent
              description: First parent of commit (HEAD^)
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - name: baseVersionDescriptor.versionType
        in: query
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        schema:
          type: string
          enum:
          - branch
          - tag
          - commit
          x-ms-enum:
            name: GitVersionType
            values:
            - value: branch
              description: Interpret the version as a branch name
            - value: tag
              description: Interpret the version as a tag name
            - value: commit
              description: Interpret the version as a commit ID (SHA1)
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitBranchStats'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: branchStats
      x-ms-vss-method: GetBranches
      x-ms-examples:
        For all branches:
          $ref: ./httpExamples/BranchStats/GET__git_repositories__repositoryId__stats_branches-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/suggestions:
    get:
      tags:
      - Suggestions
      description: Retrieve a pull request suggestion for a particular repository
        or team project.
      operationId: Suggestions_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: ID of the git repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitSuggestion'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: suggestions
      x-ms-vss-method: GetSuggestions
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/trees/{sha1}:
    get:
      tags:
      - Trees
      description: |-
        The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.

        Repositories have both a name and an identifier. Identifiers are globally unique, but several projects may contain a repository of the same name. You don't need to include the project if you specify a repository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID.
      operationId: Trees_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: path
        description: Repository Id.
        required: true
        schema:
          type: string
      - name: sha1
        in: path
        description: SHA1 hash of the tree object.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: projectId
        in: query
        description: Project Id.
        schema:
          type: string
      - name: recursive
        in: query
        description: Search recursively. Include trees underneath this tree. Default
          is false.
        schema:
          type: boolean
      - name: fileName
        in: query
        description: Name to use if a .zip file is returned. Default is the object
          ID.
        schema:
          type: string
      - name: $format
        in: query
        description: Use "zip". Defaults to the MIME type set in the Accept header.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/GitTreeRef'
            application/json:
              schema:
                $ref: '#/components/schemas/GitTreeRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: trees
      x-ms-vss-method: GetTree
      x-ms-examples:
        Non-recursive Example:
          $ref: ./httpExamples/Trees/GET__git_repositories__repositoryId__trees__objectId_-onprem.json
        Recursive Example:
          $ref: ./httpExamples/Trees/GET__git_repositories__repositoryId__trees__objectId__recursive-true-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryNameOrId}/commits/{commitId}/mergebases:
    get:
      tags:
      - Merge Bases
      description: Find the merge bases of two commits, optionally across forks. If
        otherRepositoryId is not specified, the merge bases will only be calculated
        within the context of the local repositoryNameOrId.
      operationId: Merge Bases_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryNameOrId
        in: path
        description: ID or name of the local repository.
        required: true
        schema:
          type: string
      - name: commitId
        in: path
        description: First commit, usually the tip of the target branch of the potential
          merge.
        required: true
        schema:
          type: string
      - name: otherCommitId
        in: query
        description: Other commit, usually the tip of the source branch of the potential
          merge.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: otherCollectionId
        in: query
        description: The collection ID where otherCommitId lives.
        schema:
          type: string
          format: uuid
      - name: otherRepositoryId
        in: query
        description: The repository ID where otherCommitId lives.
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitCommitRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: mergeBases
      x-ms-vss-method: GetMergeBases
  /{collection}/{project}/_apis/git/repositories/{repositoryNameOrId}/forks/{collectionId}:
    get:
      tags:
      - Forks
      description: Retrieve all forks of a repository in the collection.
      operationId: Forks_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryNameOrId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: Team project collection ID.
        required: true
        schema:
          type: string
          format: uuid
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: includeLinks
        in: query
        description: True to include links.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitRepositoryRef'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: forks
      x-ms-vss-method: GetForks
  /{collection}/{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests:
    get:
      tags:
      - Forks
      description: Retrieve all requested fork sync operations on this repository.
      operationId: Forks_Get Fork Sync Requests
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryNameOrId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: includeAbandoned
        in: query
        description: True to include abandoned requests.
        schema:
          type: boolean
      - name: includeLinks
        in: query
        description: True to include links.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitForkSyncRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: forkSyncRequests
      x-ms-vss-method: GetForkSyncRequests
    post:
      tags:
      - Forks
      description: Request that another repository's refs be fetched into this one.
        It syncs two existing forks. To create a fork, please see the <a href="https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1">
        repositories endpoint</a>
      operationId: Forks_Create fork sync request
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryNameOrId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: includeLinks
        in: query
        description: True to include links
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Source repository and ref mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitForkSyncRequestParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitForkSyncRequest'
      security:
      - oauth2:
        - vso.code_write
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: forkSyncRequests
      x-ms-vss-method: CreateForkSyncRequest
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}:
    get:
      tags:
      - Forks
      description: Get a specific fork sync operation's details.
      operationId: Forks_Get fork sync request
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: repositoryNameOrId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: forkSyncOperationId
        in: path
        description: OperationId of the sync request.
        required: true
        schema:
          type: integer
          format: int32
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: includeLinks
        in: query
        description: True to include links.
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitForkSyncRequest'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: forkSyncRequests
      x-ms-vss-method: GetForkSyncRequest
  /{collection}/{project}/_apis/git/repositories/{repositoryNameOrId}/merges:
    post:
      tags:
      - Merges
      description: Request a git merge operation. Currently we support merging only
        2 commits.
      operationId: Merges_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryNameOrId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: includeLinks
        in: query
        description: True to include links
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Parents commitIds and merge commit messsage.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitMergeParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitMerge'
      security:
      - oauth2:
        - vso.code_manage
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: merges
      x-ms-vss-method: CreateMergeRequest
      x-ms-examples:
        Create a merge request.:
          $ref: ./httpExamples/merges/CreateMergeRequestAsync-onprem.json
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/git/repositories/{repositoryNameOrId}/merges/{mergeOperationId}:
    get:
      tags:
      - Merges
      description: Get a specific merge operation's details.
      operationId: Merges_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repositoryNameOrId
        in: path
        description: The name or ID of the repository.
        required: true
        schema:
          type: string
      - name: mergeOperationId
        in: path
        description: OperationId of the merge request.
        required: true
        schema:
          type: integer
          format: int32
      - name: includeLinks
        in: query
        description: True to include links
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitMerge'
      security:
      - oauth2:
        - vso.code
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: merges
      x-ms-vss-method: GetMergeRequest
      x-ms-examples:
        Get the details of the merge request.:
          $ref: ./httpExamples/merges/GetMergeRequestAsync-onprem.json
components:
  schemas:
    AssociatedWorkItem:
      type: object
      properties:
        assignedTo:
          type: string
        id:
          type: integer
          description: Id of associated the work item.
          format: int32
        state:
          type: string
        title:
          type: string
        url:
          type: string
          description: REST Url of the work item.
        webUrl:
          type: string
        workItemType:
          type: string
      description: ""
    AsyncGitOperationNotification:
      type: object
      properties:
        operationId:
          type: integer
          format: int32
      description: ""
    AsyncRefOperationCommitLevelEventNotification:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AsyncGitOperationNotification'
    AsyncRefOperationCompletedNotification:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AsyncGitOperationNotification'
    AsyncRefOperationConflictNotification:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AsyncRefOperationCommitLevelEventNotification'
    AsyncRefOperationGeneralFailureNotification:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AsyncGitOperationNotification'
    AsyncRefOperationProgressNotification:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AsyncRefOperationCommitLevelEventNotification'
    AsyncRefOperationTimeoutNotification:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AsyncGitOperationNotification'
    Attachment:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        author:
          $ref: '#/components/schemas/IdentityRef'
        contentHash:
          type: string
          description: Content hash of on-disk representation of file content. Its
            calculated by the server by using SHA1 hash function.
        createdDate:
          type: string
          description: The time the attachment was uploaded.
          format: date-time
        description:
          type: string
          description: The description of the attachment.
        displayName:
          type: string
          description: The display name of the attachment. Can't be null or empty.
        id:
          type: integer
          description: Id of the attachment.
          format: int32
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        url:
          type: string
          description: The url to download the content of the attachment.
      description: Meta data for a file attached to an artifact.
    AutoCompleteUpdatedEvent:
      description: Real time event (SignalR) for an auto-complete update on a pull
        request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    BranchUpdatedEvent:
      description: Real time event (SignalR) for a source/target branch update on
        a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    Change:
      type: object
      properties:
        changeType:
          type: string
          description: The type of change that was made to the item.
          enum:
          - none
          - add
          - edit
          - encoding
          - rename
          - delete
          - undelete
          - branch
          - merge
          - lock
          - rollback
          - sourceRename
          - targetRename
          - property
          - all
          x-ms-enum:
            name: VersionControlChangeType
            values:
            - value: none
              description: ""
            - value: add
              description: ""
            - value: edit
              description: ""
            - value: encoding
              description: ""
            - value: rename
              description: ""
            - value: delete
              description: ""
            - value: undelete
              description: ""
            - value: branch
              description: ""
            - value: merge
              description: ""
            - value: lock
              description: ""
            - value: rollback
              description: ""
            - value: sourceRename
              description: ""
            - value: targetRename
              description: ""
            - value: property
              description: ""
            - value: all
              description: ""
        item:
          type: string
          description: Current version.
          format: T
        newContent:
          $ref: '#/components/schemas/ItemContent'
        sourceServerItem:
          type: string
          description: Path of the item on the server.
        url:
          type: string
          description: URL to retrieve the item.
      description: ""
    ChangeCountDictionary:
      description: ""
      allOf:
      - type: object
        additionalProperties:
          type: integer
          format: int32
    ChangeList:
      type: object
      properties:
        allChangesIncluded:
          type: boolean
        changeCounts:
          type: object
          additionalProperties:
            type: integer
            format: int32
        changes:
          type: array
          items:
            $ref: '#/components/schemas/Change'
        comment:
          type: string
        commentTruncated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        notes:
          type: array
          items:
            $ref: '#/components/schemas/CheckinNote'
        owner:
          type: string
        ownerDisplayName:
          type: string
        ownerId:
          type: string
          format: uuid
        sortDate:
          type: string
          format: date-time
        version:
          type: string
      description: ""
    ChangeListSearchCriteria:
      type: object
      properties:
        compareVersion:
          type: string
          description: If provided, a version descriptor to compare against base
        excludeDeletes:
          type: boolean
          description: If true, don't include delete history entries
        followRenames:
          type: boolean
          description: Whether or not to follow renames for the given item being queried
        fromDate:
          type: string
          description: If provided, only include history entries created after this
            date (string)
        fromVersion:
          type: string
          description: If provided, a version descriptor for the earliest change list
            to include
        itemPath:
          type: string
          description: Path of item to search under. If the itemPaths memebr is used
            then it will take precedence over this.
        itemPaths:
          type: array
          description: List of item paths to search under. If this member is used
            then itemPath will be ignored.
          items:
            type: string
        itemVersion:
          type: string
          description: Version of the items to search
        skip:
          type: integer
          description: Number of results to skip (used when clicking more...)
          format: int32
        toDate:
          type: string
          description: If provided, only include history entries created before this
            date (string)
        top:
          type: integer
          description: If provided, the maximum number of history entries to return
          format: int32
        toVersion:
          type: string
          description: If provided, a version descriptor for the latest change list
            to include
        user:
          type: string
          description: Alias or display name of user who made the changes
      description: Criteria used in a search for change lists
    CheckinNote:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: ""
    Comment:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        author:
          $ref: '#/components/schemas/IdentityRef'
        commentType:
          type: string
          description: The comment type at the time of creation.
          enum:
          - unknown
          - text
          - codeChange
          - system
          x-ms-enum:
            name: CommentType
            values:
            - value: unknown
              description: The comment type is not known.
            - value: text
              description: This is a regular user comment.
            - value: codeChange
              description: The comment comes as a result of a code change.
            - value: system
              description: The comment represents a system message.
        content:
          type: string
          description: The comment content.
        id:
          type: integer
          description: The comment ID. IDs start at 1 and are unique to a pull request.
          format: int16
        isDeleted:
          type: boolean
          description: Whether or not this comment was soft-deleted.
        lastContentUpdatedDate:
          type: string
          description: The date the comment's content was last updated.
          format: date-time
        lastUpdatedDate:
          type: string
          description: The date the comment was last updated.
          format: date-time
        parentCommentId:
          type: integer
          description: The ID of the parent comment. This is used for replies.
          format: int16
        publishedDate:
          type: string
          description: The date the comment was first published.
          format: date-time
        usersLiked:
          type: array
          description: A list of the users who have liked this comment.
          items:
            $ref: '#/components/schemas/IdentityRef'
      description: Represents a comment which is one of potentially many in a comment
        thread.
    CommentIterationContext:
      type: object
      properties:
        firstComparingIteration:
          type: integer
          description: The iteration of the file on the left side of the diff when
            the thread was created. If this value is equal to SecondComparingIteration,
            then this version is the common commit between the source and target branches
            of the pull request.
          format: int16
        secondComparingIteration:
          type: integer
          description: The iteration of the file on the right side of the diff when
            the thread was created.
          format: int16
      description: Comment iteration context is used to identify which diff was being
        viewed when the thread was created.
    CommentPosition:
      type: object
      properties:
        line:
          type: integer
          description: The line number of a thread's position. Starts at 1.
          format: int32
        offset:
          type: integer
          description: The character offset of a thread's position inside of a line.
            Starts at 0.
          format: int32
      description: ""
    CommentThread:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        comments:
          type: array
          description: A list of the comments.
          items:
            $ref: '#/components/schemas/Comment'
        id:
          type: integer
          description: The comment thread id.
          format: int32
        identities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IdentityRef'
          description: Set of identities related to this thread
        isDeleted:
          type: boolean
          description: Specify if the thread is deleted which happens when all comments
            are deleted.
        lastUpdatedDate:
          type: string
          description: The time this thread was last updated.
          format: date-time
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        publishedDate:
          type: string
          description: The time this thread was published.
          format: date-time
        status:
          type: string
          description: The status of the comment thread.
          enum:
          - unknown
          - active
          - fixed
          - wontFix
          - closed
          - byDesign
          - pending
          x-ms-enum:
            name: CommentThreadStatus
            values:
            - value: unknown
              description: The thread status is unknown.
            - value: active
              description: The thread status is active.
            - value: fixed
              description: The thread status is resolved as fixed.
            - value: wontFix
              description: The thread status is resolved as won't fix.
            - value: closed
              description: The thread status is closed.
            - value: byDesign
              description: The thread status is resolved as by design.
            - value: pending
              description: The thread status is pending.
        threadContext:
          $ref: '#/components/schemas/CommentThreadContext'
      description: Represents a comment thread of a pull request. A thread contains
        meta data about the file it was left on along with one or more comments (an
        initial comment and the subsequent replies).
    CommentThreadContext:
      type: object
      properties:
        filePath:
          type: string
          description: File path relative to the root of the repository. It's up to
            the client to use any path format.
        leftFileEnd:
          $ref: '#/components/schemas/CommentPosition'
        leftFileStart:
          $ref: '#/components/schemas/CommentPosition'
        rightFileEnd:
          $ref: '#/components/schemas/CommentPosition'
        rightFileStart:
          $ref: '#/components/schemas/CommentPosition'
      description: ""
    CommentTrackingCriteria:
      type: object
      properties:
        firstComparingIteration:
          type: integer
          description: The iteration of the file on the left side of the diff that
            the thread will be tracked to. Threads were tracked if this is greater
            than 0.
          format: int32
        origFilePath:
          type: string
          description: Original filepath the thread was created on before tracking.
            This will be different than the current thread filepath if the file in
            question was renamed in a later iteration.
        origLeftFileEnd:
          $ref: '#/components/schemas/CommentPosition'
        origLeftFileStart:
          $ref: '#/components/schemas/CommentPosition'
        origRightFileEnd:
          $ref: '#/components/schemas/CommentPosition'
        origRightFileStart:
          $ref: '#/components/schemas/CommentPosition'
        secondComparingIteration:
          type: integer
          description: The iteration of the file on the right side of the diff that
            the thread will be tracked to. Threads were tracked if this is greater
            than 0.
          format: int32
      description: Comment tracking criteria is used to identify which iteration context
        the thread has been tracked to (if any) along with some detail about the original
        position and filename.
    CompletionErrorsEvent:
      description: Real time event (SignalR) for a completion errors on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    DiscussionsUpdatedEvent:
      description: Real time event (SignalR) for a discussions update on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    FileContentMetadata:
      type: object
      properties:
        contentType:
          type: string
        encoding:
          type: integer
          format: int32
        extension:
          type: string
        fileName:
          type: string
        isBinary:
          type: boolean
        isImage:
          type: boolean
        vsLink:
          type: string
      description: ""
    FileDiff:
      type: object
      properties:
        lineDiffBlocks:
          type: array
          description: The collection of line diff blocks
          items:
            $ref: '#/components/schemas/LineDiffBlock'
        originalPath:
          type: string
          description: Original path of item if different from current path.
        path:
          type: string
          description: Current path of item
      description: Provides properties that describe file differences
    FileDiffParams:
      type: object
      properties:
        originalPath:
          type: string
          description: Original path of the file
        path:
          type: string
          description: Current path of the file
      description: Provides parameters that describe inputs for the file diff
    FileDiffsCriteria:
      type: object
      properties:
        baseVersionCommit:
          type: string
          description: Commit ID of the base version
        fileDiffParams:
          type: array
          description: List of parameters for each of the files for which we need
            to get the file diff
          items:
            $ref: '#/components/schemas/FileDiffParams'
        targetVersionCommit:
          type: string
          description: Commit ID of the target version
      description: Provides properties that describe inputs for the file diffs
    GitAnnotatedTag:
      type: object
      properties:
        message:
          type: string
          description: The tagging Message
        name:
          type: string
          description: The name of the annotated tag.
        objectId:
          type: string
          description: The objectId (Sha1Id) of the tag.
        taggedBy:
          $ref: '#/components/schemas/GitUserDate'
        taggedObject:
          $ref: '#/components/schemas/GitObject'
        url:
          type: string
      description: A Git annotated tag.
    GitAsyncRefOperation:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        detailedStatus:
          $ref: '#/components/schemas/GitAsyncRefOperationDetail'
        parameters:
          $ref: '#/components/schemas/GitAsyncRefOperationParameters'
        status:
          type: string
          enum:
          - queued
          - inProgress
          - completed
          - failed
          - abandoned
          x-ms-enum:
            name: GitAsyncOperationStatus
            values:
            - value: queued
              description: The operation is waiting in a queue and has not yet started.
            - value: inProgress
              description: The operation is currently in progress.
            - value: completed
              description: The operation has completed.
            - value: failed
              description: The operation has failed. Check for an error message.
            - value: abandoned
              description: The operation has been abandoned.
        url:
          type: string
          description: A URL that can be used to make further requests for status
            about the operation
      description: ""
    GitAsyncRefOperationDetail:
      type: object
      properties:
        conflict:
          type: boolean
          description: Indicates if there was a conflict generated when trying to
            cherry pick or revert the changes.
        currentCommitId:
          type: string
          description: The current commit from the list of commits that are being
            cherry picked or reverted.
        failureMessage:
          type: string
          description: Detailed information about why the cherry pick or revert failed
            to complete.
        progress:
          type: number
          description: A number between 0 and 1 indicating the percent complete of
            the operation.
          format: double
        status:
          type: string
          description: Provides a status code that indicates the reason the cherry
            pick or revert failed.
          enum:
          - none
          - invalidRefName
          - refNameConflict
          - createBranchPermissionRequired
          - writePermissionRequired
          - targetBranchDeleted
          - gitObjectTooLarge
          - operationIndentityNotFound
          - asyncOperationNotFound
          - other
          - emptyCommitterSignature
          x-ms-enum:
            name: GitAsyncRefOperationFailureStatus
            values:
            - value: none
              description: No status
            - value: invalidRefName
              description: Indicates that the ref update request could not be completed
                because the ref name presented in the request was not valid.
            - value: refNameConflict
              description: The ref update could not be completed because, in case-insensitive
                mode, the ref name conflicts with an existing, differently-cased ref
                name.
            - value: createBranchPermissionRequired
              description: The ref update request could not be completed because the
                user lacks the permission to create a branch
            - value: writePermissionRequired
              description: The ref update request could not be completed because the
                user lacks write permissions required to write this ref
            - value: targetBranchDeleted
              description: Target branch was deleted after Git async operation started
            - value: gitObjectTooLarge
              description: Git object is too large to materialize into memory
            - value: operationIndentityNotFound
              description: Identity who authorized the operation was not found
            - value: asyncOperationNotFound
              description: Async operation was not found
            - value: other
              description: Unexpected failure
            - value: emptyCommitterSignature
              description: Initiator of async operation has signature with empty name
                or email
        timedout:
          type: boolean
          description: Indicates if the operation went beyond the maximum time allowed
            for a cherry pick or revert operation.
      description: Information about the progress of a cherry pick or revert operation.
    GitAsyncRefOperationParameters:
      type: object
      properties:
        generatedRefName:
          type: string
          description: Proposed target branch name for the cherry pick or revert operation.
        ontoRefName:
          type: string
          description: The target branch for the cherry pick or revert operation.
        repository:
          $ref: '#/components/schemas/GitRepository'
        source:
          $ref: '#/components/schemas/GitAsyncRefOperationSource'
      description: Parameters that are provided in the request body when requesting
        to cherry pick or revert.
    GitAsyncRefOperationSource:
      type: object
      properties:
        commitList:
          type: array
          description: A list of commits to cherry pick or revert
          items:
            $ref: '#/components/schemas/GitCommitRef'
        pullRequestId:
          type: integer
          description: Id of the pull request to cherry pick or revert
          format: int32
      description: GitAsyncRefOperationSource specifies the pull request or list of
        commits to use when making a cherry pick and revert operation request. Only
        one should be provided.
    GitBaseVersionDescriptor:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitVersionDescriptor'
    GitBlobRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        objectId:
          type: string
          description: SHA1 hash of git object
        size:
          type: integer
          description: Size of blob content (in bytes)
          format: int64
        url:
          type: string
      description: ""
    GitBranchStats:
      type: object
      properties:
        aheadCount:
          type: integer
          description: Number of commits ahead.
          format: int32
        behindCount:
          type: integer
          description: Number of commits behind.
          format: int32
        commit:
          $ref: '#/components/schemas/GitCommitRef'
        isBaseVersion:
          type: boolean
          description: True if this is the result for the base version.
        name:
          type: string
          description: Name of the ref.
      description: Ahead and behind counts for a particular ref.
    GitChange:
      description: ""
      allOf:
      - $ref: '#/components/schemas/Change'
    GitCherryPick:
      description: This object is returned from Cherry Pick operations and provides
        the id and status of the operation
      allOf:
      - $ref: '#/components/schemas/GitAsyncRefOperation'
    GitCommit:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitCommitRef'
    GitCommitChanges:
      type: object
      properties:
        changeCounts:
          $ref: '#/components/schemas/ChangeCountDictionary'
        changes:
          type: array
          items:
            $ref: '#/components/schemas/GitChange'
      description: ""
    GitCommitDiffs:
      type: object
      properties:
        aheadCount:
          type: integer
          format: int32
        allChangesIncluded:
          type: boolean
        baseCommit:
          type: string
        behindCount:
          type: integer
          format: int32
        changeCounts:
          type: object
          additionalProperties:
            type: integer
            format: int32
        changes:
          type: array
          items:
            $ref: '#/components/schemas/GitChange'
        commonCommit:
          type: string
        targetCommit:
          type: string
      description: ""
    GitCommitRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        author:
          $ref: '#/components/schemas/GitUserDate'
        changeCounts:
          $ref: '#/components/schemas/ChangeCountDictionary'
        changes:
          type: array
          description: An enumeration of the changes included with the commit.
          items:
            $ref: '#/components/schemas/GitChange'
        comment:
          type: string
          description: Comment or message of the commit.
        commentTruncated:
          type: boolean
          description: Indicates if the comment is truncated from the full Git commit
            comment message.
        commitId:
          type: string
          description: ID (SHA-1) of the commit.
        committer:
          $ref: '#/components/schemas/GitUserDate'
        parents:
          type: array
          description: An enumeration of the parent commit IDs for this commit.
          items:
            type: string
        push:
          $ref: '#/components/schemas/GitPushRef'
        remoteUrl:
          type: string
          description: Remote URL path to the commit.
        statuses:
          type: array
          description: A list of status metadata from services and extensions that
            may associate additional information to the commit.
          items:
            $ref: '#/components/schemas/GitStatus'
        url:
          type: string
          description: REST URL for this resource.
        workItems:
          type: array
          description: A list of workitems associated with this commit.
          items:
            $ref: '#/components/schemas/ResourceRef'
      description: Provides properties that describe a Git commit and associated metadata.
    GitCommitToCreate:
      type: object
      properties:
        baseRef:
          $ref: '#/components/schemas/GitRef'
        comment:
          type: string
        pathActions:
          type: array
          items:
            $ref: '#/components/schemas/GitPathAction'
      description: ""
    GitConflict:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        conflictId:
          type: integer
          format: int32
        conflictPath:
          type: string
        conflictType:
          type: string
          enum:
          - none
          - addAdd
          - addRename
          - deleteEdit
          - deleteRename
          - directoryFile
          - directoryChild
          - editDelete
          - editEdit
          - fileDirectory
          - rename1to2
          - rename2to1
          - renameAdd
          - renameDelete
          - renameRename
          x-ms-enum:
            name: GitConflictType
            values:
            - value: none
              description: No conflict
            - value: addAdd
              description: Added on source and target; content differs
            - value: addRename
              description: Added on source and rename destination on target
            - value: deleteEdit
              description: Deleted on source and edited on target
            - value: deleteRename
              description: Deleted on source and renamed on target
            - value: directoryFile
              description: Path is a directory on source and a file on target
            - value: directoryChild
              description: Children of directory which has DirectoryFile or FileDirectory
                conflict
            - value: editDelete
              description: Edited on source and deleted on target
            - value: editEdit
              description: Edited on source and target; content differs
            - value: fileDirectory
              description: Path is a file on source and a directory on target
            - value: rename1to2
              description: Same file renamed on both source and target; destination
                paths differ
            - value: rename2to1
              description: Different files renamed to same destination path on both
                source and target
            - value: renameAdd
              description: Rename destination on source and new file on target
            - value: renameDelete
              description: Renamed on source and deleted on target
            - value: renameRename
              description: Rename destination on both source and target; content differs
        mergeBaseCommit:
          $ref: '#/components/schemas/GitCommitRef'
        mergeOrigin:
          $ref: '#/components/schemas/GitMergeOriginRef'
        mergeSourceCommit:
          $ref: '#/components/schemas/GitCommitRef'
        mergeTargetCommit:
          $ref: '#/components/schemas/GitCommitRef'
        resolutionError:
          type: string
          enum:
          - none
          - mergeContentNotFound
          - pathInUse
          - invalidPath
          - unknownAction
          - unknownMergeType
          - otherError
          x-ms-enum:
            name: GitResolutionError
            values:
            - value: none
              description: No error
            - value: mergeContentNotFound
              description: User set a blob id for resolving a content merge, but blob
                was not found in repo during application
            - value: pathInUse
              description: Attempted to resolve a conflict by moving a file to another
                path, but path was already in use
            - value: invalidPath
              description: No error
            - value: unknownAction
              description: GitResolutionAction was set to an unrecognized value
            - value: unknownMergeType
              description: GitResolutionMergeType was set to an unrecognized value
            - value: otherError
              description: Any error for which a more specific code doesn't apply
        resolutionStatus:
          type: string
          enum:
          - unresolved
          - partiallyResolved
          - resolved
          x-ms-enum:
            name: GitResolutionStatus
            values:
            - value: unresolved
              description: ""
            - value: partiallyResolved
              description: ""
            - value: resolved
              description: ""
        resolvedBy:
          $ref: '#/components/schemas/IdentityRef'
        resolvedDate:
          type: string
          format: date-time
        url:
          type: string
      description: ""
    GitConflictAddAdd:
      description: Data object for AddAdd conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictAddRename:
      description: Data object for RenameAdd conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictDeleteEdit:
      description: Data object for EditDelete conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictDeleteRename:
      description: Data object for RenameDelete conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictDirectoryFile:
      description: Data object for FileDirectory conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictEditDelete:
      description: Data object for DeleteEdit conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictEditEdit:
      description: Data object for EditEdit conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictFileDirectory:
      description: Data object for DirectoryFile conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictRename1to2:
      description: Data object for Rename1to2 conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictRename2to1:
      description: Data object for Rename2to1 conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictRenameAdd:
      description: Data object for AddRename conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictRenameDelete:
      description: Data object for DeleteRename conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictRenameRename:
      description: Data object for RenameRename conflict
      allOf:
      - $ref: '#/components/schemas/GitConflict'
    GitConflictUpdateResult:
      type: object
      properties:
        conflictId:
          type: integer
          description: Conflict ID that was provided by input
          format: int32
        customMessage:
          type: string
          description: Reason for failing
        updatedConflict:
          $ref: '#/components/schemas/GitConflict'
        updateStatus:
          type: string
          description: Status of the update on the server
          enum:
          - succeeded
          - badRequest
          - invalidResolution
          - unsupportedConflictType
          - notFound
          x-ms-enum:
            name: GitConflictUpdateStatus
            values:
            - value: succeeded
              description: Indicates that pull request conflict update request was
                completed successfully
            - value: badRequest
              description: Indicates that the update request did not fit the expected
                data contract
            - value: invalidResolution
              description: Indicates that the requested resolution was not valid
            - value: unsupportedConflictType
              description: Indicates that the conflict in the update request was not
                a supported conflict type
            - value: notFound
              description: Indicates that the conflict could not be found
      description: ""
    GitDeletedRepository:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        deletedBy:
          $ref: '#/components/schemas/IdentityRef'
        deletedDate:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
        name:
          type: string
        project:
          $ref: '#/components/schemas/TeamProjectReference'
      description: ""
    GitFilePathsCollection:
      type: object
      properties:
        commitId:
          type: string
        paths:
          type: array
          items:
            type: string
        url:
          type: string
      description: ""
    GitForkOperationStatusDetail:
      type: object
      properties:
        allSteps:
          type: array
          description: All valid steps for the forking process
          items:
            type: string
        currentStep:
          type: integer
          description: Index into AllSteps for the current step
          format: int32
        errorMessage:
          type: string
          description: Error message if the operation failed.
      description: Status information about a requested fork operation.
    GitForkRef:
      description: Information about a fork ref.
      allOf:
      - $ref: '#/components/schemas/GitRef'
    GitForkSyncRequest:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        detailedStatus:
          $ref: '#/components/schemas/GitForkOperationStatusDetail'
        operationId:
          type: integer
          description: Unique identifier for the operation.
          format: int32
        source:
          $ref: '#/components/schemas/GlobalGitRepositoryKey'
        sourceToTargetRefs:
          type: array
          description: If supplied, the set of ref mappings to use when performing
            a "sync" or create. If missing, all refs will be synchronized.
          items:
            $ref: '#/components/schemas/SourceToTargetRef'
        status:
          type: string
          enum:
          - queued
          - inProgress
          - completed
          - failed
          - abandoned
          x-ms-enum:
            name: GitAsyncOperationStatus
            values:
            - value: queued
              description: The operation is waiting in a queue and has not yet started.
            - value: inProgress
              description: The operation is currently in progress.
            - value: completed
              description: The operation has completed.
            - value: failed
              description: The operation has failed. Check for an error message.
            - value: abandoned
              description: The operation has been abandoned.
      description: Request to sync data between two forks.
    GitForkSyncRequestParameters:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/GlobalGitRepositoryKey'
        sourceToTargetRefs:
          type: array
          description: If supplied, the set of ref mappings to use when performing
            a "sync" or create. If missing, all refs will be synchronized.
          items:
            $ref: '#/components/schemas/SourceToTargetRef'
      description: Parameters for creating a fork request
    GitForkTeamProjectReference:
      description: ""
      allOf:
      - $ref: '#/components/schemas/TeamProjectReference'
    GitImportFailedEvent:
      type: object
      properties:
        sourceRepositoryName:
          type: string
        targetRepository:
          $ref: '#/components/schemas/GitRepository'
      description: ""
    GitImportGitSource:
      type: object
      properties:
        overwrite:
          type: boolean
          description: Tells if this is a sync request or not
        url:
          type: string
          description: Url for the source repo
      description: Parameter for creating a git import request when source is Git
        version control
    GitImportRequest:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        detailedStatus:
          $ref: '#/components/schemas/GitImportStatusDetail'
        importRequestId:
          type: integer
          description: The unique identifier for this import request.
          format: int32
        parameters:
          $ref: '#/components/schemas/GitImportRequestParameters'
        repository:
          $ref: '#/components/schemas/GitRepository'
        status:
          type: string
          description: Current status of the import.
          enum:
          - queued
          - inProgress
          - completed
          - failed
          - abandoned
          x-ms-enum:
            name: GitAsyncOperationStatus
            values:
            - value: queued
              description: The operation is waiting in a queue and has not yet started.
            - value: inProgress
              description: The operation is currently in progress.
            - value: completed
              description: The operation has completed.
            - value: failed
              description: The operation has failed. Check for an error message.
            - value: abandoned
              description: The operation has been abandoned.
        url:
          type: string
          description: A link back to this import request resource.
      description: A request to import data from a remote source control system.
    GitImportRequestParameters:
      type: object
      properties:
        deleteServiceEndpointAfterImportIsDone:
          type: boolean
          description: Option to delete service endpoint when import is done
        gitSource:
          $ref: '#/components/schemas/GitImportGitSource'
        serviceEndpointId:
          type: string
          description: Service Endpoint for connection to external endpoint
          format: uuid
        tfvcSource:
          $ref: '#/components/schemas/GitImportTfvcSource'
      description: Parameters for creating an import request
    GitImportStatusDetail:
      type: object
      properties:
        allSteps:
          type: array
          description: All valid steps for the import process
          items:
            type: string
        currentStep:
          type: integer
          description: Index into AllSteps for the current step
          format: int32
        errorMessage:
          type: string
          description: Error message if the operation failed.
      description: Additional status information about an import request.
    GitImportSucceededEvent:
      type: object
      properties:
        sourceRepositoryName:
          type: string
        targetRepository:
          $ref: '#/components/schemas/GitRepository'
      description: ""
    GitImportTfvcSource:
      type: object
      properties:
        importHistory:
          type: boolean
          description: Set true to import History, false otherwise
        importHistoryDurationInDays:
          type: integer
          description: Get history for last n days (max allowed value is 180 days)
          format: int32
        path:
          type: string
          description: Path which we want to import (this can be copied from Path
            Control in Explorer)
      description: Parameter for creating a git import request when source is tfvc
        version control
    GitItem:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ItemModel'
    GitItemDescriptor:
      type: object
      properties:
        path:
          type: string
          description: Path to item
        recursionLevel:
          type: string
          description: Specifies whether to include children (OneLevel), all descendants
            (Full), or None
          enum:
          - none
          - oneLevel
          - oneLevelPlusNestedEmptyFolders
          - full
          x-ms-enum:
            name: VersionControlRecursionType
            values:
            - value: none
              description: Only return the specified item.
            - value: oneLevel
              description: Return the specified item and its direct children.
            - value: oneLevelPlusNestedEmptyFolders
              description: Return the specified item and its direct children, as well
                as recursive chains of nested child folders that only contain a single
                folder.
            - value: full
              description: Return specified item and all descendants
        version:
          type: string
          description: Version string (interpretation based on VersionType defined
            in subclass
        versionOptions:
          type: string
          description: Version modifiers (e.g. previous)
          enum:
          - none
          - previousChange
          - firstParent
          x-ms-enum:
            name: GitVersionOptions
            values:
            - value: none
              description: Not specified
            - value: previousChange
              description: Commit that changed item prior to the current version
            - value: firstParent
              description: First parent of commit (HEAD^)
        versionType:
          type: string
          description: How to interpret version (branch,tag,commit)
          enum:
          - branch
          - tag
          - commit
          x-ms-enum:
            name: GitVersionType
            values:
            - value: branch
              description: Interpret the version as a branch name
            - value: tag
              description: Interpret the version as a tag name
            - value: commit
              description: Interpret the version as a commit ID (SHA1)
      description: ""
    GitItemRequestData:
      type: object
      properties:
        includeContentMetadata:
          type: boolean
          description: Whether to include metadata for all items
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references
        itemDescriptors:
          type: array
          description: Collection of items to fetch, including path, version, and
            recursion level
          items:
            $ref: '#/components/schemas/GitItemDescriptor'
        latestProcessedChange:
          type: boolean
          description: Whether to include shallow ref to commit that last changed
            each item
      description: ""
    GitLastChangeItem:
      type: object
      properties:
        commitId:
          type: string
          description: Gets or sets the commit Id this item was modified most recently
            for the provided version.
        path:
          type: string
          description: Gets or sets the path of the item.
      description: ""
    GitLastChangeTreeItems:
      type: object
      properties:
        commits:
          type: array
          description: The list of commits referenced by Items, if they were requested.
          items:
            $ref: '#/components/schemas/GitCommitRef'
        items:
          type: array
          description: The last change of items.
          items:
            $ref: '#/components/schemas/GitLastChangeItem'
        lastExploredTime:
          type: string
          description: The last explored time, in case the result is not comprehensive.
            Null otherwise.
          format: date-time
      description: ""
    GitMerge:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitMergeParameters'
    GitMergeOperationStatusDetail:
      type: object
      properties:
        failureMessage:
          type: string
          description: Error message if the operation failed.
        mergeCommitId:
          type: string
          description: The commitId of the resultant merge commit.
      description: Status information about a requested merge operation.
    GitMergeOriginRef:
      type: object
      properties:
        cherryPickId:
          type: integer
          format: int32
        pullRequestId:
          type: integer
          format: int32
        revertId:
          type: integer
          format: int32
      description: ""
    GitMergeParameters:
      type: object
      properties:
        comment:
          type: string
          description: Comment or message of the commit.
        parents:
          type: array
          description: An enumeration of the parent commit IDs for the merge  commit.
          items:
            type: string
      description: Parameters required for performing git merge.
    GitObject:
      type: object
      properties:
        objectId:
          type: string
          description: Object Id (Sha1Id).
        objectType:
          type: string
          description: Type of object (Commit, Tree, Blob, Tag)
          enum:
          - bad
          - commit
          - tree
          - blob
          - tag
          - ext2
          - ofsDelta
          - refDelta
          x-ms-enum:
            name: GitObjectType
            values:
            - value: bad
              description: ""
            - value: commit
              description: ""
            - value: tree
              description: ""
            - value: blob
              description: ""
            - value: tag
              description: ""
            - value: ext2
              description: ""
            - value: ofsDelta
              description: ""
            - value: refDelta
              description: ""
      description: Git object identifier and type information.
    GitPathAction:
      type: object
      properties:
        action:
          type: string
          enum:
          - none
          - edit
          - delete
          - add
          - rename
          x-ms-enum:
            name: GitPathActions
            values:
            - value: none
              description: ""
            - value: edit
              description: ""
            - value: delete
              description: ""
            - value: add
              description: ""
            - value: rename
              description: ""
        base64Content:
          type: string
        path:
          type: string
        rawTextContent:
          type: string
        targetPath:
          type: string
      description: ""
    GitPathToItemsCollection:
      type: object
      properties:
        items:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/GitItem'
      description: ""
    GitPolicyConfigurationResponse:
      type: object
      properties:
        continuationToken:
          type: string
          description: The HTTP client methods find the continuation token header
            in the response and populate this field.
        policyConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PolicyConfiguration'
      description: ""
    GitPullRequest:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        artifactId:
          type: string
          description: 'A string which uniquely identifies this pull request. To generate
            an artifact ID for a pull request, use this template: ```vstfs:///Git/PullRequestId/{projectId}/{repositoryId}/{pullRequestId}```'
        autoCompleteSetBy:
          $ref: '#/components/schemas/IdentityRef'
        closedBy:
          $ref: '#/components/schemas/IdentityRef'
        closedDate:
          type: string
          description: The date when the pull request was closed (completed, abandoned,
            or merged externally).
          format: date-time
        codeReviewId:
          type: integer
          description: The code review ID of the pull request. Used internally.
          format: int32
        commits:
          type: array
          description: The commits contained in the pull request.
          items:
            $ref: '#/components/schemas/GitCommitRef'
        completionOptions:
          $ref: '#/components/schemas/GitPullRequestCompletionOptions'
        completionQueueTime:
          type: string
          description: The most recent date at which the pull request entered the
            queue to be completed. Used internally.
          format: date-time
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        creationDate:
          type: string
          description: The date when the pull request was created.
          format: date-time
        description:
          type: string
          description: The description of the pull request.
        forkSource:
          $ref: '#/components/schemas/GitForkRef'
        hasMultipleMergeBases:
          type: boolean
          description: Multiple mergebases warning
        isDraft:
          type: boolean
          description: Draft / WIP pull request.
        labels:
          type: array
          description: The labels associated with the pull request.
          items:
            $ref: '#/components/schemas/WebApiTagDefinition'
        lastMergeCommit:
          $ref: '#/components/schemas/GitCommitRef'
        lastMergeSourceCommit:
          $ref: '#/components/schemas/GitCommitRef'
        lastMergeTargetCommit:
          $ref: '#/components/schemas/GitCommitRef'
        mergeFailureMessage:
          type: string
          description: If set, pull request merge failed for this reason.
        mergeFailureType:
          type: string
          description: The type of failure (if any) of the pull request merge.
          enum:
          - none
          - unknown
          - caseSensitive
          - objectTooLarge
          x-ms-enum:
            name: PullRequestMergeFailureType
            values:
            - value: none
              description: Type is not set. Default type.
            - value: unknown
              description: Pull request merge failure type unknown.
            - value: caseSensitive
              description: Pull request merge failed due to case mismatch.
            - value: objectTooLarge
              description: Pull request merge failed due to an object being too large.
        mergeId:
          type: string
          description: The ID of the job used to run the pull request merge. Used
            internally.
          format: uuid
        mergeOptions:
          $ref: '#/components/schemas/GitPullRequestMergeOptions'
        mergeStatus:
          type: string
          description: The current status of the pull request merge.
          enum:
          - notSet
          - queued
          - conflicts
          - succeeded
          - rejectedByPolicy
          - failure
          x-ms-enum:
            name: PullRequestAsyncStatus
            values:
            - value: notSet
              description: Status is not set. Default state.
            - value: queued
              description: Pull request merge is queued.
            - value: conflicts
              description: Pull request merge failed due to conflicts.
            - value: succeeded
              description: Pull request merge succeeded.
            - value: rejectedByPolicy
              description: Pull request merge rejected by policy.
            - value: failure
              description: Pull request merge failed.
        pullRequestId:
          type: integer
          description: The ID of the pull request.
          format: int32
        remoteUrl:
          type: string
          description: Used internally.
        repository:
          $ref: '#/components/schemas/GitRepository'
        reviewers:
          type: array
          description: A list of reviewers on the pull request along with the state
            of their votes.
          items:
            $ref: '#/components/schemas/IdentityRefWithVote'
        sourceRefName:
          type: string
          description: The name of the source branch of the pull request.
        status:
          type: string
          description: The status of the pull request.
          enum:
          - notSet
          - active
          - abandoned
          - completed
          - all
          x-ms-enum:
            name: PullRequestStatus
            values:
            - value: notSet
              description: Status not set. Default state.
            - value: active
              description: Pull request is active.
            - value: abandoned
              description: Pull request is abandoned.
            - value: completed
              description: Pull request is completed.
            - value: all
              description: Used in pull request search criteria to include all statuses.
        supportsIterations:
          type: boolean
          description: If true, this pull request supports multiple iterations. Iteration
            support means individual pushes to the source branch of the pull request
            can be reviewed and comments left in one iteration will be tracked across
            future iterations.
        targetRefName:
          type: string
          description: The name of the target branch of the pull request.
        title:
          type: string
          description: The title of the pull request.
        url:
          type: string
          description: Used internally.
        workItemRefs:
          type: array
          description: Any work item references associated with this pull request.
          items:
            $ref: '#/components/schemas/ResourceRef'
      description: Represents all the data associated with a pull request.
    GitPullRequestChange:
      description: Change made in a pull request.
      allOf:
      - $ref: '#/components/schemas/GitChange'
    GitPullRequestCommentThread:
      description: Represents a comment thread of a pull request. A thread contains
        meta data about the file it was left on (if any) along with one or more comments
        (an initial comment and the subsequent replies).
      allOf:
      - $ref: '#/components/schemas/CommentThread'
    GitPullRequestCommentThreadContext:
      type: object
      properties:
        changeTrackingId:
          type: integer
          description: Used to track a comment across iterations. This value can be
            found by looking at the iteration's changes list. Must be set for pull
            requests with iteration support. Otherwise, it's not required for 'legacy'
            pull requests.
          format: int32
        iterationContext:
          $ref: '#/components/schemas/CommentIterationContext'
        trackingCriteria:
          $ref: '#/components/schemas/CommentTrackingCriteria'
      description: Comment thread context contains details about what diffs were being
        viewed at the time of thread creation and whether or not the thread has been
        tracked from that original diff.
    GitPullRequestCompletionOptions:
      type: object
      properties:
        autoCompleteIgnoreConfigIds:
          type: array
          description: List of any policy configuration Id's which auto-complete should
            not wait for. Only applies to optional policies (isBlocking == false).
            Auto-complete always waits for required policies (isBlocking == true).
          items:
            type: integer
            format: int32
        bypassPolicy:
          type: boolean
          description: If true, policies will be explicitly bypassed while the pull
            request is completed.
        bypassReason:
          type: string
          description: If policies are bypassed, this reason is stored as to why bypass
            was used.
        deleteSourceBranch:
          type: boolean
          description: If true, the source branch of the pull request will be deleted
            after completion.
        mergeCommitMessage:
          type: string
          description: If set, this will be used as the commit message of the merge
            commit.
        mergeStrategy:
          type: string
          description: Specify the strategy used to merge the pull request during
            completion. If MergeStrategy is not set to any value, a no-FF merge will
            be created if SquashMerge == false. If MergeStrategy is not set to any
            value, the pull request commits will be squashed if SquashMerge == true.
            The SquashMerge property is deprecated. It is recommended that you explicitly
            set MergeStrategy in all cases. If an explicit value is provided for MergeStrategy,
            the SquashMerge property will be ignored.
          enum:
          - noFastForward
          - squash
          - rebase
          - rebaseMerge
          x-ms-enum:
            name: GitPullRequestMergeStrategy
            values:
            - value: noFastForward
              description: A two-parent, no-fast-forward merge. The source branch
                is unchanged. This is the default behavior.
            - value: squash
              description: Put all changes from the pull request into a single-parent
                commit.
            - value: rebase
              description: Rebase the source branch on top of the target branch HEAD
                commit, and fast-forward the target branch. The source branch is updated
                during the rebase operation.
            - value: rebaseMerge
              description: Rebase the source branch on top of the target branch HEAD
                commit, and create a two-parent, no-fast-forward merge. The source
                branch is updated during the rebase operation.
        squashMerge:
          type: boolean
          description: SquashMerge is deprecated. You should explicitly set the value
            of MergeStrategy. If MergeStrategy is set to any value, the SquashMerge
            value will be ignored. If MergeStrategy is not set, the merge strategy
            will be no-fast-forward if this flag is false, or squash if true.
        transitionWorkItems:
          type: boolean
          description: If true, we will attempt to transition any work items linked
            to the pull request into the next logical state (i.e. Active -> Resolved)
        triggeredByAutoComplete:
          type: boolean
          description: If true, the current completion attempt was triggered via auto-complete.
            Used internally.
      description: Preferences about how the pull request should be completed.
    GitPullRequestIteration:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        author:
          $ref: '#/components/schemas/IdentityRef'
        changeList:
          type: array
          description: Changes included with the pull request iteration.
          items:
            $ref: '#/components/schemas/GitPullRequestChange'
        commits:
          type: array
          description: The commits included with the pull request iteration.
          items:
            $ref: '#/components/schemas/GitCommitRef'
        commonRefCommit:
          $ref: '#/components/schemas/GitCommitRef'
        createdDate:
          type: string
          description: The creation date of the pull request iteration.
          format: date-time
        description:
          type: string
          description: Description of the pull request iteration.
        hasMoreCommits:
          type: boolean
          description: Indicates if the Commits property contains a truncated list
            of commits in this pull request iteration.
        id:
          type: integer
          description: ID of the pull request iteration. Iterations are created as
            a result of creating and pushing updates to a pull request.
          format: int32
        newTargetRefName:
          type: string
          description: If the iteration reason is Retarget, this is the refName of
            the new target
        oldTargetRefName:
          type: string
          description: If the iteration reason is Retarget, this is the original target
            refName
        push:
          $ref: '#/components/schemas/GitPushRef'
        reason:
          type: string
          description: The reason for which the pull request iteration was created.
          enum:
          - push
          - forcePush
          - create
          - rebase
          - unknown
          - retarget
          x-ms-enum:
            name: IterationReason
            values:
            - value: push
              description: ""
            - value: forcePush
              description: ""
            - value: create
              description: ""
            - value: rebase
              description: ""
            - value: unknown
              description: ""
            - value: retarget
              description: ""
        sourceRefCommit:
          $ref: '#/components/schemas/GitCommitRef'
        targetRefCommit:
          $ref: '#/components/schemas/GitCommitRef'
        updatedDate:
          type: string
          description: The updated date of the pull request iteration.
          format: date-time
      description: Provides properties that describe a Git pull request iteration.
        Iterations are created as a result of creating and pushing updates to a pull
        request.
    GitPullRequestIterationChanges:
      type: object
      properties:
        changeEntries:
          type: array
          description: Changes made in the iteration.
          items:
            $ref: '#/components/schemas/GitPullRequestChange'
        nextSkip:
          type: integer
          description: Value to specify as skip to get the next page of changes.  This
            will be zero if there are no more changes.
          format: int32
        nextTop:
          type: integer
          description: Value to specify as top to get the next page of changes.  This
            will be zero if there are no more changes.
          format: int32
      description: Collection of changes made in a pull request.
    GitPullRequestMergeOptions:
      type: object
      properties:
        conflictAuthorshipCommits:
          type: boolean
          description: If true, conflict resolutions applied during the merge will
            be put in separate commits to preserve authorship info for git blame,
            etc.
        detectRenameFalsePositives:
          type: boolean
        disableRenames:
          type: boolean
          description: If true, rename detection will not be performed during the
            merge.
      description: The options which are used when a pull request merge is created.
    GitPullRequestQuery:
      type: object
      properties:
        queries:
          type: array
          description: The queries to perform.
          items:
            $ref: '#/components/schemas/GitPullRequestQueryInput'
        results:
          type: array
          description: The results of the queries. This matches the QueryInputs list
            so Results[n] are the results of QueryInputs[n]. Each entry in the list
            is a dictionary of commit->pull requests.
          items:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/components/schemas/GitPullRequest'
      description: A set of pull request queries and their results.
    GitPullRequestQueryInput:
      type: object
      properties:
        items:
          type: array
          description: The list of commit IDs to search for.
          items:
            type: string
        type:
          type: string
          description: The type of query to perform.
          enum:
          - notSet
          - lastMergeCommit
          - commit
          x-ms-enum:
            name: GitPullRequestQueryType
            values:
            - value: notSet
              description: No query type set.
            - value: lastMergeCommit
              description: Search for pull requests that created the supplied merge
                commits.
            - value: commit
              description: Search for pull requests that merged the supplied commits.
      description: Pull request query input parameters.
    GitPullRequestReviewFileContentInfo:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        path:
          type: string
          description: The file change path.
        shA1Hash:
          type: string
          description: Content hash of on-disk representation of file content. Its
            calculated by the client by using SHA1 hash function. Ensure that uploaded
            file has same encoding as in source control.
      description: ""
    GitPullRequestSearchCriteria:
      type: object
      properties:
        creatorId:
          type: string
          description: If set, search for pull requests that were created by this
            identity.
          format: uuid
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references
        repositoryId:
          type: string
          description: If set, search for pull requests whose target branch is in
            this repository.
          format: uuid
        reviewerId:
          type: string
          description: If set, search for pull requests that have this identity as
            a reviewer.
          format: uuid
        sourceRefName:
          type: string
          description: If set, search for pull requests from this branch.
        sourceRepositoryId:
          type: string
          description: If set, search for pull requests whose source branch is in
            this repository.
          format: uuid
        status:
          type: string
          description: If set, search for pull requests that are in this state. Defaults
            to Active if unset.
          enum:
          - notSet
          - active
          - abandoned
          - completed
          - all
          x-ms-enum:
            name: PullRequestStatus
            values:
            - value: notSet
              description: Status not set. Default state.
            - value: active
              description: Pull request is active.
            - value: abandoned
              description: Pull request is abandoned.
            - value: completed
              description: Pull request is completed.
            - value: all
              description: Used in pull request search criteria to include all statuses.
        targetRefName:
          type: string
          description: If set, search for pull requests into this branch.
      description: Pull requests can be searched for matching this criteria.
    GitPullRequestStatus:
      description: This class contains the metadata of a service/extension posting
        pull request status. Status can be associated with a pull request or an iteration.
      allOf:
      - $ref: '#/components/schemas/GitStatus'
    GitPush:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitPushRef'
    GitPushEventData:
      type: object
      properties:
        afterId:
          type: string
        beforeId:
          type: string
        branch:
          type: string
        commits:
          type: array
          items:
            $ref: '#/components/schemas/GitCommit'
        repository:
          $ref: '#/components/schemas/GitRepository'
      description: ""
    GitPushRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        date:
          type: string
          format: date-time
        pushedBy:
          $ref: '#/components/schemas/IdentityRef'
        pushId:
          type: integer
          format: int32
        url:
          type: string
      description: ""
    GitPushSearchCriteria:
      type: object
      properties:
        fromDate:
          type: string
          format: date-time
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references
        includeRefUpdates:
          type: boolean
        pusherId:
          type: string
          format: uuid
        refName:
          type: string
        toDate:
          type: string
          format: date-time
      description: ""
    GitQueryBranchStatsCriteria:
      type: object
      properties:
        baseCommit:
          $ref: '#/components/schemas/GitVersionDescriptor'
        targetCommits:
          type: array
          items:
            $ref: '#/components/schemas/GitVersionDescriptor'
      description: ""
    GitQueryCommitsCriteria:
      type: object
      properties:
        $skip:
          type: integer
          description: Number of entries to skip
          format: int32
        $top:
          type: integer
          description: Maximum number of entries to retrieve
          format: int32
        author:
          type: string
          description: Alias or display name of the author
        compareVersion:
          $ref: '#/components/schemas/GitVersionDescriptor'
        excludeDeletes:
          type: boolean
          description: Only applies when an itemPath is specified. This determines
            whether to exclude delete entries of the specified path.
        fromCommitId:
          type: string
          description: If provided, a lower bound for filtering commits alphabetically
        fromDate:
          type: string
          description: If provided, only include history entries created after this
            date (string)
        historyMode:
          type: string
          description: What Git history mode should be used. This only applies to
            the search criteria when Ids = null and an itemPath is specified.
          enum:
          - simplifiedHistory
          - firstParent
          - fullHistory
          - fullHistorySimplifyMerges
          x-ms-enum:
            name: GitHistoryMode
            values:
            - value: simplifiedHistory
              description: The history mode used by `git log`. This is the default.
            - value: firstParent
              description: The history mode used by `git log --first-parent`
            - value: fullHistory
              description: The history mode used by `git log --full-history`
            - value: fullHistorySimplifyMerges
              description: The history mode used by `git log --full-history --simplify-merges`
        ids:
          type: array
          description: If provided, specifies the exact commit ids of the commits
            to fetch. May not be combined with other parameters.
          items:
            type: string
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references
        includePushData:
          type: boolean
          description: Whether to include the push information
        includeUserImageUrl:
          type: boolean
          description: Whether to include the image Url for committers and authors
        includeWorkItems:
          type: boolean
          description: Whether to include linked work items
        itemPath:
          type: string
          description: Path of item to search under
        itemVersion:
          $ref: '#/components/schemas/GitVersionDescriptor'
        showOldestCommitsFirst:
          type: boolean
          description: If enabled, this option will ignore the itemVersion and compareVersion
            parameters
        toCommitId:
          type: string
          description: If provided, an upper bound for filtering commits alphabetically
        toDate:
          type: string
          description: If provided, only include history entries created before this
            date (string)
        user:
          type: string
          description: Alias or display name of the committer
      description: ""
    GitQueryRefsCriteria:
      type: object
      properties:
        commitIds:
          type: array
          description: List of commit Ids to be searched
          items:
            type: string
        refNames:
          type: array
          description: List of complete or partial names for refs to be searched
          items:
            type: string
        searchType:
          type: string
          description: Type of search on refNames, if provided
          enum:
          - exact
          - startsWith
          - contains
          x-ms-enum:
            name: GitRefSearchType
            values:
            - value: exact
              description: ""
            - value: startsWith
              description: ""
            - value: contains
              description: ""
      description: ""
    GitRecycleBinRepositoryDetails:
      type: object
      properties:
        deleted:
          type: boolean
          description: Setting to false will undo earlier deletion and restore the
            repository.
      description: ""
    GitRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        creator:
          $ref: '#/components/schemas/IdentityRef'
        isLocked:
          type: boolean
        isLockedBy:
          $ref: '#/components/schemas/IdentityRef'
        name:
          type: string
        objectId:
          type: string
        peeledObjectId:
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/GitStatus'
        url:
          type: string
      description: ""
    GitRefFavorite:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          format: int32
        identityId:
          type: string
          format: uuid
        name:
          type: string
        repositoryId:
          type: string
          format: uuid
        type:
          type: string
          enum:
          - invalid
          - folder
          - ref
          x-ms-enum:
            name: RefFavoriteType
            values:
            - value: invalid
              description: ""
            - value: folder
              description: ""
            - value: ref
              description: ""
        url:
          type: string
      description: ""
    GitRefUpdate:
      type: object
      properties:
        isLocked:
          type: boolean
        name:
          type: string
        newObjectId:
          type: string
        oldObjectId:
          type: string
        repositoryId:
          type: string
          format: uuid
      description: ""
    GitRefUpdateResult:
      type: object
      properties:
        customMessage:
          type: string
          description: Custom message for the result object For instance, Reason for
            failing.
        isLocked:
          type: boolean
          description: Whether the ref is locked or not
        name:
          type: string
          description: Ref name
        newObjectId:
          type: string
          description: New object ID
        oldObjectId:
          type: string
          description: Old object ID
        rejectedBy:
          type: string
          description: Name of the plugin that rejected the updated.
        repositoryId:
          type: string
          description: Repository ID
          format: uuid
        success:
          type: boolean
          description: True if the ref update succeeded, false otherwise
        updateStatus:
          type: string
          description: Status of the update from the TFS server.
          enum:
          - succeeded
          - forcePushRequired
          - staleOldObjectId
          - invalidRefName
          - unprocessed
          - unresolvableToCommit
          - writePermissionRequired
          - manageNotePermissionRequired
          - createBranchPermissionRequired
          - createTagPermissionRequired
          - rejectedByPlugin
          - locked
          - refNameConflict
          - rejectedByPolicy
          - succeededNonExistentRef
          - succeededCorruptRef
          x-ms-enum:
            name: GitRefUpdateStatus
            values:
            - value: succeeded
              description: Indicates that the ref update request was completed successfully.
            - value: forcePushRequired
              description: Indicates that the ref update request could not be completed
                because part of the graph would be disconnected by this change, and
                the caller does not have ForcePush permission on the repository.
            - value: staleOldObjectId
              description: Indicates that the ref update request could not be completed
                because the old object ID presented in the request was not the object
                ID of the ref when the database attempted the update. The most likely
                scenario is that the caller lost a race to update the ref.
            - value: invalidRefName
              description: Indicates that the ref update request could not be completed
                because the ref name presented in the request was not valid.
            - value: unprocessed
              description: The request was not processed
            - value: unresolvableToCommit
              description: The ref update request could not be completed because the
                new object ID for the ref could not be resolved to a commit object
                (potentially through any number of tags)
            - value: writePermissionRequired
              description: The ref update request could not be completed because the
                user lacks write permissions required to write this ref
            - value: manageNotePermissionRequired
              description: The ref update request could not be completed because the
                user lacks note creation permissions required to write this note
            - value: createBranchPermissionRequired
              description: The ref update request could not be completed because the
                user lacks the permission to create a branch
            - value: createTagPermissionRequired
              description: The ref update request could not be completed because the
                user lacks the permission to create a tag
            - value: rejectedByPlugin
              description: The ref update could not be completed because it was rejected
                by the plugin.
            - value: locked
              description: The ref update could not be completed because the ref is
                locked by another user.
            - value: refNameConflict
              description: The ref update could not be completed because, in case-insensitive
                mode, the ref name conflicts with an existing, differently-cased ref
                name.
            - value: rejectedByPolicy
              description: The ref update could not be completed because it was rejected
                by policy.
            - value: succeededNonExistentRef
              description: Indicates that the ref update request was completed successfully,
                but the ref doesn't actually exist so no changes were made.  This
                should only happen during deletes.
            - value: succeededCorruptRef
              description: Indicates that the ref update request was completed successfully,
                but the passed-in ref was corrupt - as in, the old object ID was bad.  This
                should only happen during deletes.
      description: ""
    GitRepository:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        defaultBranch:
          type: string
        id:
          type: string
          format: uuid
        isDisabled:
          type: boolean
          description: True if the repository is disabled. False otherwise.
        isFork:
          type: boolean
          description: True if the repository was created as a fork.
        name:
          type: string
        parentRepository:
          $ref: '#/components/schemas/GitRepositoryRef'
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        remoteUrl:
          type: string
        size:
          type: integer
          description: Compressed size (bytes) of the repository.
          format: int64
        sshUrl:
          type: string
        url:
          type: string
        validRemoteUrls:
          type: array
          items:
            type: string
        webUrl:
          type: string
      description: ""
    GitRepositoryCreateOptions:
      type: object
      properties:
        name:
          type: string
        parentRepository:
          $ref: '#/components/schemas/GitRepositoryRef'
        project:
          $ref: '#/components/schemas/TeamProjectReference'
      description: ""
    GitRepositoryRef:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/TeamProjectCollectionReference'
        id:
          type: string
          format: uuid
        isFork:
          type: boolean
          description: True if the repository was created as a fork
        name:
          type: string
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        remoteUrl:
          type: string
        sshUrl:
          type: string
        url:
          type: string
      description: ""
    GitRepositoryStats:
      type: object
      properties:
        activePullRequestsCount:
          type: integer
          format: int32
        branchesCount:
          type: integer
          format: int32
        commitsCount:
          type: integer
          format: int32
        repositoryId:
          type: string
      description: ""
    GitResolution:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/IdentityRef'
      description: ""
    GitResolutionMergeContent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitResolution'
    GitResolutionPathConflict:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitResolution'
    GitResolutionPickOneAction:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitResolution'
    GitResolutionRename1to2:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitResolutionMergeContent'
    GitRevert:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitAsyncRefOperation'
    GitStatus:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        context:
          $ref: '#/components/schemas/GitStatusContext'
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        creationDate:
          type: string
          description: Creation date and time of the status.
          format: date-time
        description:
          type: string
          description: Status description. Typically describes current state of the
            status.
        id:
          type: integer
          description: Status identifier.
          format: int32
        state:
          type: string
          description: State of the status.
          enum:
          - notSet
          - pending
          - succeeded
          - failed
          - error
          - notApplicable
          x-ms-enum:
            name: GitStatusState
            values:
            - value: notSet
              description: Status state not set. Default state.
            - value: pending
              description: Status pending.
            - value: succeeded
              description: Status succeeded.
            - value: failed
              description: Status failed.
            - value: error
              description: Status with an error.
            - value: notApplicable
              description: Status is not applicable to the target object.
        targetUrl:
          type: string
          description: URL with status details.
        updatedDate:
          type: string
          description: Last update date and time of the status.
          format: date-time
      description: This class contains the metadata of a service/extension posting
        a status.
    GitStatusContext:
      type: object
      properties:
        genre:
          type: string
          description: Genre of the status. Typically name of the service/tool generating
            the status, can be empty.
        name:
          type: string
          description: Name identifier of the status, cannot be null or empty.
      description: Status context that uniquely identifies the status.
    GitSuggestion:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: Specific properties describing the suggestion.
        type:
          type: string
          description: The type of suggestion (e.g. pull request).
      description: An object describing the git suggestion.  Git suggestions are currently
        limited to suggested pull requests.
    GitTargetVersionDescriptor:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GitVersionDescriptor'
    GitTemplate:
      type: object
      properties:
        name:
          type: string
          description: Name of the Template
        type:
          type: string
          description: Type of the Template
      description: ""
    GitTreeDiff:
      type: object
      properties:
        baseTreeId:
          type: string
          description: ObjectId of the base tree of this diff.
        diffEntries:
          type: array
          description: List of tree entries that differ between the base and target
            tree.  Renames and object type changes are returned as a delete for the
            old object and add for the new object.  If a continuation token is returned
            in the response header, some tree entries are yet to be processed and
            may yield more diff entries. If the continuation token is not returned
            all the diff entries have been included in this response.
          items:
            $ref: '#/components/schemas/GitTreeDiffEntry'
        targetTreeId:
          type: string
          description: ObjectId of the target tree of this diff.
        url:
          type: string
          description: REST Url to this resource.
      description: ""
    GitTreeDiffEntry:
      type: object
      properties:
        baseObjectId:
          type: string
          description: SHA1 hash of the object in the base tree, if it exists. Will
            be null in case of adds.
        changeType:
          type: string
          description: Type of change that affected this entry.
          enum:
          - none
          - add
          - edit
          - encoding
          - rename
          - delete
          - undelete
          - branch
          - merge
          - lock
          - rollback
          - sourceRename
          - targetRename
          - property
          - all
          x-ms-enum:
            name: VersionControlChangeType
            values:
            - value: none
              description: ""
            - value: add
              description: ""
            - value: edit
              description: ""
            - value: encoding
              description: ""
            - value: rename
              description: ""
            - value: delete
              description: ""
            - value: undelete
              description: ""
            - value: branch
              description: ""
            - value: merge
              description: ""
            - value: lock
              description: ""
            - value: rollback
              description: ""
            - value: sourceRename
              description: ""
            - value: targetRename
              description: ""
            - value: property
              description: ""
            - value: all
              description: ""
        objectType:
          type: string
          description: Object type of the tree entry. Blob, Tree or Commit("submodule")
          enum:
          - bad
          - commit
          - tree
          - blob
          - tag
          - ext2
          - ofsDelta
          - refDelta
          x-ms-enum:
            name: GitObjectType
            values:
            - value: bad
              description: ""
            - value: commit
              description: ""
            - value: tree
              description: ""
            - value: blob
              description: ""
            - value: tag
              description: ""
            - value: ext2
              description: ""
            - value: ofsDelta
              description: ""
            - value: refDelta
              description: ""
        path:
          type: string
          description: Relative path in base and target trees.
        targetObjectId:
          type: string
          description: SHA1 hash of the object in the target tree, if it exists. Will
            be null in case of deletes.
      description: ""
    GitTreeDiffResponse:
      type: object
      properties:
        continuationToken:
          type: array
          description: The HTTP client methods find the continuation token header
            in the response and populate this field.
          items:
            type: string
        treeDiff:
          $ref: '#/components/schemas/GitTreeDiff'
      description: ""
    GitTreeEntryRef:
      type: object
      properties:
        gitObjectType:
          type: string
          description: Blob or tree
          enum:
          - bad
          - commit
          - tree
          - blob
          - tag
          - ext2
          - ofsDelta
          - refDelta
          x-ms-enum:
            name: GitObjectType
            values:
            - value: bad
              description: ""
            - value: commit
              description: ""
            - value: tree
              description: ""
            - value: blob
              description: ""
            - value: tag
              description: ""
            - value: ext2
              description: ""
            - value: ofsDelta
              description: ""
            - value: refDelta
              description: ""
        mode:
          type: string
          description: Mode represented as octal string
        objectId:
          type: string
          description: SHA1 hash of git object
        relativePath:
          type: string
          description: Path relative to parent tree object
        size:
          type: integer
          description: Size of content
          format: int64
        url:
          type: string
          description: url to retrieve tree or blob
      description: ""
    GitTreeRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        objectId:
          type: string
          description: SHA1 hash of git object
        size:
          type: integer
          description: Sum of sizes of all children
          format: int64
        treeEntries:
          type: array
          description: Blobs and trees under this tree
          items:
            $ref: '#/components/schemas/GitTreeEntryRef'
        url:
          type: string
          description: Url to tree
      description: ""
    GitUserDate:
      type: object
      properties:
        date:
          type: string
          description: Date of the Git operation.
          format: date-time
        email:
          type: string
          description: Email address of the user performing the Git operation.
        imageUrl:
          type: string
          description: Url for the user's avatar.
        name:
          type: string
          description: Name of the user performing the Git operation.
      description: User info and date for Git operations.
    GitVersionDescriptor:
      type: object
      properties:
        version:
          type: string
          description: Version string identifier (name of tag/branch, SHA1 of commit)
        versionOptions:
          type: string
          description: Version options - Specify additional modifiers to version (e.g
            Previous)
          enum:
          - none
          - previousChange
          - firstParent
          x-ms-enum:
            name: GitVersionOptions
            values:
            - value: none
              description: Not specified
            - value: previousChange
              description: Commit that changed item prior to the current version
            - value: firstParent
              description: First parent of commit (HEAD^)
        versionType:
          type: string
          description: Version type (branch, tag, or commit). Determines how Id is
            interpreted
          enum:
          - branch
          - tag
          - commit
          x-ms-enum:
            name: GitVersionType
            values:
            - value: branch
              description: Interpret the version as a branch name
            - value: tag
              description: Interpret the version as a tag name
            - value: commit
              description: Interpret the version as a commit ID (SHA1)
      description: ""
    GlobalGitRepositoryKey:
      type: object
      properties:
        collectionId:
          type: string
          description: Team Project Collection ID of the collection for the repository.
          format: uuid
        projectId:
          type: string
          description: Team Project ID of the project for the repository.
          format: uuid
        repositoryId:
          type: string
          description: ID of the repository.
          format: uuid
      description: Globally unique key for a repository.
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Collections.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    HistoryEntry:
      type: object
      properties:
        changeList:
          $ref: '#/components/schemas/ChangeList'
        itemChangeType:
          type: string
          description: The change made to the item from this change list (only relevant
            for File history, not folders)
          enum:
          - none
          - add
          - edit
          - encoding
          - rename
          - delete
          - undelete
          - branch
          - merge
          - lock
          - rollback
          - sourceRename
          - targetRename
          - property
          - all
          x-ms-enum:
            name: VersionControlChangeType
            values:
            - value: none
              description: ""
            - value: add
              description: ""
            - value: edit
              description: ""
            - value: encoding
              description: ""
            - value: rename
              description: ""
            - value: delete
              description: ""
            - value: undelete
              description: ""
            - value: branch
              description: ""
            - value: merge
              description: ""
            - value: lock
              description: ""
            - value: rollback
              description: ""
            - value: sourceRename
              description: ""
            - value: targetRename
              description: ""
            - value: property
              description: ""
            - value: all
              description: ""
        serverItem:
          type: string
          description: The path of the item at this point in history (only relevant
            for File history, not folders)
      description: ""
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    IdentityRefWithVote:
      description: Identity information including a vote on a pull request.
      allOf:
      - $ref: '#/components/schemas/IdentityRef'
    ImportRepositoryValidation:
      type: object
      properties:
        gitSource:
          $ref: '#/components/schemas/GitImportGitSource'
        password:
          type: string
        tfvcSource:
          $ref: '#/components/schemas/GitImportTfvcSource'
        username:
          type: string
      description: ""
    IncludedGitCommit:
      type: object
      properties:
        commitId:
          type: string
        commitTime:
          type: string
          format: date-time
        parentCommitIds:
          type: array
          items:
            type: string
        repositoryId:
          type: string
          format: uuid
      description: ""
    IsDraftUpdatedEvent:
      description: Real time event (SignalR) for IsDraft update on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    ItemContent:
      type: object
      properties:
        content:
          type: string
        contentType:
          type: string
          enum:
          - rawText
          - base64Encoded
          x-ms-enum:
            name: ItemContentType
            values:
            - value: rawText
              description: ""
            - value: base64Encoded
              description: ""
      description: ""
    ItemDetailsOptions:
      type: object
      properties:
        includeContentMetadata:
          type: boolean
          description: If true, include metadata about the file type
        recursionLevel:
          type: string
          description: Specifies whether to include children (OneLevel), all descendants
            (Full) or None for folder items
          enum:
          - none
          - oneLevel
          - oneLevelPlusNestedEmptyFolders
          - full
          x-ms-enum:
            name: VersionControlRecursionType
            values:
            - value: none
              description: Only return the specified item.
            - value: oneLevel
              description: Return the specified item and its direct children.
            - value: oneLevelPlusNestedEmptyFolders
              description: Return the specified item and its direct children, as well
                as recursive chains of nested child folders that only contain a single
                folder.
            - value: full
              description: Return specified item and all descendants
      description: Optional details to include when returning an item model
    ItemModel:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        content:
          type: string
        contentMetadata:
          $ref: '#/components/schemas/FileContentMetadata'
        isFolder:
          type: boolean
        isSymLink:
          type: boolean
        path:
          type: string
        url:
          type: string
      description: ""
    JsonPatchDocument:
      description: The JSON model for JSON Patch Operations
      allOf:
      - type: array
        items:
          $ref: '#/components/schemas/JsonPatchOperation'
    JsonPatchOperation:
      type: object
      properties:
        from:
          type: string
          description: The path to copy from for the Move/Copy operation.
        op:
          type: string
          description: The patch operation
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          x-ms-enum:
            name: Operation
            values:
            - value: add
              description: ""
            - value: remove
              description: ""
            - value: replace
              description: ""
            - value: move
              description: ""
            - value: copy
              description: ""
            - value: test
              description: ""
        path:
          type: string
          description: The path for the operation. In the case of an array, a zero
            based index can be used to specify the position in the array (e.g. /biscuits/0/name).
            The "-" character can be used instead of an index to insert at the end
            of the array (e.g. /biscuits/-).
        value:
          type: object
          properties: {}
          description: The value for the operation. This is either a primitive or
            a JToken.
      description: The JSON model for a JSON Patch operation
    LabelsUpdatedEvent:
      description: Real time event (SignalR) for updated labels on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    LineDiffBlock:
      type: object
      properties:
        changeType:
          type: string
          description: Type of change that was made to the block.
          enum:
          - none
          - add
          - delete
          - edit
          x-ms-enum:
            name: LineDiffBlockChangeType
            values:
            - value: none
              description: No change - both the blocks are identical
            - value: add
              description: Lines were added to the block in the modified file
            - value: delete
              description: Lines were deleted from the block in the original file
            - value: edit
              description: Lines were modified
        modifiedLineNumberStart:
          type: integer
          description: Line number where this block starts in modified file.
          format: int32
        modifiedLinesCount:
          type: integer
          description: Count of lines in this block in modified file.
          format: int32
        originalLineNumberStart:
          type: integer
          description: Line number where this block starts in original file.
          format: int32
        originalLinesCount:
          type: integer
          description: Count of lines in this block in original file.
          format: int32
      description: The class to represent the line diff block
    MergeCompletedEvent:
      description: Real time event (SignalR) for a merge completed on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    PolicyConfiguration:
      description: The full policy configuration with settings.
      allOf:
      - $ref: '#/components/schemas/VersionedPolicyConfigurationRef'
    PolicyConfigurationRef:
      type: object
      properties:
        id:
          type: integer
          description: The policy configuration ID.
          format: int32
        type:
          $ref: '#/components/schemas/PolicyTypeRef'
        url:
          type: string
          description: The URL where the policy configuration can be retrieved.
      description: Policy configuration reference.
    PolicyEvaluationUpdatedEvent:
      description: Real time event (SignalR) for a policy evaluation update on a pull
        request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    PolicyTypeRef:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the policy type.
        id:
          type: string
          description: The policy type ID.
          format: uuid
        url:
          type: string
          description: The URL where the policy type can be retrieved.
      description: Policy type reference.
    PropertiesCollection:
      type: object
      properties:
        count:
          type: integer
          description: The count of properties in the collection.
          format: int32
        item:
          type: object
          properties: {}
        keys:
          type: array
          description: The set of keys in the collection.
          items:
            type: string
        values:
          type: array
          description: The set of values in the collection.
          items:
            type: string
      description: The class represents a property bag as a collection of key-value
        pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`)
        except for `DBNull` are accepted. Values of type Byte[], Int32, Double, DateType
        and String preserve their type, other primitives are retuned as a String.
        Byte[] expected as base64 encoded string.
    PullRequestCreatedEvent:
      description: Real time event (SignalR) for pull request creation
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    PullRequestTabExtensionConfig:
      type: object
      properties:
        pullRequestId:
          type: integer
          format: int32
        repositoryId:
          type: string
      description: Initial config contract sent to extensions creating tabs on the
        pull request page
    RealTimePullRequestEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The id of this event. Can be used to track send/receive state
            between client and server.
          format: uuid
        pullRequestId:
          type: integer
          description: The id of the pull request this event was generated for.
          format: int32
      description: Base contract for a real time pull request event (SignalR)
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    ResourceRef:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
      description: ""
    RetargetEvent:
      description: Real time event (SignalR) for when the target branch of a pull
        request is changed
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    ReviewersUpdatedEvent:
      description: Real time event (SignalR) for an update to reviewers on a pull
        request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    ReviewersVotesResetEvent:
      description: Real time event (SignalR) for reviewer votes being reset on a pull
        request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    ReviewerVoteUpdatedEvent:
      description: Real time event (SignalR) for a reviewer vote update on a pull
        request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    ShareNotificationContext:
      type: object
      properties:
        message:
          type: string
          description: Optional user note or message.
        receivers:
          type: array
          description: Identities of users who will receive a share notification.
          items:
            $ref: '#/components/schemas/IdentityRef'
      description: Context used while sharing a pull request.
    SourceToTargetRef:
      type: object
      properties:
        sourceRef:
          type: string
          description: The source ref to copy. For example, refs/heads/master.
        targetRef:
          type: string
          description: The target ref to update. For example, refs/heads/master.
      description: ""
    StatusAddedEvent:
      description: Real time event (SignalR) for an added status on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    StatusesDeletedEvent:
      description: Real time event (SignalR) for deleted statuses on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    StatusUpdatedEvent:
      description: Real time event (SignalR) for a status update on a pull request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    SupportedIde:
      type: object
      properties:
        downloadUrl:
          type: string
          description: The download URL for the IDE.
        ideType:
          type: string
          description: The type of the IDE.
          enum:
          - unknown
          - androidStudio
          - appCode
          - cLion
          - dataGrip
          - eclipse
          - intelliJ
          - mps
          - phpStorm
          - pyCharm
          - rubyMine
          - tower
          - visualStudio
          - vsCode
          - webStorm
          x-ms-enum:
            name: SupportedIdeType
            values:
            - value: unknown
              description: ""
            - value: androidStudio
              description: ""
            - value: appCode
              description: ""
            - value: cLion
              description: ""
            - value: dataGrip
              description: ""
            - value: eclipse
              description: ""
            - value: intelliJ
              description: ""
            - value: mps
              description: ""
            - value: phpStorm
              description: ""
            - value: pyCharm
              description: ""
            - value: rubyMine
              description: ""
            - value: tower
              description: ""
            - value: visualStudio
              description: ""
            - value: vsCode
              description: ""
            - value: webStorm
              description: ""
        name:
          type: string
          description: The name of the IDE.
        protocolHandlerUrl:
          type: string
          description: The URL to open the protocol handler for the IDE.
        supportedPlatforms:
          type: array
          description: A list of SupportedPlatforms.
          items:
            type: string
      description: Represents a Supported IDE entity.
    TeamProjectCollectionReference:
      type: object
      properties:
        id:
          type: string
          description: Collection Id.
          format: uuid
        name:
          type: string
          description: Collection Name.
        url:
          type: string
          description: Collection REST Url.
      description: Reference object for a TeamProjectCollection.
    TeamProjectReference:
      type: object
      properties:
        abbreviation:
          type: string
          description: Project abbreviation.
        defaultTeamImageUrl:
          type: string
          description: Url to default team identity image.
        description:
          type: string
          description: The project's description (if any).
        id:
          type: string
          description: Project identifier.
          format: uuid
        lastUpdateTime:
          type: string
          description: Project last update time.
          format: date-time
        name:
          type: string
          description: Project name.
        revision:
          type: integer
          description: Project revision.
          format: int64
        state:
          type: string
          description: Project state.
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: Project is in the process of being deleted.
            - value: new
              description: Project is in the process of being created.
            - value: wellFormed
              description: Project is completely created and ready to use.
            - value: createPending
              description: Project has been queued for creation, but the process has
                not yet started.
            - value: all
              description: All projects regardless of state except Deleted.
            - value: unchanged
              description: Project has not been changed.
            - value: deleted
              description: Project has been deleted.
        url:
          type: string
          description: Url to the full version of the object.
        visibility:
          type: string
          description: Project visibility.
          enum:
          - private
          - public
          x-ms-enum:
            name: ProjectVisibility
            values:
            - value: private
              description: The project is only visible to users with explicit access.
            - value: public
              description: The project is visible to all.
      description: Represents a shallow reference to a TeamProject.
    TfvcBranch:
      description: Class representing a branch object.
      allOf:
      - $ref: '#/components/schemas/TfvcBranchRef'
    TfvcBranchMapping:
      type: object
      properties:
        depth:
          type: string
          description: Depth of the branch.
        serverItem:
          type: string
          description: Server item for the branch.
        type:
          type: string
          description: Type of the branch.
      description: A branch mapping.
    TfvcBranchRef:
      description: Metadata for a branchref.
      allOf:
      - $ref: '#/components/schemas/TfvcShallowBranchRef'
    TfvcChange:
      description: A change.
      allOf:
      - $ref: '#/components/schemas/Change'
    TfvcChangeset:
      description: A collection of changes.
      allOf:
      - $ref: '#/components/schemas/TfvcChangesetRef'
    TfvcChangesetRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        author:
          $ref: '#/components/schemas/IdentityRef'
        changesetId:
          type: integer
          description: Changeset Id.
          format: int32
        checkedInBy:
          $ref: '#/components/schemas/IdentityRef'
        comment:
          type: string
          description: Comment for the changeset.
        commentTruncated:
          type: boolean
          description: Was the Comment result truncated?
        createdDate:
          type: string
          description: Creation date of the changeset.
          format: date-time
        url:
          type: string
          description: URL to retrieve the item.
      description: Metadata for a changeset.
    TfvcChangesetSearchCriteria:
      type: object
      properties:
        author:
          type: string
          description: Alias or display name of user who made the changes.
        followRenames:
          type: boolean
          description: Whether or not to follow renames for the given item being queried.
        fromDate:
          type: string
          description: If provided, only include changesets created after this date
            (string).
        fromId:
          type: integer
          description: If provided, only include changesets after this changesetID.
          format: int32
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references.
        itemPath:
          type: string
          description: Path of item to search under.
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TfvcMappingFilter'
        toDate:
          type: string
          description: If provided, only include changesets created before this date
            (string).
        toId:
          type: integer
          description: If provided, a version descriptor for the latest change list
            to include.
          format: int32
      description: Criteria used in a search for change lists.
    TfvcChangesetsRequestData:
      type: object
      properties:
        changesetIds:
          type: array
          description: List of changeset Ids.
          items:
            type: integer
            format: int32
        commentLength:
          type: integer
          description: Max length of the comment.
          format: int32
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references
      description: Request body for Get batched changesets.
    TfvcCheckinEventData:
      type: object
      properties:
        changeset:
          $ref: '#/components/schemas/TfvcChangeset'
        project:
          $ref: '#/components/schemas/TeamProjectReference'
      description: ""
    TfvcHistoryEntry:
      description: ""
      allOf:
      - $ref: '#/components/schemas/HistoryEntry'
    TfvcItem:
      description: Metadata for an item.
      allOf:
      - $ref: '#/components/schemas/ItemModel'
    TfvcItemDescriptor:
      type: object
      properties:
        path:
          type: string
          description: Item path.
        recursionLevel:
          type: string
          description: Defaults to OneLevel.
          enum:
          - none
          - oneLevel
          - oneLevelPlusNestedEmptyFolders
          - full
          x-ms-enum:
            name: VersionControlRecursionType
            values:
            - value: none
              description: Only return the specified item.
            - value: oneLevel
              description: Return the specified item and its direct children.
            - value: oneLevelPlusNestedEmptyFolders
              description: Return the specified item and its direct children, as well
                as recursive chains of nested child folders that only contain a single
                folder.
            - value: full
              description: Return specified item and all descendants
        version:
          type: string
          description: Specify the desired version, can be null or empty string only
            if VersionType is latest or tip.
        versionOption:
          type: string
          description: Defaults to None.
          enum:
          - none
          - previous
          - useRename
          x-ms-enum:
            name: TfvcVersionOption
            values:
            - value: none
              description: None.
            - value: previous
              description: Return the previous version.
            - value: useRename
              description: Only usuable with versiontype MergeSource and integer versions,
                uses RenameSource identifier instead of Merge identifier.
        versionType:
          type: string
          description: Defaults to Latest.
          enum:
          - none
          - changeset
          - shelveset
          - change
          - date
          - latest
          - tip
          - mergeSource
          x-ms-enum:
            name: TfvcVersionType
            values:
            - value: none
              description: Version is treated as a ChangesetId.
            - value: changeset
              description: Version is treated as a ChangesetId.
            - value: shelveset
              description: Version is treated as a Shelveset name and owner.
            - value: change
              description: Version is treated as a Change.
            - value: date
              description: Version is treated as a Date.
            - value: latest
              description: If Version is defined the Latest of that Version will be
                used, if no version is defined the latest ChangesetId will be used.
            - value: tip
              description: Version will be treated as a Tip, if no version is defined
                latest will be used.
            - value: mergeSource
              description: Version will be treated as a MergeSource.
      description: Item path and Version descriptor properties
    TfvcItemPreviousHash:
      description: Metadata for an item including the previous hash value for files.
      allOf:
      - $ref: '#/components/schemas/TfvcItem'
    TfvcItemRequestData:
      type: object
      properties:
        includeContentMetadata:
          type: boolean
          description: If true, include metadata about the file type
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references
        itemDescriptors:
          type: array
          items:
            $ref: '#/components/schemas/TfvcItemDescriptor'
      description: Request body used by Get Items Batch
    TfvcLabel:
      description: Metadata for a label.
      allOf:
      - $ref: '#/components/schemas/TfvcLabelRef'
    TfvcLabelRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        description:
          type: string
          description: Label description.
        id:
          type: integer
          description: Label Id.
          format: int32
        labelScope:
          type: string
          description: Label scope.
        modifiedDate:
          type: string
          description: Last modified datetime for the label.
          format: date-time
        name:
          type: string
          description: Label name.
        owner:
          $ref: '#/components/schemas/IdentityRef'
        url:
          type: string
          description: Label Url.
      description: Metadata for a Label.
    TfvcLabelRequestData:
      type: object
      properties:
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references
        itemLabelFilter:
          type: string
        labelScope:
          type: string
        maxItemCount:
          type: integer
          format: int32
        name:
          type: string
        owner:
          type: string
      description: ""
    TfvcMappingFilter:
      type: object
      properties:
        exclude:
          type: boolean
          description: True if ServerPath should be excluded.
        serverPath:
          type: string
          description: Path to be included or excluded.
      description: MappingFilter can be used to include or exclude specific paths.
    TfvcMergeSource:
      type: object
      properties:
        isRename:
          type: boolean
          description: Indicates if this a rename source. If false, it is a merge
            source.
        serverItem:
          type: string
          description: The server item of the merge source.
        versionFrom:
          type: integer
          description: Start of the version range.
          format: int32
        versionTo:
          type: integer
          description: End of the version range.
          format: int32
      description: ""
    TfvcPolicyFailureInfo:
      type: object
      properties:
        message:
          type: string
          description: Policy failure message.
        policyName:
          type: string
          description: Name of the policy that failed.
      description: Policy failure information.
    TfvcPolicyOverrideInfo:
      type: object
      properties:
        comment:
          type: string
          description: Overidden policy comment.
        policyFailures:
          type: array
          description: Information on the failed policy that was overridden.
          items:
            $ref: '#/components/schemas/TfvcPolicyFailureInfo'
      description: Information on the policy override.
    TfvcShallowBranchRef:
      type: object
      properties:
        path:
          type: string
          description: Path for the branch.
      description: This is the shallow branchref class.
    TfvcShelveset:
      description: Metadata for a shelveset.
      allOf:
      - $ref: '#/components/schemas/TfvcShelvesetRef'
    TfvcShelvesetRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        comment:
          type: string
          description: Shelveset comment.
        commentTruncated:
          type: boolean
          description: Shelveset comment truncated as applicable.
        createdDate:
          type: string
          description: Shelveset create date.
          format: date-time
        id:
          type: string
          description: Shelveset Id.
        name:
          type: string
          description: Shelveset name.
        owner:
          $ref: '#/components/schemas/IdentityRef'
        url:
          type: string
          description: Shelveset Url.
      description: Metadata for a shallow shelveset.
    TfvcShelvesetRequestData:
      type: object
      properties:
        includeDetails:
          type: boolean
          description: Whether to include policyOverride and notes Only applies when
            requesting a single deep shelveset
        includeLinks:
          type: boolean
          description: Whether to include the _links field on the shallow references.
            Does not apply when requesting a single deep shelveset object. Links will
            always be included in the deep shelveset.
        includeWorkItems:
          type: boolean
          description: Whether to include workItems
        maxChangeCount:
          type: integer
          description: Max number of changes to include
          format: int32
        maxCommentLength:
          type: integer
          description: Max length of comment
          format: int32
        name:
          type: string
          description: Shelveset name
        owner:
          type: string
          description: Owner's ID. Could be a name or a guid.
      description: ""
    TfvcStatistics:
      type: object
      properties:
        changesetId:
          type: integer
          description: Id of the last changeset the stats are based on.
          format: int32
        fileCountTotal:
          type: integer
          description: Count of files at the requested scope.
          format: int64
      description: ""
    TfvcVersionDescriptor:
      type: object
      properties:
        version:
          type: string
          description: Version object.
        versionOption:
          type: string
          enum:
          - none
          - previous
          - useRename
          x-ms-enum:
            name: TfvcVersionOption
            values:
            - value: none
              description: None.
            - value: previous
              description: Return the previous version.
            - value: useRename
              description: Only usuable with versiontype MergeSource and integer versions,
                uses RenameSource identifier instead of Merge identifier.
        versionType:
          type: string
          enum:
          - none
          - changeset
          - shelveset
          - change
          - date
          - latest
          - tip
          - mergeSource
          x-ms-enum:
            name: TfvcVersionType
            values:
            - value: none
              description: Version is treated as a ChangesetId.
            - value: changeset
              description: Version is treated as a ChangesetId.
            - value: shelveset
              description: Version is treated as a Shelveset name and owner.
            - value: change
              description: Version is treated as a Change.
            - value: date
              description: Version is treated as a Date.
            - value: latest
              description: If Version is defined the Latest of that Version will be
                used, if no version is defined the latest ChangesetId will be used.
            - value: tip
              description: Version will be treated as a Tip, if no version is defined
                latest will be used.
            - value: mergeSource
              description: Version will be treated as a MergeSource.
      description: Version descriptor properties.
    TitleDescriptionUpdatedEvent:
      description: Real time event (SignalR) for a title/description update on a pull
        request
      allOf:
      - $ref: '#/components/schemas/RealTimePullRequestEvent'
    UpdateRefsRequest:
      type: object
      properties:
        refUpdateRequests:
          type: array
          items:
            $ref: '#/components/schemas/GitRefUpdate'
        updateMode:
          type: string
          enum:
          - bestEffort
          - allOrNone
          x-ms-enum:
            name: GitRefUpdateMode
            values:
            - value: bestEffort
              description: Indicates the Git protocol model where any refs that can
                be updated will be updated, but any failures will not prevent other
                updates from succeeding.
            - value: allOrNone
              description: Indicates that all ref updates must succeed or none will
                succeed. All ref updates will be atomically written. If any failure
                is encountered, previously successful updates will be rolled back
                and the entire operation will fail.
      description: ""
    VersionControlProjectInfo:
      type: object
      properties:
        defaultSourceControlType:
          type: string
          enum:
          - tfvc
          - git
          x-ms-enum:
            name: SourceControlTypes
            values:
            - value: tfvc
              description: ""
            - value: git
              description: ""
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        supportsGit:
          type: boolean
        supportsTFVC:
          type: boolean
      description: ""
    VersionedPolicyConfigurationRef:
      description: A particular revision for a policy configuration.
      allOf:
      - $ref: '#/components/schemas/PolicyConfigurationRef'
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
    WebApiCreateTagRequestData:
      type: object
      properties:
        name:
          type: string
          description: Name of the tag definition that will be created.
      description: The representation of data needed to create a tag definition which
        is sent across the wire.
    WebApiTagDefinition:
      type: object
      properties:
        active:
          type: boolean
          description: Whether or not the tag definition is active.
        id:
          type: string
          description: ID of the tag definition.
          format: uuid
        name:
          type: string
          description: The name of the tag definition.
        url:
          type: string
          description: Resource URL for the Tag Definition.
      description: The representation of a tag definition which is sent across the
        wire.
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0' to use
        this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.code: Grants the ability to read source code and metadata about commits,
              changesets, branches, and other version control artifacts. Also grants
              the ability to search code and get notified about version control events
              via service hooks.
            vso.code_manage: Grants the ability to read, update, and delete source
              code, access metadata about commits, changesets, branches, and other
              version control artifacts. Also grants the ability to create and manage
              code repositories, create and manage pull requests and code reviews,
              and to receive notifications about version control events via service
              hooks.
            vso.code_write: Grants the ability to read, update, and delete source
              code, access metadata about commits, changesets, branches, and other
              version control artifacts. Also grants the ability to create and manage
              pull requests and code reviews and to receive notifications about version
              control events via service hooks.
            vso.code_status: Grants the ability to read and write commit and pull
              request status.
            vso.threads_full: Grants the ability to read and write to pull request
              comment threads.
x-ms-vss-area: Git
x-ms-vss-resource-area-id: 4e080c62-fa21-4fbc-8fef-2a10a2b38049
x-ms-paths:
  /{collection}/{project}/_apis/git/repositories/{repositoryId}?includeParent={includeParent}:
    get:
      tags:
      - Repositories
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: repositories
      x-ms-vss-method: GetRepositoryWithParent
      description: Retrieve a git repository.
      operationId: Repositories_Get Repository With Parent
      produces:
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: repositoryId
        description: The name or ID of the repository.
        required: true
        type: string
      - in: query
        name: includeParent
        description: True to include parent repository. Only available in authenticated
          calls.
        required: true
        type: boolean
      - in: path
        name: project
        description: Project ID or project name
        required: true
        x-ms-required: false
        type: string
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GitRepository'
      security:
      - oauth2:
        - vso.code
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/commits?:
    get:
      tags:
      - Commits
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: commits
      x-ms-vss-method: GetCommits
      description: |-
        Retrieve git commits for a project

        Parameters that use the searchCriteria prefix in their name can be specified without it as query parameters, e.g. searchCriteria.$top -> $top
      operationId: Commits_Get Commits
      produces:
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: repositoryId
        description: The id or friendly name of the repository. To use the friendly
          name, projectId must also be specified.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        x-ms-required: false
        type: string
      - in: query
        name: searchCriteria.$skip
        description: Number of entries to skip
        required: false
        type: integer
        format: int32
      - in: query
        name: searchCriteria.$top
        description: Maximum number of entries to retrieve
        required: false
        type: integer
        format: int32
      - in: query
        name: searchCriteria.author
        description: Alias or display name of the author
        required: false
        type: string
      - in: query
        name: searchCriteria.compareVersion.version
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        required: false
        type: string
      - in: query
        name: searchCriteria.compareVersion.versionOptions
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        required: false
        type: string
        enum:
        - none
        - previousChange
        - firstParent
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - in: query
        name: searchCriteria.compareVersion.versionType
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        required: false
        type: string
        enum:
        - branch
        - tag
        - commit
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - in: query
        name: searchCriteria.excludeDeletes
        description: Only applies when an itemPath is specified. This determines whether
          to exclude delete entries of the specified path.
        required: false
        type: boolean
      - in: query
        name: searchCriteria.fromCommitId
        description: If provided, a lower bound for filtering commits alphabetically
        required: false
        type: string
      - in: query
        name: searchCriteria.fromDate
        description: If provided, only include history entries created after this
          date (string)
        required: false
        type: string
      - in: query
        name: searchCriteria.historyMode
        description: What Git history mode should be used. This only applies to the
          search criteria when Ids = null and an itemPath is specified.
        required: false
        type: string
        enum:
        - simplifiedHistory
        - firstParent
        - fullHistory
        - fullHistorySimplifyMerges
        x-ms-enum:
          name: GitHistoryMode
          values:
          - value: simplifiedHistory
            description: The history mode used by `git log`. This is the default.
          - value: firstParent
            description: The history mode used by `git log --first-parent`
          - value: fullHistory
            description: The history mode used by `git log --full-history`
          - value: fullHistorySimplifyMerges
            description: The history mode used by `git log --full-history --simplify-merges`
      - in: query
        name: searchCriteria.ids
        description: If provided, specifies the exact commit ids of the commits to
          fetch. May not be combined with other parameters.
        required: false
        type: array
        items:
          type: string
      - in: query
        name: searchCriteria.includeLinks
        description: Whether to include the _links field on the shallow references
        required: false
        type: boolean
      - in: query
        name: searchCriteria.includePushData
        description: Whether to include the push information
        required: false
        type: boolean
      - in: query
        name: searchCriteria.includeUserImageUrl
        description: Whether to include the image Url for committers and authors
        required: false
        type: boolean
      - in: query
        name: searchCriteria.includeWorkItems
        description: Whether to include linked work items
        required: false
        type: boolean
      - in: query
        name: searchCriteria.itemPath
        description: Path of item to search under
        required: false
        type: string
      - in: query
        name: searchCriteria.itemVersion.version
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        required: false
        type: string
      - in: query
        name: searchCriteria.itemVersion.versionOptions
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        required: false
        type: string
        enum:
        - none
        - previousChange
        - firstParent
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - in: query
        name: searchCriteria.itemVersion.versionType
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        required: false
        type: string
        enum:
        - branch
        - tag
        - commit
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - in: query
        name: searchCriteria.showOldestCommitsFirst
        description: If enabled, this option will ignore the itemVersion and compareVersion
          parameters
        required: false
        type: boolean
      - in: query
        name: searchCriteria.toCommitId
        description: If provided, an upper bound for filtering commits alphabetically
        required: false
        type: string
      - in: query
        name: searchCriteria.toDate
        description: If provided, only include history entries created before this
          date (string)
        required: false
        type: string
      - in: query
        name: searchCriteria.user
        description: Alias or display name of the committer
        required: false
        type: string
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/GitCommitRef'
      security:
      - oauth2:
        - vso.code
      x-ms-examples:
        All commits:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits-onprem.json
        By author:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits_author-_author_-onprem.json
        By committer:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits_committer-_committer_-onprem.json
        On a branch:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits_branch-onprem.json
        On a branch and in a path:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits_branch_itemPath-_itemPath_-onprem.json
        Reachable from a commit:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits_commit-onprem.json
        Reachable from a commit and path:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits_commit_itemPath-_itemPath_-onprem.json
        In a date range:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits_fromDate-_fromDate__toDate-_toDate_-onprem.json
        Paging:
          $ref: ./httpExamples/Commits/GET__git_repositories__repositoryId__commits__skip-_skip___top-_top_-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/items?path={path}:
    get:
      tags:
      - Items
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: items
      x-ms-vss-method: GetItem
      description: Get Item Metadata and/or Content for a single item. The download
        parameter is to indicate whether the content should be available as a download
        or just sent as a stream in the response. Doesn't apply to zipped content,
        which is always returned as a download.
      operationId: Items_Get
      produces:
      - application/zip
      - text/plain
      - application/octet-stream
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: repositoryId
        description: The name or ID of the repository.
        required: true
        type: string
      - in: query
        name: path
        description: The item path.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        x-ms-required: false
        type: string
      - in: query
        name: scopePath
        description: The path scope.  The default is null.
        required: false
        type: string
      - in: query
        name: recursionLevel
        description: The recursion level of this request. The default is 'none', no
          recursion.
        required: false
        type: string
        enum:
        - none
        - oneLevel
        - oneLevelPlusNestedEmptyFolders
        - full
        x-ms-enum:
          name: VersionControlRecursionType
          values:
          - value: none
            description: Only return the specified item.
          - value: oneLevel
            description: Return the specified item and its direct children.
          - value: oneLevelPlusNestedEmptyFolders
            description: Return the specified item and its direct children, as well
              as recursive chains of nested child folders that only contain a single
              folder.
          - value: full
            description: Return specified item and all descendants
      - in: query
        name: includeContentMetadata
        description: Set to true to include content metadata.  Default is false.
        required: false
        type: boolean
      - in: query
        name: latestProcessedChange
        description: Set to true to include the latest changes.  Default is false.
        required: false
        type: boolean
      - in: query
        name: download
        description: Set to true to download the response as a file.  Default is false.
        required: false
        type: boolean
      - in: query
        name: $format
        description: If specified, this overrides the HTTP Accept request header to
          return either 'json' or 'zip'. If $format is specified, then api-version
          should also be specified as a query parameter.
        required: false
        type: string
      - in: query
        name: versionDescriptor.version
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        required: false
        type: string
      - in: query
        name: versionDescriptor.versionOptions
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        required: false
        type: string
        enum:
        - none
        - previousChange
        - firstParent
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - in: query
        name: versionDescriptor.versionType
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        required: false
        type: string
        enum:
        - branch
        - tag
        - commit
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - in: query
        name: includeContent
        description: Set to true to include item content when requesting json.  Default
          is false.
        required: false
        type: boolean
      - in: query
        name: resolveLfs
        description: Set to true to resolve Git LFS pointer files to return actual
          content from Git LFS.  Default is false.
        required: false
        type: boolean
      - in: query
        name: sanitize
        description: Set to true to sanitize an svg file and return it as image. Useful
          only if requested for svg file. Default is false.
        required: false
        type: boolean
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GitItem'
      security:
      - oauth2:
        - vso.code
      x-ms-examples:
        Get metadata:
          $ref: ./httpExamples/Items/GET__git_repositories__repositoryId__items_scopePath-_filePath_-onprem.json
        Download:
          $ref: ./httpExamples/Items/GET__git_repositories__repositoryId__items_scopePath-_filePath__download-true-onprem.json
  /{collection}/{project}/_apis/git/repositories/{repositoryId}/stats/branches?name={name}:
    get:
      tags:
      - Stats
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: branchStats
      x-ms-vss-method: GetBranch
      description: Retrieve statistics about a single branch.
      operationId: Stats_Get
      produces:
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: repositoryId
        description: The name or ID of the repository.
        required: true
        type: string
      - in: query
        name: name
        description: Name of the branch.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        x-ms-required: false
        type: string
      - in: query
        name: baseVersionDescriptor.version
        description: Version string identifier (name of tag/branch, SHA1 of commit)
        required: false
        type: string
      - in: query
        name: baseVersionDescriptor.versionOptions
        description: Version options - Specify additional modifiers to version (e.g
          Previous)
        required: false
        type: string
        enum:
        - none
        - previousChange
        - firstParent
        x-ms-enum:
          name: GitVersionOptions
          values:
          - value: none
            description: Not specified
          - value: previousChange
            description: Commit that changed item prior to the current version
          - value: firstParent
            description: First parent of commit (HEAD^)
      - in: query
        name: baseVersionDescriptor.versionType
        description: Version type (branch, tag, or commit). Determines how Id is interpreted
        required: false
        type: string
        enum:
        - branch
        - tag
        - commit
        x-ms-enum:
          name: GitVersionType
          values:
          - value: branch
            description: Interpret the version as a branch name
          - value: tag
            description: Interpret the version as a tag name
          - value: commit
            description: Interpret the version as a commit ID (SHA1)
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GitBranchStats'
      security:
      - oauth2:
        - vso.code
      x-ms-examples:
        For a single branch:
          $ref: ./httpExamples/BranchStats/GET__git_repositories__repositoryId__stats_branches__name_-onprem.json
        For a tag or commit:
          $ref: ./httpExamples/BranchStats/GET__git_repositories__repositoryId__stats_branches__name__baseVersionType-_baseVersionType__baseVersion-_baseVersion_-onprem.json
x-ms-parameterized-host:
  hostTemplate: '{instance}'
  parameters:
  - name: instance
    description: TFS server name ({server:port})
    required: true
    type: string
    in: path
