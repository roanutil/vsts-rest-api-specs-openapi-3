openapi: 3.0.1
info:
  title: Build
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "7.0"
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://https://fabrikam-fiber-inc:8080/DefaultCollection/
security:
- accessToken: []
tags:
- name: Artifacts
  description: Provides methods for working with artifacts produced by builds.
- name: Attachments
- name: Authorizedresources
- name: Badge
  description: Provides methods to generate SVG images representing the status of
    builds.
- name: Builds
  description: Provides methods for working with builds.
- name: Controllers
- name: Definitions
  description: Provides methods for working with build definitions.
- name: Folders
  description: Provides methods for working with folders of build definitions.
- name: General Settings
  description: Provides methods for working with general pipeline settings.
- name: History
- name: Latest
  description: Provides methods to return the latest builds for definitions.
- name: Leases
  description: Retention leases are used to manage the lifetime of pipeline runs beyond
    the configured retention periods.
- name: Metrics
  description: Provides methods for getting summary information about builds that
    have run in the system.
- name: Options
  description: Provides methods for discovering build definition options supported
    by the system.
- name: Properties
  description: Provides methods for working with extended properties of builds and
    definitions.
- name: Report
  description: Provides methods for working with build reports.
- name: Resources
- name: Resource Usage
  description: Provides information about build resources in the system.
- name: Retention
  description: Provides methods for updating pipeline retention settings.
- name: Settings
  description: Provides methods for updating build-related system settings.
- name: Source Providers
  description: Provides methods for working with source providers.
- name: Stages
- name: Status
  description: Provides methods to generate SVG images representing the status of
    builds.
- name: Tags
- name: Templates
  description: Provides methods for working with build definition templates.
- name: Timeline
- name: Yaml
  description: Provides conversion from Build Definition to Yaml.
paths:
  /{collection}/_apis/build/controllers:
    get:
      tags:
      - Controllers
      description: Gets controller, optionally filtered by name
      operationId: Controllers_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildController'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: controllers
      x-ms-vss-method: GetBuildControllers
  /{collection}/_apis/build/controllers/{controllerId}:
    get:
      tags:
      - Controllers
      description: Gets a controller
      operationId: Controllers_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: controllerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildController'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: controllers
      x-ms-vss-method: GetBuildController
  /{collection}/_apis/build/resourceusage:
    get:
      tags:
      - Resource Usage
      description: Gets information about build resources in the system.
      operationId: Resource Usage_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildResourceUsage'
      x-ms-docs-override-version: 7.0-preview.2
      x-ms-vss-resource: resourceUsage
      x-ms-vss-method: GetResourceUsage
      x-ms-preview: true
  /{collection}/_apis/build/retention/history:
    get:
      tags:
      - History
      description: Returns the retention history for the project collection. This
        includes pipelines that have custom retention rules that may prevent the retention
        job from cleaning them up, runs per pipeline with retention type, files associated
        with pipelines owned by the collection with retention type, and the number
        of files per pipeline.
      operationId: History_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: daysToLookback
        in: query
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildRetentionHistory'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: history
      x-ms-vss-method: GetRetentionHistory
  /{collection}/_apis/public/build/definitions/{project}/{definitionId}/badge:
    get:
      tags:
      - Badge
      description: This endpoint is deprecated. Please see the Build Status REST endpoint.
      operationId: Badge_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project ID or name.
        required: true
        schema:
          type: string
          format: uuid
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: branchName
        in: query
        description: The name of the branch.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      deprecated: true
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: badge
      x-ms-vss-method: GetBadge
  /{collection}/{project}/_apis/build/authorizedresources:
    get:
      tags:
      - Authorizedresources
      operationId: Authorizedresources_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: authorizedresources
      x-ms-vss-method: GetProjectResources
      x-ms-preview: true
    patch:
      tags:
      - Authorizedresources
      operationId: Authorizedresources_Authorize Project Resources
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DefinitionResourceReference'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: authorizedresources
      x-ms-vss-method: AuthorizeProjectResources
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/builds:
    get:
      tags:
      - Builds
      description: Gets a list of builds.
      operationId: Builds_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitions
        in: query
        description: A comma-delimited list of definition IDs. If specified, filters
          to builds for these definitions.
        schema:
          type: string
          format: array (int32)
      - name: queues
        in: query
        description: A comma-delimited list of queue IDs. If specified, filters to
          builds that ran against these queues.
        schema:
          type: string
          format: array (int32)
      - name: buildNumber
        in: query
        description: If specified, filters to builds that match this build number.
          Append * to do a prefix search.
        schema:
          type: string
      - name: minTime
        in: query
        description: If specified, filters to builds that finished/started/queued
          after this date based on the queryOrder specified.
        schema:
          type: string
          format: date-time
      - name: maxTime
        in: query
        description: If specified, filters to builds that finished/started/queued
          before this date based on the queryOrder specified.
        schema:
          type: string
          format: date-time
      - name: requestedFor
        in: query
        description: If specified, filters to builds requested for the specified user.
        schema:
          type: string
      - name: reasonFilter
        in: query
        description: If specified, filters to builds that match this reason.
        schema:
          type: string
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        x-ms-enum:
          name: BuildReason
          values:
          - value: none
            description: No reason. This value should not be used.
          - value: manual
            description: The build was started manually.
          - value: individualCI
            description: The build was started for the trigger TriggerType.ContinuousIntegration.
          - value: batchedCI
            description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
          - value: schedule
            description: The build was started for the trigger TriggerType.Schedule.
          - value: scheduleForced
            description: The build was started for the trigger TriggerType.ScheduleForced.
          - value: userCreated
            description: The build was created by a user.
          - value: validateShelveset
            description: The build was started manually for private validation.
          - value: checkInShelveset
            description: The build was started for the trigger ContinuousIntegrationType.Gated.
          - value: pullRequest
            description: The build was started by a pull request. Added in resource
              version 3.
          - value: buildCompletion
            description: The build was started when another build completed.
          - value: resourceTrigger
            description: The build was started when resources in pipeline triggered
              it
          - value: triggered
            description: The build was triggered for retention policy purposes.
          - value: all
            description: All reasons.
      - name: statusFilter
        in: query
        description: If specified, filters to builds that match this status.
        schema:
          type: string
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
        x-ms-enum:
          name: BuildStatus
          values:
          - value: none
            description: No status.
          - value: inProgress
            description: The build is currently in progress.
          - value: completed
            description: The build has completed.
          - value: cancelling
            description: The build is cancelling
          - value: postponed
            description: The build is inactive in the queue.
          - value: notStarted
            description: The build has not yet started.
          - value: all
            description: All status.
      - name: resultFilter
        in: query
        description: If specified, filters to builds that match this result.
        schema:
          type: string
          enum:
          - none
          - succeeded
          - partiallySucceeded
          - failed
          - canceled
          x-ms-enum:
            name: BuildResult
            values:
            - value: none
              description: No result
            - value: succeeded
              description: The build completed successfully.
            - value: partiallySucceeded
              description: The build completed compilation successfully but had other
                errors.
            - value: failed
              description: The build completed unsuccessfully.
            - value: canceled
              description: The build was canceled before starting.
        x-ms-enum:
          name: BuildResult
          values:
          - value: none
            description: No result
          - value: succeeded
            description: The build completed successfully.
          - value: partiallySucceeded
            description: The build completed compilation successfully but had other
              errors.
          - value: failed
            description: The build completed unsuccessfully.
          - value: canceled
            description: The build was canceled before starting.
      - name: tagFilters
        in: query
        description: A comma-delimited list of tags. If specified, filters to builds
          that have the specified tags.
        schema:
          type: string
          format: array (string)
      - name: properties
        in: query
        description: A comma-delimited list of properties to retrieve.
        schema:
          type: string
          format: array (string)
      - name: $top
        in: query
        description: The maximum number of builds to return.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: A continuation token, returned by a previous call to this method,
          that can be used to return the next set of builds.
        schema:
          type: string
      - name: maxBuildsPerDefinition
        in: query
        description: The maximum number of builds to return per definition.
        schema:
          type: integer
          format: int32
      - name: deletedFilter
        in: query
        description: Indicates whether to exclude, include, or only return deleted
          builds.
        schema:
          type: string
          enum:
          - excludeDeleted
          - includeDeleted
          - onlyDeleted
          x-ms-enum:
            name: QueryDeletedOption
            values:
            - value: excludeDeleted
              description: Include only non-deleted builds.
            - value: includeDeleted
              description: Include deleted and non-deleted builds.
            - value: onlyDeleted
              description: Include only deleted builds.
        x-ms-enum:
          name: QueryDeletedOption
          values:
          - value: excludeDeleted
            description: Include only non-deleted builds.
          - value: includeDeleted
            description: Include deleted and non-deleted builds.
          - value: onlyDeleted
            description: Include only deleted builds.
      - name: queryOrder
        in: query
        description: The order in which builds should be returned.
        schema:
          type: string
          enum:
          - finishTimeAscending
          - finishTimeDescending
          - queueTimeDescending
          - queueTimeAscending
          - startTimeDescending
          - startTimeAscending
          x-ms-enum:
            name: BuildQueryOrder
            values:
            - value: finishTimeAscending
              description: Order by finish time ascending.
            - value: finishTimeDescending
              description: Order by finish time descending.
            - value: queueTimeDescending
              description: Order by queue time descending.
            - value: queueTimeAscending
              description: Order by queue time ascending.
            - value: startTimeDescending
              description: Order by start time descending.
            - value: startTimeAscending
              description: Order by start time ascending.
        x-ms-enum:
          name: BuildQueryOrder
          values:
          - value: finishTimeAscending
            description: Order by finish time ascending.
          - value: finishTimeDescending
            description: Order by finish time descending.
          - value: queueTimeDescending
            description: Order by queue time descending.
          - value: queueTimeAscending
            description: Order by queue time ascending.
          - value: startTimeDescending
            description: Order by start time descending.
          - value: startTimeAscending
            description: Order by start time ascending.
      - name: branchName
        in: query
        description: If specified, filters to builds that built branches that built
          this branch.
        schema:
          type: string
      - name: buildIds
        in: query
        description: A comma-delimited list that specifies the IDs of builds to retrieve.
        schema:
          type: string
          format: array (int32)
      - name: repositoryId
        in: query
        description: If specified, filters to builds that built from this repository.
        schema:
          type: string
      - name: repositoryType
        in: query
        description: If specified, filters to builds that built from repositories
          of this type.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Build'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: GetBuilds
    post:
      tags:
      - Builds
      description: Queues a build
      operationId: Builds_Queue
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: ignoreWarnings
        in: query
        schema:
          type: boolean
      - name: checkInTicket
        in: query
        schema:
          type: string
      - name: sourceBuildId
        in: query
        schema:
          type: integer
          format: int32
      - name: definitionId
        in: query
        description: Optional definition id to queue a build without a body. Ignored
          if there's a valid body
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: QueueBuild
      x-codegen-request-body-name: body
    patch:
      tags:
      - Builds
      description: Updates multiple builds.
      operationId: Builds_Update Builds
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The builds to update.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Build'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Build'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: UpdateBuilds
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/builds/{buildId}:
    get:
      tags:
      - Builds
      description: Gets a build
      operationId: Builds_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyFilters
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: GetBuild
    delete:
      tags:
      - Builds
      description: Deletes a build.
      operationId: Builds_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: DeleteBuild
    patch:
      tags:
      - Builds
      description: Updates a build.
      operationId: Builds_Update Build
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: retry
        in: query
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The build.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: UpdateBuild
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/builds/{buildId}/{timelineId}/{recordId}/attachments/{type}/{name}:
    get:
      tags:
      - Attachments
      description: Gets a specific attachment.
      operationId: Attachments_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: timelineId
        in: path
        description: The ID of the timeline.
        required: true
        schema:
          type: string
          format: uuid
      - name: recordId
        in: path
        description: The ID of the timeline record.
        required: true
        schema:
          type: string
          format: uuid
      - name: type
        in: path
        description: The type of the attachment.
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: The name of the attachment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetAttachment
  /{collection}/{project}/_apis/build/builds/{buildId}/artifacts:
    get:
      tags:
      - Artifacts
      description: Gets all artifacts for a build.
      operationId: Artifacts_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildArtifact'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: GetArtifacts
    post:
      tags:
      - Artifacts
      description: Associates an artifact with a build.
      operationId: Artifacts_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The artifact.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildArtifact'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildArtifact'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: CreateArtifact
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/builds/{buildId}/attachments/{type}:
    get:
      tags:
      - Attachments
      description: Gets the list of attachments of a specific type that are associated
        with a build.
      operationId: Attachments_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: path
        description: The type of attachment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetAttachments
  /{collection}/{project}/_apis/build/builds/{buildId}/changes:
    get:
      tags:
      - Builds
      description: Gets the changes associated with a build
      operationId: Builds_Get Build Changes
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        schema:
          type: string
      - name: $top
        in: query
        description: The maximum number of changes to return
        schema:
          type: integer
          format: int32
      - name: includeSourceChange
        in: query
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Change'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: changes
      x-ms-vss-method: GetBuildChanges
  /{collection}/{project}/_apis/build/builds/{buildId}/leases:
    get:
      tags:
      - Builds
      description: Gets all retention leases that apply to a specific build.
      operationId: Builds_Get Retention Leases For Build
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetentionLease'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: buildleases
      x-ms-vss-method: GetRetentionLeasesForBuild
  /{collection}/{project}/_apis/build/builds/{buildId}/logs:
    get:
      tags:
      - Builds
      description: Gets the logs for a build.
      operationId: Builds_Get Build Logs
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/zip:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildLog'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildLog'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: logs
      x-ms-vss-method: GetBuildLogs
  /{collection}/{project}/_apis/build/builds/{buildId}/logs/{logId}:
    get:
      tags:
      - Builds
      description: Gets an individual log file for a build.
      operationId: Builds_Get Build Log
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: logId
        in: path
        description: The ID of the log file.
        required: true
        schema:
          type: integer
          format: int32
      - name: startLine
        in: query
        description: The start line.
        schema:
          type: integer
          format: int64
      - name: endLine
        in: query
        description: The end line.
        schema:
          type: integer
          format: int64
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: Stream
            application/json:
              schema:
                type: string
                format: Stream
            text/plain:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: logs
      x-ms-vss-method: GetBuildLog
  /{collection}/{project}/_apis/build/builds/{buildId}/properties:
    get:
      tags:
      - Properties
      description: Gets properties for a build.
      operationId: Properties_Get Build Properties
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: filter
        in: query
        description: A comma-delimited list of properties. If specified, filters to
          these specific properties.
        schema:
          type: string
          format: array (string)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: properties
      x-ms-vss-method: GetBuildProperties
    patch:
      tags:
      - Properties
      description: Updates properties for a build.
      operationId: Properties_Update Build Properties
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: A json-patch document describing the properties to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: properties
      x-ms-vss-method: UpdateBuildProperties
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/builds/{buildId}/report:
    get:
      tags:
      - Report
      description: Gets a build report.
      operationId: Report_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/BuildReportMetadata'
            application/json:
              schema:
                $ref: '#/components/schemas/BuildReportMetadata'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: report
      x-ms-vss-method: GetBuildReport
  /{collection}/{project}/_apis/build/builds/{buildId}/stages/{stageRefName}:
    patch:
      tags:
      - Stages
      description: Update a build stage
      operationId: Stages_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: stageRefName
        in: path
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStageParameters'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: stages
      x-ms-vss-method: UpdateStage
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/builds/{buildId}/tags:
    get:
      tags:
      - Tags
      description: Gets the tags for a build.
      operationId: Tags_Get Build Tags
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: GetBuildTags
    post:
      tags:
      - Tags
      description: Adds tags to a build.
      operationId: Tags_Add Build Tags
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The tags to add.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: AddBuildTags
      x-codegen-request-body-name: body
    patch:
      tags:
      - Tags
      description: Adds/Removes tags from a build.
      operationId: Tags_Update Build Tags
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The tags to add/remove.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: UpdateBuildTags
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/builds/{buildId}/tags/{tag}:
    put:
      tags:
      - Tags
      description: Adds a tag to a build.
      operationId: Tags_Add Build Tag
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: tag
        in: path
        description: The tag to add.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: AddBuildTag
    delete:
      tags:
      - Tags
      description: 'Removes a tag from a build. NOTE: This API will not work for tags
        with special characters. To remove tags with special characters, use the PATCH
        method instead (in 6.0+)'
      operationId: Tags_Delete Build Tag
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: tag
        in: path
        description: The tag to remove.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: DeleteBuildTag
  /{collection}/{project}/_apis/build/builds/{buildId}/timeline/{timelineId}:
    get:
      tags:
      - Timeline
      description: Gets details for a build
      operationId: Timeline_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: timelineId
        in: path
        required: true
        schema:
          type: string
          format: uuid
          x-ms-required: false
        x-ms-required: false
      - name: changeId
        in: query
        schema:
          type: integer
          format: int32
      - name: planId
        in: query
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: timeline
      x-ms-vss-method: GetBuildTimeline
  /{collection}/{project}/_apis/build/builds/{buildId}/workitems:
    get:
      tags:
      - Builds
      description: Gets the work items associated with a build. Only work items in
        the same project are returned.
      operationId: Builds_Get Build Work Items Refs
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: The maximum number of work items to return.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceRef'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: workitems
      x-ms-vss-method: GetBuildWorkItemsRefs
    post:
      tags:
      - Builds
      description: Gets the work items associated with a build, filtered to specific
        commits.
      operationId: Builds_Get Build Work Items Refs From Commits
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: buildId
        in: path
        description: The ID of the build.
        required: true
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: The maximum number of work items to return, or the number of
          commits to consider if no commit IDs are specified.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: A comma-delimited list of commit IDs.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceRef'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: workitems
      x-ms-vss-method: GetBuildWorkItemsRefsFromCommits
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/changes:
    get:
      tags:
      - Builds
      description: Gets the changes made to the repository between two given builds.
      operationId: Builds_Get Changes Between Builds
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: fromBuildId
        in: query
        description: The ID of the first build.
        schema:
          type: integer
          format: int32
      - name: toBuildId
        in: query
        description: The ID of the last build.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: The maximum number of changes to return.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Change'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: changes
      x-ms-vss-method: GetChangesBetweenBuilds
  /{collection}/{project}/_apis/build/definitions:
    get:
      tags:
      - Definitions
      description: Gets a list of definitions.
      operationId: Definitions_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: If specified, filters to definitions whose names match this pattern.
        schema:
          type: string
      - name: repositoryId
        in: query
        description: A repository ID. If specified, filters to definitions that use
          this repository.
        schema:
          type: string
      - name: repositoryType
        in: query
        description: If specified, filters to definitions that have a repository of
          this type.
        schema:
          type: string
      - name: queryOrder
        in: query
        description: Indicates the order in which definitions should be returned.
        schema:
          type: string
          enum:
          - none
          - lastModifiedAscending
          - lastModifiedDescending
          - definitionNameAscending
          - definitionNameDescending
          x-ms-enum:
            name: DefinitionQueryOrder
            values:
            - value: none
              description: No order
            - value: lastModifiedAscending
              description: Order by created on/last modified time ascending.
            - value: lastModifiedDescending
              description: Order by created on/last modified time descending.
            - value: definitionNameAscending
              description: Order by definition name ascending.
            - value: definitionNameDescending
              description: Order by definition name descending.
        x-ms-enum:
          name: DefinitionQueryOrder
          values:
          - value: none
            description: No order
          - value: lastModifiedAscending
            description: Order by created on/last modified time ascending.
          - value: lastModifiedDescending
            description: Order by created on/last modified time descending.
          - value: definitionNameAscending
            description: Order by definition name ascending.
          - value: definitionNameDescending
            description: Order by definition name descending.
      - name: $top
        in: query
        description: The maximum number of definitions to return.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: A continuation token, returned by a previous call to this method,
          that can be used to return the next set of definitions.
        schema:
          type: string
      - name: minMetricsTime
        in: query
        description: If specified, indicates the date from which metrics should be
          included.
        schema:
          type: string
          format: date-time
      - name: definitionIds
        in: query
        description: A comma-delimited list that specifies the IDs of definitions
          to retrieve.
        schema:
          type: string
          format: array (int32)
      - name: path
        in: query
        description: If specified, filters to definitions under this folder.
        schema:
          type: string
      - name: builtAfter
        in: query
        description: If specified, filters to definitions that have builds after this
          date.
        schema:
          type: string
          format: date-time
      - name: notBuiltAfter
        in: query
        description: If specified, filters to definitions that do not have builds
          after this date.
        schema:
          type: string
          format: date-time
      - name: includeAllProperties
        in: query
        description: Indicates whether the full definitions should be returned. By
          default, shallow representations of the definitions are returned.
        schema:
          type: boolean
      - name: includeLatestBuilds
        in: query
        description: Indicates whether to return the latest and latest completed builds
          for this definition.
        schema:
          type: boolean
      - name: taskIdFilter
        in: query
        description: If specified, filters to definitions that use the specified task.
        schema:
          type: string
          format: uuid
      - name: processType
        in: query
        description: If specified, filters to definitions with the given process type.
        schema:
          type: integer
          format: int32
      - name: yamlFilename
        in: query
        description: If specified, filters to YAML definitions that match the given
          filename. To use this filter includeAllProperties should be set to true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildDefinitionReference'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetDefinitions
    post:
      tags:
      - Definitions
      description: Creates a new definition.
      operationId: Definitions_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionToCloneId
        in: query
        schema:
          type: integer
          format: int32
      - name: definitionToCloneRevision
        in: query
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDefinition'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: CreateDefinition
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/definitions/{definitionId}:
    get:
      tags:
      - Definitions
      description: Gets a definition, optionally at a specific revision.
      operationId: Definitions_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: revision
        in: query
        description: The revision number to retrieve. If this is not specified, the
          latest version will be returned.
        schema:
          type: integer
          format: int32
      - name: minMetricsTime
        in: query
        description: If specified, indicates the date from which metrics should be
          included.
        schema:
          type: string
          format: date-time
      - name: propertyFilters
        in: query
        description: A comma-delimited list of properties to include in the results.
        schema:
          type: string
          format: array (string)
      - name: includeLatestBuilds
        in: query
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetDefinition
    put:
      tags:
      - Definitions
      description: Updates an existing build definition.  In order for this operation
        to succeed, the value of the "Revision" property of the request body must
        match the existing build definition's. It is recommended that you obtain the
        existing build definition by using GET, modify the build definition as necessary,
        and then submit the modified definition with PUT.
      operationId: Definitions_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: secretsSourceDefinitionId
        in: query
        schema:
          type: integer
          format: int32
      - name: secretsSourceDefinitionRevision
        in: query
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The new version of the definition. Its "Revision" property must
          match the existing definition for the update to be accepted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDefinition'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: UpdateDefinition
      x-codegen-request-body-name: body
    delete:
      tags:
      - Definitions
      description: Deletes a definition and all associated builds.
      operationId: Definitions_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: DeleteDefinition
    patch:
      tags:
      - Definitions
      description: Restores a deleted definition
      operationId: Definitions_Restore Definition
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The identifier of the definition to restore.
        required: true
        schema:
          type: integer
          format: int32
      - name: deleted
        in: query
        description: When false, restores a deleted definition.
        required: true
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: RestoreDefinition
  /{collection}/{project}/_apis/build/definitions/{definitionId}/metrics:
    get:
      tags:
      - Metrics
      description: Gets build metrics for a definition.
      operationId: Metrics_Get Definition Metrics
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: minMetricsTime
        in: query
        description: The date from which to calculate metrics.
        schema:
          type: string
          format: date-time
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildMetric'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: metrics
      x-ms-vss-method: GetDefinitionMetrics
      x-ms-preview: true
  /{collection}/{project}/_apis/build/definitions/{definitionId}/properties:
    get:
      tags:
      - Properties
      description: Gets properties for a definition.
      operationId: Properties_Get Definition Properties
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: filter
        in: query
        description: A comma-delimited list of properties. If specified, filters to
          these specific properties.
        schema:
          type: string
          format: array (string)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: properties
      x-ms-vss-method: GetDefinitionProperties
    patch:
      tags:
      - Properties
      description: Updates properties for a definition.
      operationId: Properties_Update Definition Properties
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: A json-patch document describing the properties to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: properties
      x-ms-vss-method: UpdateDefinitionProperties
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/definitions/{definitionId}/resources:
    get:
      tags:
      - Resources
      operationId: Resources_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: resources
      x-ms-vss-method: GetDefinitionResources
      x-ms-preview: true
    patch:
      tags:
      - Resources
      operationId: Resources_Authorize Definition Resources
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DefinitionResourceReference'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: resources
      x-ms-vss-method: AuthorizeDefinitionResources
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/definitions/{definitionId}/revisions:
    get:
      tags:
      - Definitions
      description: Gets all revisions of a definition.
      operationId: Definitions_Get Definition Revisions
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildDefinitionRevision'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: revisions
      x-ms-vss-method: GetDefinitionRevisions
  /{collection}/{project}/_apis/build/definitions/{DefinitionId}/tags:
    get:
      tags:
      - Tags
      description: Gets the tags for a definition.
      operationId: Tags_Get Definition Tags
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: revision
        in: query
        description: The definition revision number. If not specified, uses the latest
          revision of the definition.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: GetDefinitionTags
    post:
      tags:
      - Tags
      description: Adds multiple tags to a definition.
      operationId: Tags_Add Definition Tags
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The tags to add.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: AddDefinitionTags
      x-codegen-request-body-name: body
    patch:
      tags:
      - Tags
      description: Adds/Removes tags from a definition.
      operationId: Tags_Update Definition Tags
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The tags to add/remove.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagParameters'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: UpdateDefinitionTags
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/definitions/{DefinitionId}/tags/{tag}:
    put:
      tags:
      - Tags
      description: Adds a tag to a definition
      operationId: Tags_Add Definition Tag
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: tag
        in: path
        description: The tag to add.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: AddDefinitionTag
    delete:
      tags:
      - Tags
      description: 'Removes a tag from a definition. NOTE: This API will not work
        for tags with special characters. To remove tags with special characters,
        use the PATCH method instead (in 6.0+)'
      operationId: Tags_Delete Definition Tag
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: tag
        in: path
        description: The tag to remove.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: DeleteDefinitionTag
  /{collection}/{project}/_apis/build/definitions/{definitionId}/yaml:
    get:
      tags:
      - Yaml
      description: Converts a definition to YAML, optionally at a specific revision.
      operationId: Yaml_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: The ID of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: revision
        in: query
        description: The revision number to retrieve. If this is not specified, the
          latest version will be returned.
        schema:
          type: integer
          format: int32
      - name: minMetricsTime
        in: query
        description: If specified, indicates the date from which metrics should be
          included.
        schema:
          type: string
          format: date-time
      - name: propertyFilters
        in: query
        description: A comma-delimited list of properties to include in the results.
        schema:
          type: string
          format: array (string)
      - name: includeLatestBuilds
        in: query
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YamlBuild'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: yaml
      x-ms-vss-method: GetDefinitionYaml
  /{collection}/{project}/_apis/build/definitions/templates:
    get:
      tags:
      - Templates
      description: Gets all definition templates.
      operationId: Templates_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildDefinitionTemplate'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: GetTemplates
  /{collection}/{project}/_apis/build/definitions/templates/{templateId}:
    get:
      tags:
      - Templates
      description: Gets a specific build definition template.
      operationId: Templates_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the requested template.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinitionTemplate'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: GetTemplate
    put:
      tags:
      - Templates
      description: Updates an existing build definition template.
      operationId: Templates_Save Template
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The new version of the template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDefinitionTemplate'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinitionTemplate'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: SaveTemplate
      x-codegen-request-body-name: body
    delete:
      tags:
      - Templates
      description: Deletes a build definition template.
      operationId: Templates_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: The ID of the template.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: DeleteTemplate
  /{collection}/{project}/_apis/build/folders:
    put:
      tags:
      - Folders
      description: Creates a new folder.
      operationId: Folders_Create
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The full path of the folder.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The folder.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: 7.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: CreateFolder
      x-ms-preview: true
      x-codegen-request-body-name: body
    post:
      tags:
      - Folders
      description: Updates an existing folder at given  existing path
      operationId: Folders_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The full path to the folder.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The new version of the folder.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: 7.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: UpdateFolder
      x-ms-preview: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - Folders
      description: Deletes a definition folder. Definitions and their corresponding
        builds will also be deleted.
      operationId: Folders_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The full path to the folder.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: 7.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: DeleteFolder
      x-ms-preview: true
  /{collection}/{project}/_apis/build/folders/{path}:
    get:
      tags:
      - Folders
      description: Gets a list of build definition folders.
      operationId: Folders_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: path
        description: The path to start with.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: queryOrder
        in: query
        description: The order in which folders should be returned.
        schema:
          type: string
          enum:
          - none
          - folderAscending
          - folderDescending
          x-ms-enum:
            name: FolderQueryOrder
            values:
            - value: none
              description: No order
            - value: folderAscending
              description: Order by folder name and path ascending.
            - value: folderDescending
              description: Order by folder name and path descending.
        x-ms-enum:
          name: FolderQueryOrder
          values:
          - value: none
            description: No order
          - value: folderAscending
            description: Order by folder name and path ascending.
          - value: folderDescending
            description: Order by folder name and path descending.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folder'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: 7.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: GetFolders
      x-ms-preview: true
  /{collection}/{project}/_apis/build/generalsettings:
    get:
      tags:
      - General Settings
      description: Gets pipeline general settings.
      operationId: General Settings_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGeneralSettings'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: generalSettings
      x-ms-vss-method: GetBuildGeneralSettings
    patch:
      tags:
      - General Settings
      description: Updates pipeline general settings.
      operationId: General Settings_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineGeneralSettings'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGeneralSettings'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: generalSettings
      x-ms-vss-method: UpdateBuildGeneralSettings
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/latest/{definition}:
    get:
      tags:
      - Latest
      description: Gets the latest build for a definition, optionally scoped to a
        specific branch.
      operationId: Latest_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definition
        in: path
        description: definition name with optional leading folder path, or the definition
          id
        required: true
        schema:
          type: string
      - name: branchName
        in: query
        description: optional parameter that indicates the specific branch to use.
          If not specified, the default branch is used.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: latest
      x-ms-vss-method: GetLatestBuild
      x-ms-preview: true
  /{collection}/{project}/_apis/build/metrics/{metricAggregationType}:
    get:
      tags:
      - Metrics
      description: Gets build metrics for a project.
      operationId: Metrics_Get Project Metrics
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: metricAggregationType
        in: path
        description: The aggregation type to use (hourly, daily).
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: minMetricsTime
        in: query
        description: The date from which to calculate metrics.
        schema:
          type: string
          format: date-time
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildMetric'
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: metrics
      x-ms-vss-method: GetProjectMetrics
      x-ms-preview: true
  /{collection}/{project}/_apis/build/options:
    get:
      tags:
      - Options
      description: Gets all build definition options supported by the system.
      operationId: Options_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildOptionDefinition'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: options
      x-ms-vss-method: GetBuildOptionDefinitions
  /{collection}/{project}/_apis/build/repos/{repoType}/badge:
    get:
      tags:
      - Badge
      description: Gets a badge that indicates the status of the most recent build
        for the specified branch.
      operationId: Badge_Get Build Badge Data
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: repoType
        in: path
        description: The repository type.
        required: true
        schema:
          type: string
      - name: repoId
        in: query
        description: The repository ID.
        schema:
          type: string
      - name: branchName
        in: query
        description: The branch name.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: 7.0-preview.2
      x-ms-vss-resource: buildbadge
      x-ms-vss-method: GetBuildBadge
      x-ms-preview: true
  /{collection}/{project}/_apis/build/retention:
    get:
      tags:
      - Retention
      description: Gets the project's retention settings.
      operationId: Retention_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRetentionSetting'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: retention
      x-ms-vss-method: GetRetentionSettings
    patch:
      tags:
      - Retention
      description: Updates the project's retention settings.
      operationId: Retention_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRetentionSettingModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRetentionSetting'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: retention
      x-ms-vss-method: UpdateRetentionSettings
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/retention/leases:
    get:
      tags:
      - Leases
      description: Returns any leases matching the specified MinimalRetentionLeases
      operationId: Leases_Get Retention Leases By Minimal Retention Leases
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: leasesToFetch
        in: query
        description: List of JSON-serialized MinimalRetentionLeases separated by '|'
        required: true
        schema:
          type: string
          format: array (MinimalRetentionLease)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetentionLease'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLeasesByMinimalRetentionLeases
    post:
      tags:
      - Leases
      description: Adds new leases for pipeline runs.
      operationId: Leases_Add
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NewRetentionLease'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetentionLease'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: leases
      x-ms-vss-method: AddRetentionLeases
      x-codegen-request-body-name: body
    delete:
      tags:
      - Leases
      description: Removes specific retention leases.
      operationId: Leases_Delete
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: ids
        in: query
        required: true
        schema:
          type: string
          format: array (int32)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: leases
      x-ms-vss-method: DeleteRetentionLeasesById
  /{collection}/{project}/_apis/build/retention/leases/{leaseId}:
    get:
      tags:
      - Leases
      description: Returns the details of the retention lease given a lease id.
      operationId: Leases_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: leaseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionLease'
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLease
    patch:
      tags:
      - Leases
      description: Updates the duration or pipeline protection status of a retention
        lease.
      operationId: Leases_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: leaseId
        in: path
        description: The ID of the lease to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The new data for the retention lease.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionLeaseUpdate'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionLease'
      security:
      - oauth2:
        - vso.build_execute
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: leases
      x-ms-vss-method: UpdateRetentionLease
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/settings:
    get:
      tags:
      - Settings
      description: Gets the build settings.
      operationId: Settings_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildSettings'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: settings
      x-ms-vss-method: GetBuildSettings
    patch:
      tags:
      - Settings
      description: Updates the build settings.
      operationId: Settings_Update
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The new settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildSettings'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildSettings'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: settings
      x-ms-vss-method: UpdateBuildSettings
      x-codegen-request-body-name: body
  /{collection}/{project}/_apis/build/status/{definition}:
    get:
      tags:
      - Status
      description: <p>Gets the build status for a definition, optionally scoped to
        a specific branch, stage, job, and configuration.</p> <p>If there are more
        than one, then it is required to pass in a stageName value when specifying
        a jobName, and the same rule then applies for both if passing a configuration
        parameter.</p>
      operationId: Status_Get
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definition
        in: path
        description: Either the definition name with optional leading folder path,
          or the definition id.
        required: true
        schema:
          type: string
      - name: branchName
        in: query
        description: Only consider the most recent build for this branch. If not specified,
          the default branch is used.
        schema:
          type: string
      - name: stageName
        in: query
        description: Use this stage within the pipeline to render the status.
        schema:
          type: string
      - name: jobName
        in: query
        description: Use this job within a stage of the pipeline to render the status.
        schema:
          type: string
      - name: configuration
        in: query
        description: Use this job configuration to render the status
        schema:
          type: string
      - name: label
        in: query
        description: Replaces the default text on the left side of the badge.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: status
      x-ms-vss-method: GetStatusBadge
      x-ms-preview: true
  /{collection}/{project}/_apis/build/tags:
    get:
      tags:
      - Tags
      description: Gets a list of all build tags in the project.
      operationId: Tags_Get Tags
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - oauth2:
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: GetTags
  /{collection}/{project}/_apis/build/tags/{tag}:
    delete:
      tags:
      - Tags
      description: Removes a tag from builds, definitions, and from the tag store
      operationId: Tags_Delete Tag
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: tag
        in: path
        description: The tag to remove.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: DeleteTag
  /{collection}/{project}/_apis/build/workitems:
    get:
      tags:
      - Builds
      description: Gets all the work items between two builds.
      operationId: Builds_Get Work Items Between Builds
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: fromBuildId
        in: query
        description: The ID of the first build.
        required: true
        schema:
          type: integer
          format: int32
      - name: toBuildId
        in: query
        description: The ID of the last build.
        required: true
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: The maximum number of work items to return.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceRef'
      security:
      - oauth2:
        - vso.work
        - vso.build
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: workitems
      x-ms-vss-method: GetWorkItemsBetweenBuilds
  /{collection}/{project}/_apis/sourceproviders:
    get:
      tags:
      - Source Providers
      description: Get a list of source providers and their capabilities.
      operationId: Source Providers_List
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SourceProviderAttributes'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: sourceProviders
      x-ms-vss-method: ListSourceProviders
  /{collection}/{project}/_apis/sourceProviders/{providerName}/branches:
    get:
      tags:
      - Source Providers
      description: Gets a list of branches for the given source code repository.
      operationId: Source Providers_List Branches
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: providerName
        in: path
        description: The name of the source provider.
        required: true
        schema:
          type: string
      - name: serviceEndpointId
        in: query
        description: If specified, the ID of the service endpoint to query. Can only
          be omitted for providers that do not use service endpoints, e.g. TFVC or
          TFGit.
        schema:
          type: string
          format: uuid
      - name: repository
        in: query
        description: The vendor-specific identifier or the name of the repository
          to get branches. Can only be omitted for providers that do not support multiple
          repositories.
        schema:
          type: string
      - name: branchName
        in: query
        description: If supplied, the name of the branch to check for specifically.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: branches
      x-ms-vss-method: ListBranches
  /{collection}/{project}/_apis/sourceProviders/{providerName}/filecontents:
    get:
      tags:
      - Source Providers
      description: Gets the contents of a file in the given source code repository.
      operationId: Source Providers_Get File Contents
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: providerName
        in: path
        description: The name of the source provider.
        required: true
        schema:
          type: string
      - name: serviceEndpointId
        in: query
        description: If specified, the ID of the service endpoint to query. Can only
          be omitted for providers that do not use service endpoints, e.g. TFVC or
          TFGit.
        schema:
          type: string
          format: uuid
      - name: repository
        in: query
        description: If specified, the vendor-specific identifier or the name of the
          repository to get branches. Can only be omitted for providers that do not
          support multiple repositories.
        schema:
          type: string
      - name: commitOrBranch
        in: query
        description: The identifier of the commit or branch from which a file's contents
          are retrieved.
        schema:
          type: string
      - name: path
        in: query
        description: The path to the file to retrieve, relative to the root of the
          repository.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: Stream
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: fileContents
      x-ms-vss-method: GetFileContents
  /{collection}/{project}/_apis/sourceProviders/{providerName}/pathcontents:
    get:
      tags:
      - Source Providers
      description: Gets the contents of a directory in the given source code repository.
      operationId: Source Providers_Get Path Contents
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: providerName
        in: path
        description: The name of the source provider.
        required: true
        schema:
          type: string
      - name: serviceEndpointId
        in: query
        description: If specified, the ID of the service endpoint to query. Can only
          be omitted for providers that do not use service endpoints, e.g. TFVC or
          TFGit.
        schema:
          type: string
          format: uuid
      - name: repository
        in: query
        description: If specified, the vendor-specific identifier or the name of the
          repository to get branches. Can only be omitted for providers that do not
          support multiple repositories.
        schema:
          type: string
      - name: commitOrBranch
        in: query
        description: The identifier of the commit or branch from which a file's contents
          are retrieved.
        schema:
          type: string
      - name: path
        in: query
        description: The path contents to list, relative to the root of the repository.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SourceRepositoryItem'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pathContents
      x-ms-vss-method: GetPathContents
  /{collection}/{project}/_apis/sourceProviders/{providerName}/pullrequests/{pullRequestId}:
    get:
      tags:
      - Source Providers
      description: Gets a pull request object from source provider.
      operationId: Source Providers_Get Pull Request
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: providerName
        in: path
        description: The name of the source provider.
        required: true
        schema:
          type: string
      - name: pullRequestId
        in: path
        description: Vendor-specific id of the pull request.
        required: true
        schema:
          type: string
      - name: repositoryId
        in: query
        description: Vendor-specific identifier or the name of the repository that
          contains the pull request.
        schema:
          type: string
      - name: serviceEndpointId
        in: query
        description: If specified, the ID of the service endpoint to query. Can only
          be omitted for providers that do not use service endpoints, e.g. TFVC or
          TFGit.
        schema:
          type: string
          format: uuid
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: GetPullRequest
  /{collection}/{project}/_apis/sourceProviders/{providerName}/repositories:
    get:
      tags:
      - Source Providers
      description: Gets a list of source code repositories.
      operationId: Source Providers_List Repositories
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: providerName
        in: path
        description: The name of the source provider.
        required: true
        schema:
          type: string
      - name: serviceEndpointId
        in: query
        description: If specified, the ID of the service endpoint to query. Can only
          be omitted for providers that do not use service endpoints, e.g. TFVC or
          TFGit.
        schema:
          type: string
          format: uuid
      - name: repository
        in: query
        description: If specified, the vendor-specific identifier or the name of a
          single repository to get.
        schema:
          type: string
      - name: resultSet
        in: query
        description: '''top'' for the repositories most relevant for the endpoint.
          If not set, all repositories are returned. Ignored if ''repository'' is
          set.'
        schema:
          type: string
          enum:
          - all
          - top
          x-ms-enum:
            name: ResultSet
            values:
            - value: all
              description: Include all repositories
            - value: top
              description: Include most relevant repositories for user
        x-ms-enum:
          name: ResultSet
          values:
          - value: all
            description: Include all repositories
          - value: top
            description: Include most relevant repositories for user
      - name: pageResults
        in: query
        description: If set to true, this will limit the set of results and will return
          a continuation token to continue the query.
        schema:
          type: boolean
      - name: continuationToken
        in: query
        description: When paging results, this is a continuation token, returned by
          a previous call to this method, that can be used to return the next set
          of repositories.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRepositories'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: repositories
      x-ms-vss-method: ListRepositories
  /{collection}/{project}/_apis/sourceProviders/{providerName}/webhooks:
    get:
      tags:
      - Source Providers
      description: Gets a list of webhooks installed in the given source code repository.
      operationId: Source Providers_List Webhooks
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: providerName
        in: path
        description: The name of the source provider.
        required: true
        schema:
          type: string
      - name: serviceEndpointId
        in: query
        description: If specified, the ID of the service endpoint to query. Can only
          be omitted for providers that do not use service endpoints, e.g. TFVC or
          TFGit.
        schema:
          type: string
          format: uuid
      - name: repository
        in: query
        description: If specified, the vendor-specific identifier or the name of the
          repository to get webhooks. Can only be omitted for providers that do not
          support multiple repositories.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryWebhook'
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: webhooks
      x-ms-vss-method: ListWebhooks
    post:
      tags:
      - Source Providers
      description: Recreates the webhooks for the specified triggers in the given
        source code repository.
      operationId: Source Providers_Restore Webhooks
      parameters:
      - name: collection
        in: path
        description: The name of the Azure DevOps collection.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: providerName
        in: path
        description: The name of the source provider.
        required: true
        schema:
          type: string
      - name: serviceEndpointId
        in: query
        description: If specified, the ID of the service endpoint to query. Can only
          be omitted for providers that do not use service endpoints, e.g. TFVC or
          TFGit.
        schema:
          type: string
          format: uuid
      - name: repository
        in: query
        description: If specified, the vendor-specific identifier or the name of the
          repository to get webhooks. Can only be omitted for providers that do not
          support multiple repositories.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The types of triggers to restore webhooks for.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: DefinitionTriggerType
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: webhooks
      x-ms-vss-method: RestoreWebhooks
      x-codegen-request-body-name: body
components:
  schemas:
    AgentPoolQueue:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          description: The ID of the queue.
          format: int32
        name:
          type: string
          description: The name of the queue.
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        url:
          type: string
          description: The full http link to the resource.
      description: Represents a queue for running builds.
    AgentPoolQueueReference:
      description: Represents a reference to an agent queue.
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
    AgentPoolQueueTarget:
      description: Describes how a phase should run against an agent queue.
      allOf:
      - $ref: '#/components/schemas/PhaseTarget'
    AgentSpecification:
      type: object
      properties:
        identifier:
          type: string
          description: Agent specification unique identifier.
      description: Specification of the agent defined by the pool provider.
    AgentTargetExecutionOptions:
      type: object
      properties:
        type:
          type: integer
          description: Indicates the type of execution options.
          format: int32
      description: Additional options for running phases against an agent queue.
    AggregatedResultsAnalysis:
      type: object
      properties:
        duration:
          type: string
          format: TimeSpan
        notReportedResultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        previousContext:
          $ref: '#/components/schemas/TestResultsContext'
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        resultsDifference:
          $ref: '#/components/schemas/AggregatedResultsDifference'
        runSummaryByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByOutcome'
        runSummaryByState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByState'
        totalTests:
          type: integer
          format: int32
      description: ""
    AggregatedResultsByOutcome:
      type: object
      properties:
        count:
          type: integer
          format: int32
        duration:
          type: string
          format: TimeSpan
        groupByField:
          type: string
        groupByValue:
          type: object
          properties: {}
        outcome:
          type: string
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: Test has not been completed, or the test type does not
                report pass/failure.
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: Test was executed, but there were issues. Issues may involve
                exceptions or failed assertions.
            - value: inconclusive
              description: Test has completed, but we can't say if it passed or failed.
                May be used for aborted tests...
            - value: timeout
              description: The test timed out
            - value: aborted
              description: Test was aborted. This was not caused by a user gesture,
                but rather by a framework decision.
            - value: blocked
              description: Test had it chance for been executed but was not, as ITestElement.IsRunnable
                == false.
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
        rerunResultCount:
          type: integer
          format: int32
      description: ""
    AggregatedResultsDifference:
      type: object
      properties:
        increaseInDuration:
          type: string
          format: TimeSpan
        increaseInFailures:
          type: integer
          format: int32
        increaseInNonImpactedTests:
          type: integer
          format: int32
        increaseInOtherTests:
          type: integer
          format: int32
        increaseInPassedTests:
          type: integer
          format: int32
        increaseInTotalTests:
          type: integer
          format: int32
      description: ""
    AggregatedRunsByOutcome:
      type: object
      properties:
        outcome:
          type: string
          enum:
          - passed
          - failed
          - notImpacted
          - others
          x-ms-enum:
            name: TestRunOutcome
            values:
            - value: passed
              description: Run with zero failed tests and has at least one impacted
                test
            - value: failed
              description: Run with at-least one failed test.
            - value: notImpacted
              description: Run with no impacted tests.
            - value: others
              description: Runs with All tests in other category.
        runsCount:
          type: integer
          format: int32
      description: ""
    AggregatedRunsByState:
      type: object
      properties:
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        runsCount:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - unspecified
          - notStarted
          - inProgress
          - completed
          - aborted
          - waiting
          - needsInvestigation
          x-ms-enum:
            name: TestRunState
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: notStarted
              description: The run is still being created.  No tests have started
                yet.
            - value: inProgress
              description: Tests are running.
            - value: completed
              description: All tests have completed or been skipped.
            - value: aborted
              description: Run is stopped and remaining tests have been aborted
            - value: waiting
              description: Run is currently initializing This is a legacy state and
                should not be used any more
            - value: needsInvestigation
              description: Run requires investigation because of a test point failure
                This is a legacy state and should not be used any more
      description: ""
    ArtifactResource:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        data:
          type: string
          description: Type-specific data about the artifact.
        downloadUrl:
          type: string
          description: A link to download the resource.
        properties:
          type: object
          additionalProperties:
            type: string
          description: Type-specific properties of the artifact.
        type:
          type: string
          description: 'The type of the resource: File container, version control
            folder, UNC path, etc.'
        url:
          type: string
          description: The full http link to the resource.
      description: ""
    AssociatedWorkItem:
      type: object
      properties:
        assignedTo:
          type: string
        id:
          type: integer
          description: Id of associated the work item.
          format: int32
        state:
          type: string
        title:
          type: string
        url:
          type: string
          description: REST Url of the work item.
        webUrl:
          type: string
        workItemType:
          type: string
      description: ""
    Attachment:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        name:
          type: string
          description: The name of the attachment.
      description: Represents an attachment to a build.
    AuthorizationHeader:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: ""
    Build:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        agentSpecification:
          $ref: '#/components/schemas/AgentSpecification'
        buildNumber:
          type: string
          description: The build number/name of the build.
        buildNumberRevision:
          type: integer
          description: The build number revision.
          format: int32
        controller:
          $ref: '#/components/schemas/BuildController'
        definition:
          $ref: '#/components/schemas/DefinitionReference'
        deleted:
          type: boolean
          description: Indicates whether the build has been deleted.
        deletedBy:
          $ref: '#/components/schemas/IdentityRef'
        deletedDate:
          type: string
          description: The date the build was deleted.
          format: date-time
        deletedReason:
          type: string
          description: The description of how the build was deleted.
        demands:
          type: array
          description: A list of demands that represents the agent capabilities required
            by this build.
          items:
            $ref: '#/components/schemas/Demand'
        finishTime:
          type: string
          description: The time that the build was completed.
          format: date-time
        id:
          type: integer
          description: The ID of the build.
          format: int32
        lastChangedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastChangedDate:
          type: string
          description: The date the build was last changed.
          format: date-time
        logs:
          $ref: '#/components/schemas/BuildLogReference'
        orchestrationPlan:
          $ref: '#/components/schemas/TaskOrchestrationPlanReference'
        parameters:
          type: string
          description: The parameters for the build.
        plans:
          type: array
          description: Orchestration plans associated with the build (build, cleanup)
          items:
            $ref: '#/components/schemas/TaskOrchestrationPlanReference'
        priority:
          type: string
          description: The build's priority.
          enum:
          - low
          - belowNormal
          - normal
          - aboveNormal
          - high
          x-ms-enum:
            name: QueuePriority
            values:
            - value: low
              description: Low priority.
            - value: belowNormal
              description: Below normal priority.
            - value: normal
              description: Normal priority.
            - value: aboveNormal
              description: Above normal priority.
            - value: high
              description: High priority.
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        quality:
          type: string
          description: The quality of the xaml build (good, bad, etc.)
        queue:
          $ref: '#/components/schemas/AgentPoolQueue'
        queueOptions:
          type: string
          description: Additional options for queueing the build.
          enum:
          - none
          - doNotRun
          x-ms-enum:
            name: QueueOptions
            values:
            - value: none
              description: No queue options
            - value: doNotRun
              description: Create a plan Id for the build, do not run it
        queuePosition:
          type: integer
          description: The current position of the build in the queue.
          format: int32
        queueTime:
          type: string
          description: The time that the build was queued.
          format: date-time
        reason:
          type: string
          description: The reason that the build was created.
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        repository:
          $ref: '#/components/schemas/BuildRepository'
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        result:
          type: string
          description: The build result.
          enum:
          - none
          - succeeded
          - partiallySucceeded
          - failed
          - canceled
          x-ms-enum:
            name: BuildResult
            values:
            - value: none
              description: No result
            - value: succeeded
              description: The build completed successfully.
            - value: partiallySucceeded
              description: The build completed compilation successfully but had other
                errors.
            - value: failed
              description: The build completed unsuccessfully.
            - value: canceled
              description: The build was canceled before starting.
        retainedByRelease:
          type: boolean
          description: Indicates whether the build is retained by a release.
        sourceBranch:
          type: string
          description: The source branch.
        sourceVersion:
          type: string
          description: The source version.
        startTime:
          type: string
          description: The time that the build was started.
          format: date-time
        status:
          type: string
          description: The status of the build.
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
        tags:
          type: array
          items:
            type: string
        templateParameters:
          type: object
          additionalProperties:
            type: string
          description: Parameters to template expression evaluation
        triggeredByBuild:
          $ref: '#/components/schemas/Build'
        triggerInfo:
          type: object
          additionalProperties:
            type: string
          description: Sourceprovider-specific information about what triggered the
            build
        uri:
          type: string
          description: The URI of the build.
        url:
          type: string
          description: The REST URL of the build.
        validationResults:
          type: array
          items:
            $ref: '#/components/schemas/BuildRequestValidationResult'
      description: Data representation of a build.
    BuildAgent:
      type: object
      properties:
        buildDirectory:
          type: string
        controller:
          $ref: '#/components/schemas/XamlBuildControllerReference'
        createdDate:
          type: string
          format: date-time
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: integer
          format: int32
        messageQueueUrl:
          type: string
        name:
          type: string
        reservedForBuild:
          type: string
        server:
          $ref: '#/components/schemas/XamlBuildServerReference'
        status:
          type: string
          enum:
          - unavailable
          - available
          - offline
          x-ms-enum:
            name: AgentStatus
            values:
            - value: unavailable
              description: Indicates that the build agent cannot be contacted.
            - value: available
              description: Indicates that the build agent is currently available.
            - value: offline
              description: Indicates that the build agent has taken itself offline.
        statusMessage:
          type: string
        updatedDate:
          type: string
          format: date-time
        uri:
          type: string
        url:
          type: string
      description: ""
    BuildAgentReference:
      type: object
      properties:
        id:
          type: integer
          description: Id of the resource
          format: int32
        name:
          type: string
          description: Name of the linked resource (definition name, controller name,
            etc.)
        url:
          type: string
          description: Full http link to the resource
      description: ""
    BuildArtifact:
      type: object
      properties:
        id:
          type: integer
          description: The artifact ID.
          format: int32
        name:
          type: string
          description: The name of the artifact.
        resource:
          $ref: '#/components/schemas/ArtifactResource'
        source:
          type: string
          description: The artifact source, which will be the ID of the job that produced
            this artifact. If an artifact is associated with multiple sources, this
            points to the first source.
      description: Represents an artifact produced by a build.
    BuildBadge:
      type: object
      properties:
        buildId:
          type: integer
          description: The ID of the build represented by this badge.
          format: int32
        imageUrl:
          type: string
          description: A link to the SVG resource.
      description: Represents a build badge.
    BuildCompletedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BuildUpdatedEvent'
    BuildCompletionTrigger:
      description: Represents a build completion trigger.
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
    BuildController:
      description: ""
      allOf:
      - $ref: '#/components/schemas/XamlBuildControllerReference'
    BuildDefinition:
      description: Represents a build definition.
      allOf:
      - $ref: '#/components/schemas/BuildDefinitionReference'
    BuildDefinition3_2:
      description: For back-compat with extensions that use the old Steps format instead
        of Process and Phases
      allOf:
      - $ref: '#/components/schemas/BuildDefinitionReference3_2'
    BuildDefinitionReference:
      description: Represents a reference to a build definition.
      allOf:
      - $ref: '#/components/schemas/DefinitionReference'
    BuildDefinitionReference3_2:
      description: For back-compat with extensions that use the old Steps format instead
        of Process and Phases
      allOf:
      - $ref: '#/components/schemas/DefinitionReference'
    BuildDefinitionRevision:
      type: object
      properties:
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        changedDate:
          type: string
          description: The date and time that the definition was changed.
          format: date-time
        changeType:
          type: string
          description: The change type (add, edit, delete).
          enum:
          - add
          - update
          - delete
          x-ms-enum:
            name: AuditAction
            values:
            - value: add
              description: ""
            - value: update
              description: ""
            - value: delete
              description: ""
        comment:
          type: string
          description: The comment associated with the change.
        definitionUrl:
          type: string
          description: A link to the definition at this revision.
        name:
          type: string
          description: The name of the definition.
        revision:
          type: integer
          description: The revision number.
          format: int32
      description: Represents a revision of a build definition.
    BuildDefinitionSourceProvider:
      type: object
      properties:
        definitionUri:
          type: string
          description: Uri of the associated definition
        fields:
          type: object
          additionalProperties:
            type: string
          description: fields associated with this build definition
        id:
          type: integer
          description: Id of this source provider
          format: int32
        lastModified:
          type: string
          description: The lst time this source provider was modified
          format: date-time
        name:
          type: string
          description: Name of the source provider
        supportedTriggerTypes:
          type: string
          description: Which trigger types are supported by this definition source
            provider
          enum:
          - none
          - continuousIntegration
          - batchedContinuousIntegration
          - schedule
          - gatedCheckIn
          - batchedGatedCheckIn
          - pullRequest
          - buildCompletion
          - all
          x-ms-enum:
            name: DefinitionTriggerType
            values:
            - value: none
              description: Manual builds only.
            - value: continuousIntegration
              description: A build should be started for each changeset.
            - value: batchedContinuousIntegration
              description: A build should be started for multiple changesets at a
                time at a specified interval.
            - value: schedule
              description: A build should be started on a specified schedule whether
                or not changesets exist.
            - value: gatedCheckIn
              description: A validation build should be started for each check-in.
            - value: batchedGatedCheckIn
              description: A validation build should be started for each batch of
                check-ins.
            - value: pullRequest
              description: A build should be triggered when a GitHub pull request
                is created or updated. Added in resource version 3
            - value: buildCompletion
              description: A build should be triggered when another build completes.
            - value: all
              description: All types.
      description: ""
    BuildDefinitionStep:
      type: object
      properties:
        alwaysRun:
          type: boolean
          description: Indicates whether this step should run even if a previous step
            fails.
        condition:
          type: string
          description: A condition that determines whether this step should run.
        continueOnError:
          type: boolean
          description: Indicates whether the phase should continue even if this step
            fails.
        displayName:
          type: string
          description: The display name for this step.
        enabled:
          type: boolean
          description: Indicates whether the step is enabled.
        environment:
          type: object
          additionalProperties:
            type: string
        inputs:
          type: object
          additionalProperties:
            type: string
        refName:
          type: string
          description: The reference name for this step.
        retryCountOnTaskFailure:
          type: integer
          description: Number of retries.
          format: int32
        task:
          $ref: '#/components/schemas/TaskDefinitionReference'
        timeoutInMinutes:
          type: integer
          description: The time, in minutes, that this step is allowed to run.
          format: int32
      description: Represents a step in a build phase.
    BuildDefinitionTemplate:
      type: object
      properties:
        canDelete:
          type: boolean
          description: Indicates whether the template can be deleted.
        category:
          type: string
          description: The template category.
        defaultHostedQueue:
          type: string
          description: An optional hosted agent queue for the template to use by default.
        description:
          type: string
          description: A description of the template.
        icons:
          type: object
          additionalProperties:
            type: string
        iconTaskId:
          type: string
          description: The ID of the task whose icon is used when showing this template
            in the UI.
          format: uuid
        id:
          type: string
          description: The ID of the template.
        name:
          type: string
          description: The name of the template.
        template:
          $ref: '#/components/schemas/BuildDefinition'
      description: Represents a template from which new build definitions can be created.
    BuildDefinitionTemplate3_2:
      type: object
      properties:
        canDelete:
          type: boolean
        category:
          type: string
        defaultHostedQueue:
          type: string
        description:
          type: string
        icons:
          type: object
          additionalProperties:
            type: string
        iconTaskId:
          type: string
          format: uuid
        id:
          type: string
        name:
          type: string
        template:
          $ref: '#/components/schemas/BuildDefinition3_2'
      description: For back-compat with extensions that use the old Steps format instead
        of Process and Phases
    BuildDefinitionVariable:
      type: object
      properties:
        allowOverride:
          type: boolean
          description: Indicates whether the value can be set at queue time.
        isSecret:
          type: boolean
          description: Indicates whether the variable's value is a secret.
        value:
          type: string
          description: The value of the variable.
      description: Represents a variable used by a build definition.
    BuildDeletedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
    BuildDeployment:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/BuildSummary'
        sourceBuild:
          $ref: '#/components/schemas/XamlBuildReference'
      description: ""
    BuildEvent:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        identifier:
          type: string
      description: ""
    BuildLog:
      description: Represents a build log.
      allOf:
      - $ref: '#/components/schemas/BuildLogReference'
    BuildLogReference:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the log.
          format: int32
        type:
          type: string
          description: The type of the log location.
        url:
          type: string
          description: A full link to the log resource.
      description: Represents a reference to a build log.
    BuildMetric:
      type: object
      properties:
        date:
          type: string
          description: The date for the scope.
          format: date-time
        intValue:
          type: integer
          description: The value.
          format: int32
        name:
          type: string
          description: The name of the metric.
        scope:
          type: string
          description: The scope.
      description: Represents metadata about builds in the system.
    BuildOption:
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/BuildOptionDefinitionReference'
        enabled:
          type: boolean
          description: Indicates whether the behavior is enabled.
        inputs:
          type: object
          additionalProperties:
            type: string
      description: Represents the application of an optional behavior to a build definition.
    BuildOptionDefinition:
      description: Represents an optional behavior that can be applied to a build
        definition.
      allOf:
      - $ref: '#/components/schemas/BuildOptionDefinitionReference'
    BuildOptionDefinitionReference:
      type: object
      properties:
        id:
          type: string
          description: The ID of the referenced build option.
          format: uuid
      description: Represents a reference to a build option definition.
    BuildOptionGroupDefinition:
      type: object
      properties:
        displayName:
          type: string
          description: The name of the group to display in the UI.
        isExpanded:
          type: boolean
          description: Indicates whether the group is initially displayed as expanded
            in the UI.
        name:
          type: string
          description: The internal name of the group.
      description: Represents a group of inputs for a build option.
    BuildOptionInputDefinition:
      type: object
      properties:
        defaultValue:
          type: string
          description: The default value.
        groupName:
          type: string
          description: The name of the input group that this input belongs to.
        help:
          type: object
          additionalProperties:
            type: string
        label:
          type: string
          description: The label for the input.
        name:
          type: string
          description: The name of the input.
        options:
          type: object
          additionalProperties:
            type: string
        required:
          type: boolean
          description: Indicates whether the input is required to have a value.
        type:
          type: string
          description: Indicates the type of the input value.
          enum:
          - string
          - boolean
          - stringList
          - radio
          - pickList
          - multiLine
          - branchFilter
          x-ms-enum:
            name: BuildOptionInputType
            values:
            - value: string
              description: ""
            - value: boolean
              description: ""
            - value: stringList
              description: ""
            - value: radio
              description: ""
            - value: pickList
              description: ""
            - value: multiLine
              description: ""
            - value: branchFilter
              description: ""
        visibleRule:
          type: string
          description: The rule that is applied to determine whether the input is
            visible in the UI.
      description: Represents an input for a build option.
    BuildProcess:
      type: object
      properties:
        type:
          type: integer
          description: The type of the process.
          format: int32
      description: Represents a build process.
    BuildProcessResources:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointReference'
        files:
          type: array
          items:
            $ref: '#/components/schemas/SecureFileReference'
        queues:
          type: array
          items:
            $ref: '#/components/schemas/AgentPoolQueueReference'
        variableGroups:
          type: array
          items:
            $ref: '#/components/schemas/VariableGroupReference'
      description: Represents resources used by a build process.
    BuildProcessTemplate:
      type: object
      properties:
        description:
          type: string
        fileExists:
          type: boolean
        id:
          type: integer
          format: int32
        parameters:
          type: string
        serverPath:
          type: string
        supportedReasons:
          type: string
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        teamProject:
          type: string
        templateType:
          type: string
          enum:
          - custom
          - default
          - upgrade
          x-ms-enum:
            name: ProcessTemplateType
            values:
            - value: custom
              description: Indicates a custom template.
            - value: default
              description: Indicates a default template.
            - value: upgrade
              description: Indicates an upgrade template.
        url:
          type: string
        version:
          type: string
      description: ""
    BuildQueuedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BuildUpdatedEvent'
    BuildReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        buildNumber:
          type: string
          description: The build number.
        deleted:
          type: boolean
          description: Indicates whether the build has been deleted.
        finishTime:
          type: string
          description: The time that the build was completed.
          format: date-time
        id:
          type: integer
          description: The ID of the build.
          format: int32
        queueTime:
          type: string
          description: The time that the build was queued.
          format: date-time
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        result:
          type: string
          description: The build result.
          enum:
          - none
          - succeeded
          - partiallySucceeded
          - failed
          - canceled
          x-ms-enum:
            name: BuildResult
            values:
            - value: none
              description: No result
            - value: succeeded
              description: The build completed successfully.
            - value: partiallySucceeded
              description: The build completed compilation successfully but had other
                errors.
            - value: failed
              description: The build completed unsuccessfully.
            - value: canceled
              description: The build was canceled before starting.
        startTime:
          type: string
          description: The time that the build was started.
          format: date-time
        status:
          type: string
          description: The build status.
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
      description: Represents a reference to a build.
    BuildReportMetadata:
      type: object
      properties:
        buildId:
          type: integer
          description: The Id of the build.
          format: int32
        content:
          type: string
          description: The content of the report.
        type:
          type: string
          description: The type of the report.
      description: Represents information about a build report.
    BuildRepository:
      type: object
      properties:
        checkoutSubmodules:
          type: boolean
          description: Indicates whether to checkout submodules.
        clean:
          type: string
          description: Indicates whether to clean the target folder when getting code
            from the repository.
        defaultBranch:
          type: string
          description: The name of the default branch.
        id:
          type: string
          description: The ID of the repository.
        name:
          type: string
          description: The friendly name of the repository.
        properties:
          type: object
          additionalProperties:
            type: string
        rootFolder:
          type: string
          description: The root folder.
        type:
          type: string
          description: The type of the repository.
        url:
          type: string
          description: The URL of the repository.
      description: Represents a repository used by a build definition.
    BuildRequestValidationResult:
      type: object
      properties:
        message:
          type: string
          description: The message associated with the result.
        result:
          type: string
          description: The result.
          enum:
          - ok
          - warning
          - error
          x-ms-enum:
            name: ValidationResult
            values:
            - value: ok
              description: ""
            - value: warning
              description: ""
            - value: error
              description: ""
      description: Represents the result of validating a build request.
    BuildResourceUsage:
      type: object
      properties:
        distributedTaskAgents:
          type: integer
          description: The number of build agents.
          format: int32
        paidPrivateAgentSlots:
          type: integer
          description: The number of paid private agent slots.
          format: int32
        totalUsage:
          type: integer
          description: The total usage.
          format: int32
        xamlControllers:
          type: integer
          description: The number of XAML controllers.
          format: int32
      description: Represents information about resources used by builds in the system.
    BuildRetentionHistory:
      type: object
      properties:
        buildRetentionSamples:
          type: array
          description: A list of builds that are older than the default retention
            policy, but are not marked as retained. Something is causing these builds
            to not get cleaned up.
          items:
            $ref: '#/components/schemas/BuildRetentionSample'
      description: A historical overview of build retention information. This includes
        a list of snapshots taken about build retention usage, and a list of builds
        that have exceeded the default 30 day retention policy.
    BuildRetentionSample:
      type: object
      properties:
        builds:
          type: string
          description: Summary of retention by build
        definitions:
          type: string
          description: List of build definitions
        files:
          type: string
          description: Summary of files consumed by retained builds
        sampleTime:
          type: string
          description: The date and time when the sample was taken
          format: date-time
      description: A snapshot of build retention information. This class takes a sample
        at the given time. It provides information about retained builds, files associated
        with those retained builds, and number of files being retained.
    BuildsDeletedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BuildsDeletedEvent1'
    BuildsDeletedEvent1:
      type: object
      properties:
        buildIds:
          type: array
          items:
            type: integer
            format: int32
        definitionId:
          type: integer
          description: The ID of the definition.
          format: int32
        projectId:
          type: string
          description: The ID of the project.
          format: uuid
      description: ""
    BuildServer:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/BuildAgentReference'
        controller:
          $ref: '#/components/schemas/XamlBuildControllerReference'
        id:
          type: integer
          format: int32
        isVirtual:
          type: boolean
        messageQueueUrl:
          type: string
        name:
          type: string
        requireClientCertificates:
          type: boolean
        status:
          type: string
          enum:
          - online
          - offline
          x-ms-enum:
            name: ServiceHostStatus
            values:
            - value: online
              description: The service host is currently connected and accepting commands.
            - value: offline
              description: The service host is currently disconnected and not accepting
                commands.
        statusChangedDate:
          type: string
          format: date-time
        uri:
          type: string
        url:
          type: string
        version:
          type: integer
          format: int32
      description: ""
    BuildSettings:
      type: object
      properties:
        daysToKeepDeletedBuildsBeforeDestroy:
          type: integer
          description: The number of days to keep records of deleted builds.
          format: int32
        defaultRetentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
        maximumRetentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
      description: Represents system-wide build settings.
    BuildSummary:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/XamlBuildReference'
        finishTime:
          type: string
          format: date-time
        keepForever:
          type: boolean
        quality:
          type: string
        reason:
          type: string
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        startTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
      description: ""
    BuildTagsAddedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BuildUpdatedEvent'
    BuildTrigger:
      type: object
      properties:
        triggerType:
          type: string
          description: The type of the trigger.
          enum:
          - none
          - continuousIntegration
          - batchedContinuousIntegration
          - schedule
          - gatedCheckIn
          - batchedGatedCheckIn
          - pullRequest
          - buildCompletion
          - all
          x-ms-enum:
            name: DefinitionTriggerType
            values:
            - value: none
              description: Manual builds only.
            - value: continuousIntegration
              description: A build should be started for each changeset.
            - value: batchedContinuousIntegration
              description: A build should be started for multiple changesets at a
                time at a specified interval.
            - value: schedule
              description: A build should be started on a specified schedule whether
                or not changesets exist.
            - value: gatedCheckIn
              description: A validation build should be started for each check-in.
            - value: batchedGatedCheckIn
              description: A validation build should be started for each batch of
                check-ins.
            - value: pullRequest
              description: A build should be triggered when a GitHub pull request
                is created or updated. Added in resource version 3
            - value: buildCompletion
              description: A build should be triggered when another build completes.
            - value: all
              description: All types.
      description: Represents a trigger for a buld definition.
    BuildUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
    BuildWorkspace:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/MappingDetails'
      description: Represents a workspace mapping.
    Change:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/IdentityRef'
        displayUri:
          type: string
          description: The location of a user-friendly representation of the resource.
        id:
          type: string
          description: The identifier for the change. For a commit, this would be
            the SHA1. For a TFVC changeset, this would be the changeset ID.
        location:
          type: string
          description: The location of the full representation of the resource.
        message:
          type: string
          description: The description of the change. This might be a commit message
            or changeset description.
        messageTruncated:
          type: boolean
          description: Indicates whether the message was truncated.
        pusher:
          type: string
          description: The person or process that pushed the change.
        timestamp:
          type: string
          description: The timestamp for the change.
          format: date-time
        type:
          type: string
          description: The type of change. "commit", "changeset", etc.
      description: Represents a change associated with a build.
    ConsoleLogEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
    ContinuousDeploymentDefinition:
      type: object
      properties:
        connectedService:
          $ref: '#/components/schemas/WebApiConnectedServiceRef'
        definition:
          $ref: '#/components/schemas/XamlDefinitionReference'
        gitBranch:
          type: string
        hostedServiceName:
          type: string
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        repositoryId:
          type: string
        storageAccountName:
          type: string
        subscriptionId:
          type: string
        website:
          type: string
        webspace:
          type: string
      description: ""
    ContinuousIntegrationTrigger:
      description: Represents a continuous integration (CI) trigger.
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
    DataSourceBindingBase:
      type: object
      properties:
        callbackContextTemplate:
          type: string
          description: Pagination format supported by this data source(ContinuationToken/SkipTop).
        callbackRequiredTemplate:
          type: string
          description: Subsequent calls needed?
        dataSourceName:
          type: string
          description: Gets or sets the name of the data source.
        endpointId:
          type: string
          description: Gets or sets the endpoint Id.
        endpointUrl:
          type: string
          description: Gets or sets the url of the service endpoint.
        headers:
          type: array
          description: Gets or sets the authorization headers.
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
        initialContextTemplate:
          type: string
          description: Defines the initial value of the query params
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters for the data source.
        requestContent:
          type: string
          description: Gets or sets http request body
        requestVerb:
          type: string
          description: Gets or sets http request verb
        resultSelector:
          type: string
          description: Gets or sets the result selector.
        resultTemplate:
          type: string
          description: Gets or sets the result template.
        target:
          type: string
          description: Gets or sets the target of the data source.
      description: Represents binding of data source for the service endpoint request.
    DefinitionReference:
      type: object
      properties:
        createdDate:
          type: string
          description: The date this version of the definition was created.
          format: date-time
        id:
          type: integer
          description: The ID of the referenced definition.
          format: int32
        name:
          type: string
          description: The name of the referenced definition.
        path:
          type: string
          description: The folder path of the definition.
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        queueStatus:
          type: string
          description: A value that indicates whether builds can be queued against
            this definition.
          enum:
          - enabled
          - paused
          - disabled
          x-ms-enum:
            name: DefinitionQueueStatus
            values:
            - value: enabled
              description: When enabled the definition queue allows builds to be queued
                by users, the system will queue scheduled, gated and continuous integration
                builds, and the queued builds will be started by the system.
            - value: paused
              description: When paused the definition queue allows builds to be queued
                by users and the system will queue scheduled, gated and continuous
                integration builds. Builds in the queue will not be started by the
                system.
            - value: disabled
              description: When disabled the definition queue will not allow builds
                to be queued by users and the system will not queue scheduled, gated
                or continuous integration builds. Builds already in the queue will
                not be started by the system.
        revision:
          type: integer
          description: The definition revision number.
          format: int32
        type:
          type: string
          description: The type of the definition.
          enum:
          - xaml
          - build
          x-ms-enum:
            name: DefinitionType
            values:
            - value: xaml
              description: ""
            - value: build
              description: ""
        uri:
          type: string
          description: The definition's URI.
        url:
          type: string
          description: The REST URL of the definition.
      description: Represents a reference to a definition.
    DefinitionResourceReference:
      type: object
      properties:
        authorized:
          type: boolean
          description: Indicates whether the resource is authorized for use.
        id:
          type: string
          description: The id of the resource.
        name:
          type: string
          description: A friendly name for the resource.
        type:
          type: string
          description: The type of the resource.
      description: ""
    Demand:
      type: object
      properties:
        name:
          type: string
          description: The name of the capability referenced by the demand.
        value:
          type: string
          description: The demanded value.
      description: Represents a demand used by a definition or build.
    Dependency:
      type: object
      properties:
        event:
          type: string
          description: The event. The dependency is satisfied when the referenced
            object emits this event.
        scope:
          type: string
          description: The scope. This names the object referenced by the dependency.
      description: Represents a dependency.
    Deployment:
      type: object
      properties:
        type:
          type: string
      description: Represents the data from the build information nodes for type "DeploymentInformation"
        for xaml builds
    DeploymentBuild:
      description: Deployment information for type "Build"
      allOf:
      - $ref: '#/components/schemas/Deployment'
    DeploymentDeploy:
      description: Deployment information for type "Deploy"
      allOf:
      - $ref: '#/components/schemas/Deployment'
    DeploymentTest:
      description: Deployment information for type "Test"
      allOf:
      - $ref: '#/components/schemas/Deployment'
    DesignerProcess:
      description: Represents a build process supported by the build definition designer.
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
    DesignerProcessTarget:
      type: object
      properties:
        agentSpecification:
          $ref: '#/components/schemas/AgentSpecification'
      description: Represents the target for the build process.
    DockerProcess:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
    DockerProcessTarget:
      description: Represents the target for the docker build process.
      allOf:
      - $ref: '#/components/schemas/DesignerProcessTarget'
    Folder:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: The date the folder was created.
          format: date-time
        description:
          type: string
          description: The description.
        lastChangedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastChangedDate:
          type: string
          description: The date the folder was last changed.
          format: date-time
        path:
          type: string
          description: The full path.
        project:
          $ref: '#/components/schemas/TeamProjectReference'
      description: Represents a folder that contains build definitions.
    Forks:
      type: object
      properties:
        allowFullAccessToken:
          type: boolean
          description: Indicates whether a build should allow a full access token
            or scope it down when building forks of the selected repository.
        allowSecrets:
          type: boolean
          description: Indicates whether a build should use secrets when building
            forks of the selected repository.
        enabled:
          type: boolean
          description: Indicates whether the trigger should queue builds for forks
            of the selected repository.
      description: Represents the ability to build forks of the selected repository.
    GatedCheckInTrigger:
      description: Represents a gated check-in trigger.
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Collections.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    InformationNode:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            type: string
          description: Fields of the information node
        lastModifiedBy:
          type: string
          description: Process or person that last modified this node
        lastModifiedDate:
          type: string
          description: Date this node was last modified
          format: date-time
        nodeId:
          type: integer
          description: Node Id of this information node
          format: int32
        parentId:
          type: integer
          description: Id of parent node (xml tree)
          format: int32
        type:
          type: string
          description: The type of the information node
      description: Data representation of an information node associated with a build
    Issue:
      type: object
      properties:
        category:
          type: string
          description: The category.
        data:
          type: object
          additionalProperties:
            type: string
        message:
          type: string
          description: A description of the issue.
        type:
          type: string
          description: The type (error, warning) of the issue.
          enum:
          - error
          - warning
          x-ms-enum:
            name: IssueType
            values:
            - value: error
              description: ""
            - value: warning
              description: ""
      description: Represents an issue (error, warning) associated with a build.
    JobReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of the job
          format: int32
        jobName:
          type: string
          description: Matrixing in YAML generates copies of a job with different
            inputs in matrix. JobName is the name of those input. Maximum supported
            length for name is 256 character.
      description: Job in pipeline. This is related to matrixing in YAML.
    JsonPatchDocument:
      description: The JSON model for JSON Patch Operations
      allOf:
      - type: array
        items:
          $ref: '#/components/schemas/JsonPatchOperation'
    JsonPatchOperation:
      type: object
      properties:
        from:
          type: string
          description: The path to copy from for the Move/Copy operation.
        op:
          type: string
          description: The patch operation
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          x-ms-enum:
            name: Operation
            values:
            - value: add
              description: ""
            - value: remove
              description: ""
            - value: replace
              description: ""
            - value: move
              description: ""
            - value: copy
              description: ""
            - value: test
              description: ""
        path:
          type: string
          description: The path for the operation. In the case of an array, a zero
            based index can be used to specify the position in the array (e.g. /biscuits/0/name).
            The "-" character can be used instead of an index to insert at the end
            of the array (e.g. /biscuits/-).
        value:
          type: object
          properties: {}
          description: The value for the operation. This is either a primitive or
            a JToken.
      description: The JSON model for a JSON Patch operation
    JustInTimeProcess:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
    MappingDetails:
      type: object
      properties:
        localPath:
          type: string
          description: The local path.
        mappingType:
          type: string
          description: The mapping type.
        serverPath:
          type: string
          description: The server path.
      description: Represents an entry in a workspace mapping.
    MinimalRetentionLease:
      type: object
      properties:
        definitionId:
          type: integer
          description: The pipeline definition of the run.
          format: int32
        ownerId:
          type: string
          description: User-provided string that identifies the owner of a retention
            lease.
        runId:
          type: integer
          description: The pipeline run to protect.
          format: int32
      description: ""
    MultipleAgentExecutionOptions:
      description: Represents options for running a phase against multiple agents.
      allOf:
      - $ref: '#/components/schemas/AgentTargetExecutionOptions'
    NewRetentionLease:
      type: object
      properties:
        daysValid:
          type: integer
          description: The number of days to consider the lease valid. A retention
            lease valid for more than 100 years (36500 days) will display as retaining
            the build "forever".
          format: int32
        definitionId:
          type: integer
          description: The pipeline definition of the run.
          format: int32
        ownerId:
          type: string
          description: User-provided string that identifies the owner of a retention
            lease.
        protectPipeline:
          type: boolean
          description: If set, this lease will also prevent the pipeline from being
            deleted while the lease is still valid.
        runId:
          type: integer
          description: The pipeline run to protect.
          format: int32
      description: Required information to create a new retention lease.
    Phase:
      type: object
      properties:
        condition:
          type: string
          description: The condition that must be true for this phase to execute.
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        jobAuthorizationScope:
          type: string
          description: The job authorization scope for builds queued against this
            definition.
          enum:
          - projectCollection
          - project
          x-ms-enum:
            name: BuildAuthorizationScope
            values:
            - value: projectCollection
              description: The identity used should have build service account permissions
                scoped to the project collection. This is useful when resources for
                a single build are spread across multiple projects.
            - value: project
              description: The identity used should have build service account permissions
                scoped to the project in which the build definition resides. This
                is useful for isolation of build jobs to a particular team project
                to avoid any unintentional escalation of privilege attacks during
                a build.
        jobCancelTimeoutInMinutes:
          type: integer
          description: The cancellation timeout, in minutes, for builds queued against
            this definition.
          format: int32
        jobTimeoutInMinutes:
          type: integer
          description: The job execution timeout, in minutes, for builds queued against
            this definition.
          format: int32
        name:
          type: string
          description: The name of the phase.
        refName:
          type: string
          description: The unique ref name of the phase.
        steps:
          type: array
          items:
            $ref: '#/components/schemas/BuildDefinitionStep'
        target:
          $ref: '#/components/schemas/PhaseTarget'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BuildDefinitionVariable'
      description: Represents a phase of a build definition.
    PhaseReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of the phase
          format: int32
        phaseName:
          type: string
          description: Name of the phase. Maximum supported length for name is 256
            character.
      description: Phase in pipeline
    PhaseTarget:
      type: object
      properties:
        type:
          type: integer
          description: The type of the target.
          format: int32
      description: Represents the target of a phase.
    PipelineGeneralSettings:
      type: object
      properties:
        enforceJobAuthScope:
          type: boolean
          description: If enabled, scope of access for all non-release pipelines reduces
            to the current project.
        enforceJobAuthScopeForReleases:
          type: boolean
          description: If enabled, scope of access for all release pipelines reduces
            to the current project.
        enforceReferencedRepoScopedToken:
          type: boolean
          description: Restricts the scope of access for all pipelines to only repositories
            explicitly referenced by the pipeline.
        enforceSettableVar:
          type: boolean
          description: If enabled, only those variables that are explicitly marked
            as "Settable at queue time" can be set at queue time.
        publishPipelineMetadata:
          type: boolean
          description: Allows pipelines to record metadata.
        statusBadgesArePrivate:
          type: boolean
          description: Anonymous users can access the status badge API for all pipelines
            unless this option is enabled.
      description: Contains pipeline general settings.
    PipelineReference:
      type: object
      properties:
        jobReference:
          $ref: '#/components/schemas/JobReference'
        phaseReference:
          $ref: '#/components/schemas/PhaseReference'
        pipelineId:
          type: integer
          description: Reference of the pipeline with which this pipeline instance
            is related.
          format: int32
        stageReference:
          $ref: '#/components/schemas/StageReference'
      description: Pipeline reference
    ProcessParameters:
      type: object
      properties:
        dataSourceBindings:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceBindingBase'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/TaskInputDefinitionBase'
        sourceDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/TaskSourceDefinitionBase'
      description: ""
    ProjectRetentionSetting:
      type: object
      properties:
        purgeArtifacts:
          $ref: '#/components/schemas/RetentionSetting'
        purgePullRequestRuns:
          $ref: '#/components/schemas/RetentionSetting'
        purgeRuns:
          $ref: '#/components/schemas/RetentionSetting'
        retainRunsPerProtectedBranch:
          $ref: '#/components/schemas/RetentionSetting'
      description: Contains the settings for the retention rules.
    PropertiesCollection:
      type: object
      properties:
        count:
          type: integer
          description: The count of properties in the collection.
          format: int32
        item:
          type: object
          properties: {}
        keys:
          type: array
          description: The set of keys in the collection.
          items:
            type: string
        values:
          type: array
          description: The set of values in the collection.
          items:
            type: string
      description: The class represents a property bag as a collection of key-value
        pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`)
        except for `DBNull` are accepted. Values of type Byte[], Int32, Double, DateType
        and String preserve their type, other primitives are retuned as a String.
        Byte[] expected as base64 encoded string.
    PullRequest:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        author:
          $ref: '#/components/schemas/IdentityRef'
        currentState:
          type: string
          description: Current state of the pull request, e.g. open, merged, closed,
            conflicts, etc.
        description:
          type: string
          description: Description for the pull request.
        draft:
          type: boolean
          description: Returns if pull request is draft
        id:
          type: string
          description: Unique identifier for the pull request
        providerName:
          type: string
          description: The name of the provider this pull request is associated with.
        sourceBranchRef:
          type: string
          description: Source branch ref of this pull request
        sourceRepositoryOwner:
          type: string
          description: Owner of the source repository of this pull request
        targetBranchRef:
          type: string
          description: Target branch ref of this pull request
        targetRepositoryOwner:
          type: string
          description: Owner of the target repository of this pull request
        title:
          type: string
          description: Title of the pull request.
      description: Represents a pull request object.  These are retrieved from Source
        Providers.
    PullRequestTrigger:
      description: Represents a pull request trigger.
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
    RealtimeBuildEvent:
      type: object
      properties:
        buildId:
          type: integer
          format: int32
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    ReleaseReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Number of Release Attempt.
          format: int32
        creationDate:
          type: string
          description: Release Creation Date(UTC).
          format: date-time
        definitionId:
          type: integer
          description: Release definition ID.
          format: int32
        environmentCreationDate:
          type: string
          description: Environment creation Date(UTC).
          format: date-time
        environmentDefinitionId:
          type: integer
          description: Release environment definition ID.
          format: int32
        environmentDefinitionName:
          type: string
          description: Release environment definition name.
        environmentId:
          type: integer
          description: Release environment ID.
          format: int32
        environmentName:
          type: string
          description: Release environment name.
        id:
          type: integer
          description: Release ID.
          format: int32
        name:
          type: string
          description: Release name.
      description: Reference to a release.
    RepositoryWebhook:
      type: object
      properties:
        name:
          type: string
          description: The friendly name of the repository.
        types:
          type: array
          items:
            type: object
            x-ms-enum:
              name: DefinitionTriggerType
              values:
              - value: none
                description: Manual builds only.
              - value: continuousIntegration
                description: A build should be started for each changeset.
              - value: batchedContinuousIntegration
                description: A build should be started for multiple changesets at
                  a time at a specified interval.
              - value: schedule
                description: A build should be started on a specified schedule whether
                  or not changesets exist.
              - value: gatedCheckIn
                description: A validation build should be started for each check-in.
              - value: batchedGatedCheckIn
                description: A validation build should be started for each batch of
                  check-ins.
              - value: pullRequest
                description: A build should be triggered when a GitHub pull request
                  is created or updated. Added in resource version 3
              - value: buildCompletion
                description: A build should be triggered when another build completes.
              - value: all
                description: All types.
        url:
          type: string
          description: The URL of the repository.
      description: Represents a repository's webhook returned from a source provider.
    ResourceRef:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
      description: ""
    ResourceReference:
      type: object
      properties:
        alias:
          type: string
          description: An alias to be used when referencing the resource.
      description: Represents a reference to a resource.
    RetentionLease:
      type: object
      properties:
        createdOn:
          type: string
          description: When the lease was created.
          format: date-time
        definitionId:
          type: integer
          description: The pipeline definition of the run.
          format: int32
        leaseId:
          type: integer
          description: The unique identifier for this lease.
          format: int32
        ownerId:
          type: string
          description: Non-unique string that identifies the owner of a retention
            lease.
        protectPipeline:
          type: boolean
          description: If set, this lease will also prevent the pipeline from being
            deleted while the lease is still valid.
        runId:
          type: integer
          description: The pipeline run protected by this lease.
          format: int32
        validUntil:
          type: string
          description: The last day the lease is considered valid.
          format: date-time
      description: A valid retention lease prevents automated systems from deleting
        a pipeline run.
    RetentionLeaseUpdate:
      type: object
      properties:
        daysValid:
          type: integer
          description: The number of days to consider the lease valid. A retention
            lease valid for more than 100 years (36500 days) will display as retaining
            the build "forever".
          format: int32
        protectPipeline:
          type: boolean
          description: If set, this lease will also prevent the pipeline from being
            deleted while the lease is still valid.
      description: An update to the retention parameters of a retention lease.
    RetentionPolicy:
      type: object
      properties:
        artifacts:
          type: array
          items:
            type: string
        artifactTypesToDelete:
          type: array
          items:
            type: string
        branches:
          type: array
          items:
            type: string
        daysToKeep:
          type: integer
          description: The number of days to keep builds.
          format: int32
        deleteBuildRecord:
          type: boolean
          description: Indicates whether the build record itself should be deleted.
        deleteTestResults:
          type: boolean
          description: Indicates whether to delete test results associated with the
            build.
        minimumToKeep:
          type: integer
          description: The minimum number of builds to keep.
          format: int32
      description: Represents a retention policy for a build definition.
    RetentionSetting:
      type: object
      properties:
        max:
          type: integer
          format: int32
        min:
          type: integer
          format: int32
        value:
          type: integer
          format: int32
      description: Contains the minimum, maximum, and current value for a retention
        setting.
    Schedule:
      type: object
      properties:
        branchFilters:
          type: array
          items:
            type: string
        daysToBuild:
          type: string
          description: Days for a build (flags enum for days of the week)
          enum:
          - none
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
          - all
          x-ms-enum:
            name: ScheduleDays
            values:
            - value: none
              description: Do not run.
            - value: monday
              description: Run on Monday.
            - value: tuesday
              description: Run on Tuesday.
            - value: wednesday
              description: Run on Wednesday.
            - value: thursday
              description: Run on Thursday.
            - value: friday
              description: Run on Friday.
            - value: saturday
              description: Run on Saturday.
            - value: sunday
              description: Run on Sunday.
            - value: all
              description: Run on all days of the week.
        scheduleJobId:
          type: string
          description: The Job Id of the Scheduled job that will queue the scheduled
            build. Since a single trigger can have multiple schedules and we want
            a single job to process a single schedule (since each schedule has a list
            of branches to build), the schedule itself needs to define the Job Id.
            This value will be filled in when a definition is added or updated.  The
            UI does not provide it or use it.
          format: uuid
        scheduleOnlyWithChanges:
          type: boolean
          description: Flag to determine if this schedule should only build if the
            associated source has been changed.
        startHours:
          type: integer
          description: Local timezone hour to start
          format: int32
        startMinutes:
          type: integer
          description: Local timezone minute to start
          format: int32
        timeZoneId:
          type: string
          description: Time zone of the build schedule (String representation of the
            time zone ID)
      description: ""
    ScheduleTrigger:
      description: Represents a schedule trigger.
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
    SecureFileReference:
      description: Represents a reference to a secure file.
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
    ServerTarget:
      description: Represents a phase target that runs on the server.
      allOf:
      - $ref: '#/components/schemas/PhaseTarget'
    ServerTargetExecutionOptions:
      type: object
      properties:
        type:
          type: integer
          description: The type.
          format: int32
      description: Represents options for running a phase on the server.
    ServiceEndpointReference:
      description: Represents a referenec to a service endpoint.
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
    SourceProviderAttributes:
      type: object
      properties:
        name:
          type: string
          description: The name of the source provider.
        supportedCapabilities:
          type: object
          additionalProperties:
            type: boolean
          description: The capabilities supported by this source provider.
        supportedTriggers:
          type: array
          description: The types of triggers supported by this source provider.
          items:
            $ref: '#/components/schemas/SupportedTrigger'
      description: ""
    SourceRelatedWorkItem:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        assignedTo:
          $ref: '#/components/schemas/IdentityRef'
        currentState:
          type: string
          description: Current state of the work item, e.g. Active, Resolved, Closed,
            etc.
        description:
          type: string
          description: Long description for the work item.
        id:
          type: string
          description: Unique identifier for the work item
        providerName:
          type: string
          description: The name of the provider the work item is associated with.
        title:
          type: string
          description: Short name for the work item.
        type:
          type: string
          description: Type of work item, e.g. Bug, Task, User Story, etc.
      description: Represents a work item related to some source item. These are retrieved
        from Source Providers.
    SourceRepositories:
      type: object
      properties:
        continuationToken:
          type: string
          description: A token used to continue this paged request; 'null' if the
            request is complete
        pageLength:
          type: integer
          description: The number of repositories requested for each page
          format: int32
        repositories:
          type: array
          description: A list of repositories
          items:
            $ref: '#/components/schemas/SourceRepository'
        totalPageCount:
          type: integer
          description: The total number of pages, or '-1' if unknown
          format: int32
      description: A set of repositories returned from the source provider.
    SourceRepository:
      type: object
      properties:
        defaultBranch:
          type: string
          description: The name of the default branch.
        fullName:
          type: string
          description: The full name of the repository.
        id:
          type: string
          description: The ID of the repository.
        name:
          type: string
          description: The friendly name of the repository.
        properties:
          type: object
          additionalProperties:
            type: string
        sourceProviderName:
          type: string
          description: The name of the source provider the repository is from.
        url:
          type: string
          description: The URL of the repository.
      description: Represents a repository returned from a source provider.
    SourceRepositoryItem:
      type: object
      properties:
        isContainer:
          type: boolean
          description: Whether the item is able to have sub-items (e.g., is a folder).
        path:
          type: string
          description: The full path of the item, relative to the root of the repository.
        type:
          type: string
          description: The type of the item (folder, file, etc).
        url:
          type: string
          description: The URL of the item.
      description: Represents an item in a repository from a source provider.
    StageReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of stage
          format: int32
        stageName:
          type: string
          description: Name of the stage. Maximum supported length for name is 256
            character.
      description: Stage in pipeline
    SupportedTrigger:
      type: object
      properties:
        defaultPollingInterval:
          type: integer
          description: The default interval to wait between polls (only relevant when
            NotificationType is Polling).
          format: int32
        notificationType:
          type: string
          description: How the trigger is notified of changes.
        supportedCapabilities:
          type: object
          additionalProperties:
            type: object
            x-ms-enum:
              name: SupportLevel
              values:
              - value: unsupported
                description: The functionality is not supported.
              - value: supported
                description: The functionality is supported.
              - value: required
                description: The functionality is required.
          description: The capabilities supported by this trigger.
        type:
          type: string
          description: The type of trigger.
          enum:
          - none
          - continuousIntegration
          - batchedContinuousIntegration
          - schedule
          - gatedCheckIn
          - batchedGatedCheckIn
          - pullRequest
          - buildCompletion
          - all
          x-ms-enum:
            name: DefinitionTriggerType
            values:
            - value: none
              description: Manual builds only.
            - value: continuousIntegration
              description: A build should be started for each changeset.
            - value: batchedContinuousIntegration
              description: A build should be started for multiple changesets at a
                time at a specified interval.
            - value: schedule
              description: A build should be started on a specified schedule whether
                or not changesets exist.
            - value: gatedCheckIn
              description: A validation build should be started for each check-in.
            - value: batchedGatedCheckIn
              description: A validation build should be started for each batch of
                check-ins.
            - value: pullRequest
              description: A build should be triggered when a GitHub pull request
                is created or updated. Added in resource version 3
            - value: buildCompletion
              description: A build should be triggered when another build completes.
            - value: all
              description: All types.
      description: ""
    SvnMappingDetails:
      type: object
      properties:
        depth:
          type: integer
          description: The depth.
          format: int32
        ignoreExternals:
          type: boolean
          description: Indicates whether to ignore externals.
        localPath:
          type: string
          description: The local path.
        revision:
          type: string
          description: The revision.
        serverPath:
          type: string
          description: The server path.
      description: Represents a Subversion mapping entry.
    SvnWorkspace:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SvnMappingDetails'
      description: Represents a subversion workspace.
    TaskAgentPoolReference:
      type: object
      properties:
        id:
          type: integer
          description: The pool ID.
          format: int32
        isHosted:
          type: boolean
          description: A value indicating whether or not this pool is managed by the
            service.
        name:
          type: string
          description: The pool name.
      description: Represents a reference to an agent pool.
    TaskDefinitionReference:
      type: object
      properties:
        definitionType:
          type: string
          description: The type of task (task or task group).
        id:
          type: string
          description: The ID of the task.
          format: uuid
        versionSpec:
          type: string
          description: The version of the task.
      description: A reference to a task definition.
    TaskInputDefinitionBase:
      type: object
      properties:
        aliases:
          type: array
          items:
            type: string
        defaultValue:
          type: string
        groupName:
          type: string
        helpMarkDown:
          type: string
        label:
          type: string
        name:
          type: string
        options:
          type: object
          additionalProperties:
            type: string
        properties:
          type: object
          additionalProperties:
            type: string
        required:
          type: boolean
        type:
          type: string
        validation:
          $ref: '#/components/schemas/TaskInputValidation'
        visibleRule:
          type: string
      description: ""
    TaskInputValidation:
      type: object
      properties:
        expression:
          type: string
          description: Conditional expression
        message:
          type: string
          description: Message explaining how user can correct if validation fails
      description: ""
    TaskOrchestrationPlanGroupReference:
      type: object
      properties:
        planGroup:
          type: string
          description: The name of the plan group.
        projectId:
          type: string
          description: The project ID.
          format: uuid
      description: Represents a reference to a plan group.
    TaskOrchestrationPlanGroupsStartedEvent:
      type: object
      properties:
        planGroups:
          type: array
          items:
            $ref: '#/components/schemas/TaskOrchestrationPlanGroupReference'
      description: ""
    TaskOrchestrationPlanReference:
      type: object
      properties:
        orchestrationType:
          type: integer
          description: The type of the plan.
          format: int32
        planId:
          type: string
          description: The ID of the plan.
          format: uuid
      description: Represents a reference to an orchestration plan.
    TaskReference:
      type: object
      properties:
        id:
          type: string
          description: The ID of the task definition.
          format: uuid
        name:
          type: string
          description: The name of the task definition.
        version:
          type: string
          description: The version of the task definition.
      description: Represents a reference to a task.
    TaskSourceDefinitionBase:
      type: object
      properties:
        authKey:
          type: string
        endpoint:
          type: string
        keySelector:
          type: string
        selector:
          type: string
        target:
          type: string
      description: ""
    TeamProjectReference:
      type: object
      properties:
        abbreviation:
          type: string
          description: Project abbreviation.
        defaultTeamImageUrl:
          type: string
          description: Url to default team identity image.
        description:
          type: string
          description: The project's description (if any).
        id:
          type: string
          description: Project identifier.
          format: uuid
        lastUpdateTime:
          type: string
          description: Project last update time.
          format: date-time
        name:
          type: string
          description: Project name.
        revision:
          type: integer
          description: Project revision.
          format: int64
        state:
          type: string
          description: Project state.
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: Project is in the process of being deleted.
            - value: new
              description: Project is in the process of being created.
            - value: wellFormed
              description: Project is completely created and ready to use.
            - value: createPending
              description: Project has been queued for creation, but the process has
                not yet started.
            - value: all
              description: All projects regardless of state except Deleted.
            - value: unchanged
              description: Project has not been changed.
            - value: deleted
              description: Project has been deleted.
        url:
          type: string
          description: Url to the full version of the object.
        visibility:
          type: string
          description: Project visibility.
          enum:
          - private
          - public
          x-ms-enum:
            name: ProjectVisibility
            values:
            - value: private
              description: The project is only visible to users with explicit access.
            - value: public
              description: The project is visible to all.
      description: Represents a shallow reference to a TeamProject.
    TestResultsContext:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildReference'
        contextType:
          type: string
          enum:
          - build
          - release
          - pipeline
          x-ms-enum:
            name: TestResultsContextType
            values:
            - value: build
              description: ""
            - value: release
              description: ""
            - value: pipeline
              description: ""
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        release:
          $ref: '#/components/schemas/ReleaseReference'
      description: ""
    Timeline:
      description: Represents the timeline of a build.
      allOf:
      - $ref: '#/components/schemas/TimelineReference'
    TimelineAttempt:
      type: object
      properties:
        attempt:
          type: integer
          description: Gets or sets the attempt of the record.
          format: int32
        recordId:
          type: string
          description: Gets or sets the record identifier located within the specified
            timeline.
          format: uuid
        timelineId:
          type: string
          description: Gets or sets the timeline identifier which owns the record
            representing this attempt.
          format: uuid
      description: ""
    TimelineRecord:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        attempt:
          type: integer
          description: Attempt number of record.
          format: int32
        changeId:
          type: integer
          description: The change ID.
          format: int32
        currentOperation:
          type: string
          description: A string that indicates the current operation.
        details:
          $ref: '#/components/schemas/TimelineReference'
        errorCount:
          type: integer
          description: The number of errors produced by this operation.
          format: int32
        finishTime:
          type: string
          description: The finish time.
          format: date-time
        id:
          type: string
          description: The ID of the record.
          format: uuid
        identifier:
          type: string
          description: String identifier that is consistent across attempts.
        issues:
          type: array
          items:
            $ref: '#/components/schemas/Issue'
        lastModified:
          type: string
          description: The time the record was last modified.
          format: date-time
        log:
          $ref: '#/components/schemas/BuildLogReference'
        name:
          type: string
          description: The name.
        order:
          type: integer
          description: An ordinal value relative to other records.
          format: int32
        parentId:
          type: string
          description: The ID of the record's parent.
          format: uuid
        percentComplete:
          type: integer
          description: The current completion percentage.
          format: int32
        previousAttempts:
          type: array
          items:
            $ref: '#/components/schemas/TimelineAttempt'
        queueId:
          type: integer
          description: The queue ID of the queue that the operation ran on.
          format: int32
        result:
          type: string
          description: The result.
          enum:
          - succeeded
          - succeededWithIssues
          - failed
          - canceled
          - skipped
          - abandoned
          x-ms-enum:
            name: TaskResult
            values:
            - value: succeeded
              description: ""
            - value: succeededWithIssues
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: abandoned
              description: ""
        resultCode:
          type: string
          description: The result code.
        startTime:
          type: string
          description: The start time.
          format: date-time
        state:
          type: string
          description: The state of the record.
          enum:
          - pending
          - inProgress
          - completed
          x-ms-enum:
            name: TimelineRecordState
            values:
            - value: pending
              description: ""
            - value: inProgress
              description: ""
            - value: completed
              description: ""
        task:
          $ref: '#/components/schemas/TaskReference'
        type:
          type: string
          description: The type of the record.
        url:
          type: string
          description: The REST URL of the timeline record.
        warningCount:
          type: integer
          description: The number of warnings produced by this operation.
          format: int32
        workerName:
          type: string
          description: The name of the agent running the operation.
      description: Represents an entry in a build's timeline.
    TimelineRecordsUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
    TimelineReference:
      type: object
      properties:
        changeId:
          type: integer
          description: The change ID.
          format: int32
        id:
          type: string
          description: The ID of the timeline.
          format: uuid
        url:
          type: string
          description: The REST URL of the timeline.
      description: Represents a reference to a timeline.
    UpdateProjectRetentionSettingModel:
      type: object
      properties:
        artifactsRetention:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
        pullRequestRunRetention:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
        retainRunsPerProtectedBranch:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
        runRetention:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
      description: Contains members for updating the retention settings values. All
        fields are optional.
    UpdateRetentionSettingModel:
      type: object
      properties:
        value:
          type: integer
          format: int32
      description: ""
    UpdateStageParameters:
      type: object
      properties:
        forceRetryAllJobs:
          type: boolean
        state:
          type: string
          enum:
          - cancel
          - retry
          x-ms-enum:
            name: StageUpdateType
            values:
            - value: cancel
              description: ""
            - value: retry
              description: ""
      description: ""
    UpdateTagParameters:
      type: object
      properties:
        tagsToAdd:
          type: array
          items:
            type: string
        tagsToRemove:
          type: array
          items:
            type: string
      description: ""
    VariableGroup:
      description: Represents a variable group.
      allOf:
      - $ref: '#/components/schemas/VariableGroupReference'
    VariableGroupReference:
      type: object
      properties:
        alias:
          type: string
          description: The Name of the variable group.
        id:
          type: integer
          description: The ID of the variable group.
          format: int32
      description: Represents a reference to a variable group.
    VariableMultipliersAgentExecutionOptions:
      description: Represents options for running a phase based on values specified
        by a list of variables.
      allOf:
      - $ref: '#/components/schemas/AgentTargetExecutionOptions'
    VariableMultipliersServerExecutionOptions:
      description: Represents options for running a phase based on values specified
        by a list of variables.
      allOf:
      - $ref: '#/components/schemas/ServerTargetExecutionOptions'
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
    WebApiConnectedServiceRef:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
      description: ""
    WorkspaceMapping:
      type: object
      properties:
        definitionUri:
          type: string
          description: Uri of the associated definition
        depth:
          type: integer
          description: Depth of this mapping
          format: int32
        localItem:
          type: string
          description: local location of the definition
        mappingType:
          type: string
          description: type of workspace mapping
          enum:
          - map
          - cloak
          x-ms-enum:
            name: WorkspaceMappingType
            values:
            - value: map
              description: The path is mapped in the workspace.
            - value: cloak
              description: The path is cloaked in the workspace.
        serverItem:
          type: string
          description: Server location of the definition
        workspaceId:
          type: integer
          description: Id of the workspace
          format: int32
      description: Mapping for a workspace
    WorkspaceTemplate:
      type: object
      properties:
        definitionUri:
          type: string
          description: Uri of the associated definition
        lastModifiedBy:
          type: string
          description: The identity that last modified this template
        lastModifiedDate:
          type: string
          description: The last time this template was modified
          format: date-time
        mappings:
          type: array
          description: List of workspace mappings
          items:
            $ref: '#/components/schemas/WorkspaceMapping'
        workspaceId:
          type: integer
          description: Id of the workspace for this template
          format: int32
      description: ""
    XamlBuildControllerReference:
      type: object
      properties:
        id:
          type: integer
          description: Id of the resource
          format: int32
        name:
          type: string
          description: Name of the linked resource (definition name, controller name,
            etc.)
        url:
          type: string
          description: Full http link to the resource
      description: ""
    XamlBuildDefinition:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DefinitionReference'
    XamlBuildReference:
      type: object
      properties:
        id:
          type: integer
          description: Id of the resource
          format: int32
        name:
          type: string
          description: Name of the linked resource (definition name, controller name,
            etc.)
        url:
          type: string
          description: Full http link to the resource
      description: ""
    XamlBuildServerReference:
      type: object
      properties:
        id:
          type: integer
          description: Id of the resource
          format: int32
        name:
          type: string
          description: Name of the linked resource (definition name, controller name,
            etc.)
        url:
          type: string
          description: Full http link to the resource
      description: ""
    XamlDefinitionReference:
      type: object
      properties:
        id:
          type: integer
          description: Id of the resource
          format: int32
        name:
          type: string
          description: Name of the linked resource (definition name, controller name,
            etc.)
        url:
          type: string
          description: Full http link to the resource
      description: ""
    YamlBuild:
      type: object
      properties:
        yaml:
          type: string
          description: The yaml used to define the build
      description: Represents a yaml build.
    YamlProcess:
      description: Represents a YAML process.
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0' to use
        this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.build: Grants the ability to access build artifacts, including build
              results, definitions, and requests, and the ability to receive notifications
              about build events via service hooks.
            vso.build_execute: Grants the ability to access build artifacts, including
              build results, definitions, and requests, and the ability to queue a
              build, update build properties, and the ability to receive notifications
              about build events via service hooks.
            vso.work: Grants the ability to read work items, queries, boards, area
              and iterations paths, and other work item tracking related metadata.
              Also grants the ability to execute queries, search work items and to
              receive notifications about work item events via service hooks.
x-ms-vss-area: Build
x-ms-vss-resource-area-id: 965220d5-5bb9-42cf-8d67-9b146df2a5a4
x-ms-paths:
  /{collection}/{project}/_apis/build/builds/{buildId}/artifacts?artifactName={artifactName}:
    get:
      tags:
      - Artifacts
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: GetArtifact
      description: Gets a specific artifact for a build.
      operationId: Artifacts_Get Artifact
      produces:
      - application/zip
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: buildId
        description: The ID of the build.
        required: true
        type: integer
        format: int32
      - in: query
        name: artifactName
        description: The name of the artifact.
        required: true
        type: string
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BuildArtifact'
      security:
      - oauth2:
        - vso.build
  /{collection}/{project}/_apis/build/builds/{buildId}/artifacts?artifactName={artifactName}&fileId={fileId}&fileName={fileName}:
    get:
      tags:
      - Artifacts
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: GetFile
      description: Gets a file from the build.
      operationId: Artifacts_Get File
      produces:
      - application/octet-stream
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: buildId
        description: The ID of the build.
        required: true
        type: integer
        format: int32
      - in: query
        name: artifactName
        description: The name of the artifact.
        required: true
        type: string
      - in: query
        name: fileId
        description: The primary key for the file.
        required: true
        type: string
      - in: query
        name: fileName
        description: The name that the file will be set to.
        required: true
        type: string
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            type: string
            format: Stream
      security:
      - oauth2:
        - vso.build
  /{collection}/{project}/_apis/build/retention/leases?userOwnerId={userOwnerId}:
    get:
      tags:
      - Leases
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLeasesByUserId
      description: Returns any leases owned by the specified user, optionally scoped
        to a single pipeline definition and run.
      operationId: Leases_Get Retention Leases By User Id
      produces:
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: query
        name: userOwnerId
        description: The user id to search for.
        required: true
        type: string
        format: uuid
      - in: query
        name: definitionId
        description: An optional parameter to limit the search to a specific pipeline
          definition.
        required: false
        type: integer
        format: int32
      - in: query
        name: runId
        description: An optional parameter to limit the search to a single pipeline
          run. Requires definitionId.
        required: false
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RetentionLease'
      security:
      - oauth2:
        - vso.build
  /{collection}/{project}/_apis/build/retention/leases?:
    get:
      tags:
      - Leases
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLeasesByOwnerId
      description: Returns any leases owned by the specified entity, optionally scoped
        to a single pipeline definition and run.
      operationId: Leases_Get Retention Leases By Owner Id
      produces:
      - application/json
      parameters:
      - in: path
        name: collection
        description: The name of the Azure DevOps collection.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: query
        name: ownerId
        description: ""
        required: false
        type: string
      - in: query
        name: definitionId
        description: An optional parameter to limit the search to a specific pipeline
          definition.
        required: false
        type: integer
        format: int32
      - in: query
        name: runId
        description: An optional parameter to limit the search to a single pipeline
          run. Requires definitionId.
        required: false
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RetentionLease'
      security:
      - oauth2:
        - vso.build
x-ms-parameterized-host:
  hostTemplate: '{instance}'
  parameters:
  - name: instance
    description: TFS server name ({server:port})
    required: true
    type: string
    in: path
