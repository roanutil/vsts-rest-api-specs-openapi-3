openapi: 3.0.1
info:
  title: TestResults
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "7.0"
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://vstmr.dev.azure.com/
security:
- accessToken: []
tags:
- name: Result Meta Data
  description: Work with test results MetaData programmatically using the REST APIs
    for Azure dev ops and Team Foundation Server.
- name: Testlog
- name: Testlogstoreendpoint
paths:
  /{organization}/{project}/_apis/testresults/results/resultmetadata:
    post:
      tags:
      - Result Meta Data
      description: Get list of test Result meta data details for corresponding testcasereferenceId
      operationId: Result Meta Data_Query
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: detailsToInclude
        in: query
        description: Details to include with test results metadata. Default is None.
          Other values are FlakyIdentifiers.
        schema:
          type: string
          enum:
          - none
          - flakyIdentifiers
          x-ms-enum:
            name: ResultMetaDataDetails
            values:
            - value: none
              description: Core fields of test result metadata.
            - value: flakyIdentifiers
              description: Test FlakyIdentifiers details in test result metadata.
        x-ms-enum:
          name: ResultMetaDataDetails
          values:
          - value: none
            description: Core fields of test result metadata.
          - value: flakyIdentifiers
            description: Test FlakyIdentifiers details in test result metadata.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.4'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: TestCaseReference Ids of the test Result to be queried, comma
          separated list of valid ids (limit no. of ids 200).
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResultMetaData'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 7.0-preview.4
      x-ms-vss-resource: resultMetaData
      x-ms-vss-method: QueryTestResultsMetaData
      x-ms-preview: true
      x-ms-examples:
        Get test result metadata:
          $ref: ./httpExamples/ResultMetaData/Post_testresultmetadata_6_0.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/testresults/results/resultmetadata/{testCaseReferenceId}:
    patch:
      tags:
      - Result Meta Data
      description: Update properties of test result meta data
      operationId: Result Meta Data_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: testCaseReferenceId
        in: path
        description: TestCaseReference Id of Test Result to be updated.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.4'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: TestResultMetaData update input TestResultMetaDataUpdateInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestResultMetaDataUpdateInput'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResultMetaData'
      x-ms-docs-override-version: 7.0-preview.4
      x-ms-vss-resource: resultMetaData
      x-ms-vss-method: UpdateTestResultsMetaData
      x-ms-preview: true
      x-ms-examples:
        Update test result metadata:
          $ref: ./httpExamples/ResultMetaData/Patch_testresultsmetadata_6_0.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/testresults/runs/{runId}/results/{resultId}/testlog:
    get:
      tags:
      - Testlog
      description: Get list of test result attachments reference
      operationId: Testlog_Get Test Result Logs
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Id of the test run that contains the result
        required: true
        schema:
          type: integer
          format: int32
      - name: resultId
        in: path
        description: Id of the test result
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        description: type of attachments to get
        required: true
        schema:
          type: string
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - name: directoryPath
        in: query
        description: directory path of attachments to get
        schema:
          type: string
      - name: fileNamePrefix
        in: query
        description: file name prefix to filter the list of attachment
        schema:
          type: string
      - name: fetchMetaData
        in: query
        description: Default is false, set if metadata is needed
        schema:
          type: boolean
      - name: top
        in: query
        description: Numbe of attachments reference to return
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: header
        description: Header to pass the continuationToken
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestLog'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlog
      x-ms-vss-method: GetTestResultLogsAsync
      x-ms-preview: true
      x-ms-examples:
        Get test logs for result:
          $ref: ./httpExamples/testlog/Get_testlog_result.json
  /{organization}/{project}/_apis/testresults/runs/{runId}/results/{resultId}/testlogstoreendpoint:
    get:
      tags:
      - Testlogstoreendpoint
      description: Get SAS Uri of a test results attachment
      operationId: Testlogstoreendpoint_Get Test Log Store Endpoint Details For Result
        Log
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Id of the test run that contains result
        required: true
        schema:
          type: integer
          format: int32
      - name: resultId
        in: path
        description: Id of the test result whose files need to be downloaded
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        description: type of the file
        required: true
        schema:
          type: string
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - name: filePath
        in: query
        description: filePath for which sas uri is needed
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestLogStoreEndpointDetails'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlogstoreendpoint
      x-ms-vss-method: GetTestLogStoreEndpointDetailsForResultLog
      x-ms-preview: true
      x-ms-examples:
        Get file endpoint details:
          $ref: ./httpExamples/testlogstoreendpoint/Get_testlogstore_results_endpoint.json
    post:
      tags:
      - Testlogstoreendpoint
      description: Create empty file for a result and Get Sas uri for the file
      operationId: Testlogstoreendpoint_Test Log Store Endpoint Details For Result
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Id of the test run that contains the result
        required: true
        schema:
          type: integer
          format: int32
      - name: resultId
        in: path
        description: Id of the test results that contains sub result
        required: true
        schema:
          type: integer
          format: int32
      - name: subResultId
        in: query
        description: Id of the test sub result whose file sas uri is needed
        required: true
        schema:
          type: integer
          format: int32
      - name: filePath
        in: query
        description: file path inside the sub result for which sas uri is needed
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: Type of the file for download
        required: true
        schema:
          type: string
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestLogStoreEndpointDetails'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlogstoreendpoint
      x-ms-vss-method: TestLogStoreEndpointDetailsForResult
      x-ms-preview: true
      x-ms-examples:
        Post file endpoint details for result:
          $ref: ./httpExamples/testlogstoreendpoint/Post_testlogstore_result_endpoint.json
  /{organization}/{project}/_apis/testresults/runs/{runId}/testlog:
    get:
      tags:
      - Testlog
      description: Get list of test run attachments reference
      operationId: Testlog_Get Test Run Logs
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Id of the test run
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        description: type of the attachments to get
        required: true
        schema:
          type: string
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - name: directoryPath
        in: query
        description: directory path for which attachments are needed
        schema:
          type: string
      - name: fileNamePrefix
        in: query
        description: file name prefix to filter the list of attachment
        schema:
          type: string
      - name: fetchMetaData
        in: query
        description: Default is false, set if metadata is needed
        schema:
          type: boolean
      - name: top
        in: query
        description: Number of attachments reference to return
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: header
        description: Header to pass the continuationToken
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestLog'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlog
      x-ms-vss-method: GetTestRunLogsAsync
      x-ms-preview: true
      x-ms-examples:
        Get test logs for run:
          $ref: ./httpExamples/testlog/Get_testlog_run.json
  /{organization}/{project}/_apis/testresults/runs/{runId}/testlogstoreendpoint:
    get:
      tags:
      - Testlogstoreendpoint
      description: Get SAS Uri of a test run attachment
      operationId: Testlogstoreendpoint_Get Test Log Store Endpoint Details For Run
        Log
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Id of the test run whose file has to be downloaded
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        description: type of the file
        required: true
        schema:
          type: string
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - name: filePath
        in: query
        description: filePath for which sas uri is needed
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestLogStoreEndpointDetails'
      security:
      - oauth2:
        - vso.test
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlogstoreendpoint
      x-ms-vss-method: GetTestLogStoreEndpointDetailsForRunLog
      x-ms-preview: true
      x-ms-examples:
        Get file endpoint details:
          $ref: ./httpExamples/testlogstoreendpoint/Get_testlogstore_runs_endpoint.json
    post:
      tags:
      - Testlogstoreendpoint
      description: Create empty file for a run and Get Sas uri for the file
      operationId: Testlogstoreendpoint_Test Log Store Endpoint Details For Run
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: runId
        in: path
        description: Id of the run to get endpoint details
        required: true
        schema:
          type: integer
          format: int32
      - name: testLogStoreOperationType
        in: query
        description: Type of operation to perform using sas uri
        required: true
        schema:
          type: string
          enum:
          - read
          x-ms-enum:
            name: TestLogStoreOperationType
            values:
            - value: read
              description: Operation is scoped to read data only.
        x-ms-enum:
          name: TestLogStoreOperationType
          values:
          - value: read
            description: Operation is scoped to read data only.
      - name: filePath
        in: query
        description: file path to create an empty file
        schema:
          type: string
      - name: type
        in: query
        description: Default is GeneralAttachment, type of empty file to be created
        schema:
          type: string
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestLogStoreEndpointDetails'
      security:
      - oauth2:
        - vso.test_write
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlogstoreendpoint
      x-ms-vss-method: TestLogStoreEndpointDetailsForRun
      x-ms-preview: true
      x-ms-examples:
        Post file endpoint details:
          $ref: ./httpExamples/testlogstoreendpoint/Post_testlogstore_run_endpoint.json
components:
  schemas:
    AggregatedDataForResultTrend:
      type: object
      properties:
        duration:
          type: string
          description: This is tests execution duration.
          format: TimeSpan
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        runSummaryByState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByState'
        testResultsContext:
          $ref: '#/components/schemas/TestResultsContext'
        totalTests:
          type: integer
          format: int32
      description: ""
    AggregatedResultDetailsByOutcome:
      type: object
      properties:
        count:
          type: integer
          description: Number of results for current outcome.
          format: int32
        duration:
          type: string
          description: Time taken by results.
          format: TimeSpan
        outcome:
          type: string
          description: Test result outcome
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: Test has not been completed, or the test type does not
                report pass/failure.
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: Test was executed, but there were issues. Issues may involve
                exceptions or failed assertions.
            - value: inconclusive
              description: Test has completed, but we can't say if it passed or failed.
                May be used for aborted tests...
            - value: timeout
              description: The test timed out
            - value: aborted
              description: Test was aborted. This was not caused by a user gesture,
                but rather by a framework decision.
            - value: blocked
              description: Test had it chance for been executed but was not, as ITestElement.IsRunnable
                == false.
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
        rerunResultCount:
          type: integer
          description: Number of results on rerun
          format: int32
      description: Result deatils for a particular test result outcome.
    AggregatedResultsAnalysis:
      type: object
      properties:
        duration:
          type: string
          format: TimeSpan
        notReportedResultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        previousContext:
          $ref: '#/components/schemas/TestResultsContext'
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        resultsDifference:
          $ref: '#/components/schemas/AggregatedResultsDifference'
        runSummaryByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByOutcome'
        runSummaryByState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByState'
        totalTests:
          type: integer
          format: int32
      description: ""
    AggregatedResultsByOutcome:
      type: object
      properties:
        count:
          type: integer
          format: int32
        duration:
          type: string
          format: TimeSpan
        groupByField:
          type: string
        groupByValue:
          type: object
          properties: {}
        outcome:
          type: string
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: Test has not been completed, or the test type does not
                report pass/failure.
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: Test was executed, but there were issues. Issues may involve
                exceptions or failed assertions.
            - value: inconclusive
              description: Test has completed, but we can't say if it passed or failed.
                May be used for aborted tests...
            - value: timeout
              description: The test timed out
            - value: aborted
              description: Test was aborted. This was not caused by a user gesture,
                but rather by a framework decision.
            - value: blocked
              description: Test had it chance for been executed but was not, as ITestElement.IsRunnable
                == false.
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
        rerunResultCount:
          type: integer
          format: int32
      description: ""
    AggregatedResultsDifference:
      type: object
      properties:
        increaseInDuration:
          type: string
          format: TimeSpan
        increaseInFailures:
          type: integer
          format: int32
        increaseInNonImpactedTests:
          type: integer
          format: int32
        increaseInOtherTests:
          type: integer
          format: int32
        increaseInPassedTests:
          type: integer
          format: int32
        increaseInTotalTests:
          type: integer
          format: int32
      description: ""
    AggregatedRunsByOutcome:
      type: object
      properties:
        outcome:
          type: string
          enum:
          - passed
          - failed
          - notImpacted
          - others
          x-ms-enum:
            name: TestRunOutcome
            values:
            - value: passed
              description: Run with zero failed tests and has at least one impacted
                test
            - value: failed
              description: Run with at-least one failed test.
            - value: notImpacted
              description: Run with no impacted tests.
            - value: others
              description: Runs with All tests in other category.
        runsCount:
          type: integer
          format: int32
      description: ""
    AggregatedRunsByState:
      type: object
      properties:
        resultsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        runsCount:
          type: integer
          format: int32
        state:
          type: string
          enum:
          - unspecified
          - notStarted
          - inProgress
          - completed
          - aborted
          - waiting
          - needsInvestigation
          x-ms-enum:
            name: TestRunState
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: notStarted
              description: The run is still being created.  No tests have started
                yet.
            - value: inProgress
              description: Tests are running.
            - value: completed
              description: All tests have completed or been skipped.
            - value: aborted
              description: Run is stopped and remaining tests have been aborted
            - value: waiting
              description: Run is currently initializing This is a legacy state and
                should not be used any more
            - value: needsInvestigation
              description: Run requires investigation because of a test point failure
                This is a legacy state and should not be used any more
      description: ""
    Attachment:
      type: object
      properties:
        compressionType:
          type: string
        fileName:
          type: string
        stream:
          type: string
          format: Stream
      description: ""
    BuildConfiguration:
      type: object
      properties:
        branchName:
          type: string
          description: Branch name for which build is generated.
        buildDefinitionId:
          type: integer
          description: BuildDefinitionId for build.
          format: int32
        buildSystem:
          type: string
          description: Build system.
        creationDate:
          type: string
          description: Build Creation Date.
          format: date-time
        flavor:
          type: string
          description: Build flavor (eg Build/Release).
        id:
          type: integer
          description: BuildConfiguration Id.
          format: int32
        number:
          type: string
          description: Build Number.
        platform:
          type: string
          description: BuildConfiguration Platform.
        project:
          $ref: '#/components/schemas/ShallowReference'
        repositoryGuid:
          type: string
          description: Repository Guid for the Build.
        repositoryType:
          type: string
          description: Repository Type (eg. TFSGit).
        sourceVersion:
          type: string
          description: Source Version(/first commit) for the build was triggered.
        targetBranchName:
          type: string
          description: Target BranchName.
        uri:
          type: string
          description: Build Uri.
      description: BuildConfiguration Details.
    BuildCoverage:
      type: object
      properties:
        codeCoverageFileUrl:
          type: string
          description: Code Coverage File Url
        configuration:
          $ref: '#/components/schemas/BuildConfiguration'
        lastError:
          type: string
          description: Last Error
        modules:
          type: array
          description: List of Modules
          items:
            $ref: '#/components/schemas/ModuleCoverage'
        state:
          type: string
          description: State
      description: Build Coverage Detail
    BuildReference:
      type: object
      properties:
        branchName:
          type: string
          description: Branch name.
        buildSystem:
          type: string
          description: Build system.
        definitionId:
          type: integer
          description: Build Definition ID.
          format: int32
        id:
          type: integer
          description: Build ID.
          format: int32
        number:
          type: string
          description: Build Number.
        repositoryId:
          type: string
          description: Repository ID.
        uri:
          type: string
          description: Build URI.
      description: Reference to a build.
    CodeCoverageData:
      type: object
      properties:
        buildFlavor:
          type: string
          description: Flavor of build for which data is retrieved/published
        buildPlatform:
          type: string
          description: Platform of build for which data is retrieved/published
        coverageStats:
          type: array
          description: List of coverage data for the build
          items:
            $ref: '#/components/schemas/CodeCoverageStatistics'
      description: Represents the build configuration (platform, flavor) and coverage
        data for the build
    CodeCoverageStatistics:
      type: object
      properties:
        covered:
          type: integer
          description: Covered units
          format: int32
        delta:
          type: number
          description: Delta of coverage
          format: double
        isDeltaAvailable:
          type: boolean
          description: Is delta valid
        label:
          type: string
          description: Label of coverage data ("Blocks", "Statements", "Modules",
            etc.)
        position:
          type: integer
          description: Position of label
          format: int32
        total:
          type: integer
          description: Total units
          format: int32
      description: Represents the code coverage statistics for a particular coverage
        label (modules, statements, blocks, etc.)
    CodeCoverageSummary:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/ShallowReference'
        coverageData:
          type: array
          description: List of coverage data and details for the build
          items:
            $ref: '#/components/schemas/CodeCoverageData'
        deltaBuild:
          $ref: '#/components/schemas/ShallowReference'
        status:
          type: string
          description: Uri of build against which difference in coverage is computed
          enum:
          - none
          - inProgress
          - completed
          - finalized
          - pending
          - updateRequestQueued
          x-ms-enum:
            name: CoverageSummaryStatus
            values:
            - value: none
              description: No coverage status
            - value: inProgress
              description: The summary evaluation is in progress
            - value: completed
              description: The summary evaluation for the previous request is completed.
                Summary can change in future
            - value: finalized
              description: The summary evaluation is finalized and won't change
            - value: pending
              description: The summary evaluation is pending
            - value: updateRequestQueued
              description: Summary evaluation may be ongoing but another merge has
                been requested.
      description: Represents the code coverage summary results Used to publish or
        retrieve code coverage summary against a build
    CoverageStatistics:
      type: object
      properties:
        blocksCovered:
          type: integer
          format: int32
        blocksNotCovered:
          type: integer
          format: int32
        linesCovered:
          type: integer
          format: int32
        linesNotCovered:
          type: integer
          format: int32
        linesPartiallyCovered:
          type: integer
          format: int32
      description: ""
    CustomTestField:
      type: object
      properties:
        fieldName:
          type: string
          description: Field Name.
        value:
          type: object
          properties: {}
          description: Field value.
      description: 'A custom field information. Allowed Key : Value pairs - ( AttemptId:
        int value, IsTestResultFlaky: bool)'
    DtlEnvironmentDetails:
      type: object
      properties:
        csmContent:
          type: string
        csmParameters:
          type: string
        subscriptionName:
          type: string
      description: This is a temporary class to provide the details for the test run
        environment.
    FailingSince:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildReference'
        date:
          type: string
          description: Time since failing(UTC).
          format: date-time
        release:
          $ref: '#/components/schemas/ReleaseReference'
      description: Failing since information of a test result.
    FieldDetailsForTestResults:
      type: object
      properties:
        fieldName:
          type: string
          description: Group by field name
        groupsForField:
          type: array
          description: Group by field values
          items:
            type: object
            properties: {}
      description: ""
    FileCoverageRequest:
      type: object
      properties:
        filePath:
          type: string
        pullRequestBaseIterationId:
          type: integer
          format: int32
        pullRequestId:
          type: integer
          format: int32
        pullRequestIterationId:
          type: integer
          format: int32
        repoId:
          type: string
      description: ""
    FlakyDetection:
      type: object
      properties:
        flakyDetectionPipelines:
          $ref: '#/components/schemas/FlakyDetectionPipelines'
        flakyDetectionType:
          type: string
          description: FlakyDetectionType defines Detection type i.e. 1. System or
            2. Manual.
          enum:
          - custom
          - system
          x-ms-enum:
            name: FlakyDetectionType
            values:
            - value: custom
              description: Custom defines manual detection type.
            - value: system
              description: Defines System detection type.
      description: ""
    FlakyDetectionPipelines:
      type: object
      properties:
        allowedPipelines:
          type: array
          description: AllowedPipelines - List All Pipelines allowed for detection.
          items:
            type: integer
            format: int32
        isAllPipelinesAllowed:
          type: boolean
          description: IsAllPipelinesAllowed if users configure all system's pipelines.
      description: ""
    FlakySettings:
      type: object
      properties:
        flakyDetection:
          $ref: '#/components/schemas/FlakyDetection'
        flakyInSummaryReport:
          type: boolean
          description: FlakyInSummaryReport defines flaky data should show in summary
            report or not.
        isFlakyBugCreated:
          type: boolean
          description: IsFlakyBugCreated defines if there is any bug that has been
            created with flaky testresult.
        manualMarkUnmarkFlaky:
          type: boolean
          description: ManualMarkUnmarkFlaky defines manual marking unmarking of flaky
            testcase.
      description: ""
    FunctionCoverage:
      type: object
      properties:
        class:
          type: string
        name:
          type: string
        namespace:
          type: string
        sourceFile:
          type: string
        statistics:
          $ref: '#/components/schemas/CoverageStatistics'
      description: ""
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
        displayName:
          type: string
        url:
          type: string
      description: ""
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    JobReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of the job
          format: int32
        jobName:
          type: string
          description: Matrixing in YAML generates copies of a job with different
            inputs in matrix. JobName is the name of those input. Maximum supported
            length for name is 256 character.
      description: Job in pipeline. This is related to matrixing in YAML.
    ModuleCoverage:
      type: object
      properties:
        blockCount:
          type: integer
          format: int32
        blockData:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
        fileUrl:
          type: string
          description: Code Coverage File Url
        functions:
          type: array
          items:
            $ref: '#/components/schemas/FunctionCoverage'
        name:
          type: string
        signature:
          type: string
          format: uuid
        signatureAge:
          type: integer
          format: int32
        statistics:
          $ref: '#/components/schemas/CoverageStatistics'
      description: ""
    NewTestResultLoggingSettings:
      type: object
      properties:
        logNewTests:
          type: boolean
          description: LogNewTests defines whether or not we will record new test
            cases coming into the system
      description: ""
    PhaseReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of the phase
          format: int32
        phaseName:
          type: string
          description: Name of the phase. Maximum supported length for name is 256
            character.
      description: Phase in pipeline
    PipelineReference:
      type: object
      properties:
        jobReference:
          $ref: '#/components/schemas/JobReference'
        phaseReference:
          $ref: '#/components/schemas/PhaseReference'
        pipelineId:
          type: integer
          description: Reference of the pipeline with which this pipeline instance
            is related.
          format: int32
        stageReference:
          $ref: '#/components/schemas/StageReference'
      description: Pipeline reference
    PipelineTestMetrics:
      type: object
      properties:
        currentContext:
          $ref: '#/components/schemas/PipelineReference'
        resultsAnalysis:
          $ref: '#/components/schemas/ResultsAnalysis'
        resultSummary:
          $ref: '#/components/schemas/ResultSummary'
        runSummary:
          $ref: '#/components/schemas/RunSummary'
        summaryAtChild:
          type: array
          description: Summary at child node.
          items:
            $ref: '#/components/schemas/PipelineTestMetrics'
      description: Test summary of a pipeline instance.
    QueryModel:
      type: object
      properties:
        query:
          type: string
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
      description: ""
    ReleaseReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Number of Release Attempt.
          format: int32
        creationDate:
          type: string
          description: Release Creation Date(UTC).
          format: date-time
        definitionId:
          type: integer
          description: Release definition ID.
          format: int32
        environmentCreationDate:
          type: string
          description: Environment creation Date(UTC).
          format: date-time
        environmentDefinitionId:
          type: integer
          description: Release environment definition ID.
          format: int32
        environmentDefinitionName:
          type: string
          description: Release environment definition name.
        environmentId:
          type: integer
          description: Release environment ID.
          format: int32
        environmentName:
          type: string
          description: Release environment name.
        id:
          type: integer
          description: Release ID.
          format: int32
        name:
          type: string
          description: Release name.
      description: Reference to a release.
    ResultsAnalysis:
      type: object
      properties:
        previousContext:
          $ref: '#/components/schemas/PipelineReference'
        resultsDifference:
          $ref: '#/components/schemas/AggregatedResultsDifference'
        testFailuresAnalysis:
          $ref: '#/components/schemas/TestResultFailuresAnalysis'
      description: Results insights for runs with state completed and NeedInvestigation.
    ResultsFilter:
      type: object
      properties:
        automatedTestName:
          type: string
        branch:
          type: string
        executedIn:
          type: string
          enum:
          - any
          - tcm
          - tfs
          x-ms-enum:
            name: Service
            values:
            - value: any
              description: ""
            - value: tcm
              description: ""
            - value: tfs
              description: ""
        groupBy:
          type: string
        maxCompleteDate:
          type: string
          format: date-time
        resultsCount:
          type: integer
          format: int32
        testCaseId:
          type: integer
          format: int32
        testCaseReferenceIds:
          type: array
          items:
            type: integer
            format: int32
        testPlanId:
          type: integer
          format: int32
        testPointIds:
          type: array
          items:
            type: integer
            format: int32
        testResultsContext:
          $ref: '#/components/schemas/TestResultsContext'
        trendDays:
          type: integer
          format: int32
      description: ""
    ResultsSummaryByOutcome:
      type: object
      properties:
        aggregatedResultDetailsByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultDetailsByOutcome'
          description: Aggregated result details for each test result outcome.
        duration:
          type: string
          description: Time taken by results.
          format: TimeSpan
        notReportedTestCount:
          type: integer
          description: Total number of not reported test results.
          format: int32
        totalTestCount:
          type: integer
          description: Total number of test results. (It includes NotImpacted test
            results as well which need to exclude while calculating pass/fail test
            result percentage).
          format: int32
      description: Result summary by the outcome of test results.
    ResultSummary:
      type: object
      properties:
        resultSummaryByRunState:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ResultsSummaryByOutcome'
          description: Result summary of pipeline, group by TestRun state.
      description: Summary of results for a pipeline instance.
    RunCreateModel:
      type: object
      properties:
        automated:
          type: boolean
          description: true if test run is automated, false otherwise. By default
            it will be false.
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildDropLocation:
          type: string
          description: Drop location of the build used for test run.
        buildFlavor:
          type: string
          description: 'Flavor of the build used for test run. (E.g: Release, Debug)'
        buildPlatform:
          type: string
          description: 'Platform of the build used for test run. (E.g.: x86, amd64)'
        buildReference:
          $ref: '#/components/schemas/BuildConfiguration'
        comment:
          type: string
          description: Comments entered by those analyzing the run.
        completeDate:
          type: string
          description: Completed date time of the run.
        configurationIds:
          type: array
          description: IDs of the test configurations associated with the run.
          items:
            type: integer
            format: int32
        controller:
          type: string
          description: Name of the test controller used for automated run.
        customTestFields:
          type: array
          description: Additional properties of test Run.
          items:
            $ref: '#/components/schemas/CustomTestField'
        dtlAutEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlTestEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dueDate:
          type: string
          description: Due date and time for test run.
        environmentDetails:
          $ref: '#/components/schemas/DtlEnvironmentDetails'
        errorMessage:
          type: string
          description: Error message associated with the run.
        filter:
          $ref: '#/components/schemas/RunFilter'
        iteration:
          type: string
          description: The iteration in which to create the run. Root iteration of
            the team project will be default
        name:
          type: string
          description: Name of the test run.
        owner:
          $ref: '#/components/schemas/IdentityRef'
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        plan:
          $ref: '#/components/schemas/ShallowReference'
        pointIds:
          type: array
          description: IDs of the test points to use in the run.
          items:
            type: integer
            format: int32
        releaseEnvironmentUri:
          type: string
          description: URI of release environment associated with the run.
        releaseReference:
          $ref: '#/components/schemas/ReleaseReference'
        releaseUri:
          type: string
          description: URI of release associated with the run.
        runSummary:
          type: array
          description: Run summary for run Type = NoConfigRun.
          items:
            $ref: '#/components/schemas/RunSummaryModel'
        runTimeout:
          type: string
          description: Timespan till the run times out.
          format: TimeSpan
        sourceWorkflow:
          type: string
          description: SourceWorkFlow(CI/CD) of the test run.
        startDate:
          type: string
          description: Start date time of the run.
        state:
          type: string
          description: The state of the run. Type TestRunState Valid states - NotStarted,
            InProgress, Waiting
        tags:
          type: array
          description: Tags to attach with the test run, maximum of 5 tags can be
            added to run.
          items:
            $ref: '#/components/schemas/TestTag'
        testConfigurationsMapping:
          type: string
          description: TestConfigurationMapping of the test run.
        testEnvironmentId:
          type: string
          description: ID of the test environment associated with the run.
        testSettings:
          $ref: '#/components/schemas/ShallowReference'
        type:
          type: string
          description: 'Type of the run(RunType) Valid Values : (Unspecified, Normal,
            Blocking, Web, MtrRunInitiatedFromWeb, RunWithDtlEnv, NoConfigRun)'
      description: Test run create details.
    RunFilter:
      type: object
      properties:
        sourceFilter:
          type: string
          description: filter for the test case sources (test containers)
        testCaseFilter:
          type: string
          description: filter for the test cases
      description: This class is used to provide the filters used for discovery
    RunStatistic:
      type: object
      properties:
        count:
          type: integer
          description: Test result count fo the given outcome.
          format: int32
        outcome:
          type: string
          description: Test result outcome
        resolutionState:
          $ref: '#/components/schemas/TestResolutionState'
        resultMetadata:
          type: string
          description: ResultMetadata for the given outcome/count.
          enum:
          - rerun
          - flaky
          x-ms-enum:
            name: ResultMetadata
            values:
            - value: rerun
              description: Rerun metadata
            - value: flaky
              description: Flaky metadata
        state:
          type: string
          description: State of the test run
      description: Test run statistics per outcome.
    RunSummary:
      type: object
      properties:
        duration:
          type: string
          description: Total time taken by runs with state completed and NeedInvestigation.
          format: TimeSpan
        noConfigRunsCount:
          type: integer
          description: NoConfig runs count.
          format: int32
        runSummaryByOutcome:
          type: object
          additionalProperties:
            type: integer
            format: int32
          description: Runs count by outcome for runs with state completed and NeedInvestigation
            runs.
        runSummaryByState:
          type: object
          additionalProperties:
            type: integer
            format: int32
          description: Runs count by state.
        totalRunsCount:
          type: integer
          description: Total runs count.
          format: int32
      description: Summary of runs for a pipeline instance.
    RunSummaryModel:
      type: object
      properties:
        duration:
          type: integer
          description: Total time taken in milliseconds.
          format: int64
        resultCount:
          type: integer
          description: Number of results for Outcome TestOutcome
          format: int32
        testOutcome:
          type: string
          description: Summary is based on outcome
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: Test has not been completed, or the test type does not
                report pass/failure.
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: Test was executed, but there were issues. Issues may involve
                exceptions or failed assertions.
            - value: inconclusive
              description: Test has completed, but we can't say if it passed or failed.
                May be used for aborted tests...
            - value: timeout
              description: The test timed out
            - value: aborted
              description: Test was aborted. This was not caused by a user gesture,
                but rather by a framework decision.
            - value: blocked
              description: Test had it chance for been executed but was not, as ITestElement.IsRunnable
                == false.
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
      description: Run summary for each output type of test.
    RunUpdateModel:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildDropLocation:
          type: string
          description: Drop location of the build used for test run.
        buildFlavor:
          type: string
          description: 'Flavor of the build used for test run. (E.g: Release, Debug)'
        buildPlatform:
          type: string
          description: 'Platform of the build used for test run. (E.g.: x86, amd64)'
        comment:
          type: string
          description: Comments entered by those analyzing the run.
        completedDate:
          type: string
          description: Completed date time of the run.
        controller:
          type: string
          description: Name of the test controller used for automated run.
        deleteInProgressResults:
          type: boolean
          description: true to delete inProgess Results , false otherwise.
        dtlAutEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironmentDetails:
          $ref: '#/components/schemas/DtlEnvironmentDetails'
        dueDate:
          type: string
          description: Due date and time for test run.
        errorMessage:
          type: string
          description: Error message associated with the run.
        iteration:
          type: string
          description: The iteration in which to create the run.
        logEntries:
          type: array
          description: Log entries associated with the run. Use a comma-separated
            list of multiple log entry objects. { logEntry }, { logEntry }, ...
          items:
            $ref: '#/components/schemas/TestMessageLogDetails'
        name:
          type: string
          description: Name of the test run.
        releaseEnvironmentUri:
          type: string
          description: URI of release environment associated with the run.
        releaseUri:
          type: string
          description: URI of release associated with the run.
        runSummary:
          type: array
          description: Run summary for run Type = NoConfigRun.
          items:
            $ref: '#/components/schemas/RunSummaryModel'
        sourceWorkflow:
          type: string
          description: SourceWorkFlow(CI/CD) of the test run.
        startedDate:
          type: string
          description: Start date time of the run.
        state:
          type: string
          description: The state of the test run Below are the valid values - NotStarted,
            InProgress, Completed, Aborted, Waiting
        substate:
          type: string
          description: The types of sub states for test run.
          enum:
          - none
          - creatingEnvironment
          - runningTests
          - canceledByUser
          - abortedBySystem
          - timedOut
          - pendingAnalysis
          - analyzed
          - cancellationInProgress
          x-ms-enum:
            name: TestRunSubstate
            values:
            - value: none
              description: Run with noState.
            - value: creatingEnvironment
              description: Run state while Creating Environment.
            - value: runningTests
              description: Run state while Running Tests.
            - value: canceledByUser
              description: Run state while Creating Environment.
            - value: abortedBySystem
              description: Run state when it is Aborted By the System.
            - value: timedOut
              description: Run state when run has timedOut.
            - value: pendingAnalysis
              description: Run state while Pending Analysis.
            - value: analyzed
              description: Run state after being Analysed.
            - value: cancellationInProgress
              description: Run state when cancellation is in Progress.
        tags:
          type: array
          description: Tags to attach with the test run.
          items:
            $ref: '#/components/schemas/TestTag'
        testEnvironmentId:
          type: string
          description: ID of the test environment associated with the run.
        testSettings:
          $ref: '#/components/schemas/ShallowReference'
      description: ""
    ShallowReference:
      type: object
      properties:
        id:
          type: string
          description: ID of the resource
        name:
          type: string
          description: Name of the linked resource (definition name, controller name,
            etc.)
        url:
          type: string
          description: Full http link to the resource
      description: An abstracted reference to some other resource. This class is used
        to provide the build data contracts with a uniform way to reference other
        resources in a way that provides easy traversal through links.
    ShallowTestCaseResult:
      type: object
      properties:
        automatedTestName:
          type: string
        automatedTestStorage:
          type: string
        durationInMs:
          type: number
          format: double
        id:
          type: integer
          format: int32
        isReRun:
          type: boolean
        outcome:
          type: string
        owner:
          type: string
        priority:
          type: integer
          format: int32
        refId:
          type: integer
          format: int32
        runId:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        testCaseTitle:
          type: string
      description: ""
    SharedStepModel:
      type: object
      properties:
        id:
          type: integer
          description: WorkItem shared step ID.
          format: int32
        revision:
          type: integer
          description: Shared step workitem revision.
          format: int32
      description: Reference to shared step workitem.
    StageReference:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt number of stage
          format: int32
        stageName:
          type: string
          description: Name of the stage. Maximum supported length for name is 256
            character.
      description: Stage in pipeline
    TeamProjectReference:
      type: object
      properties:
        abbreviation:
          type: string
        defaultTeamImageUrl:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
        lastUpdateTime:
          type: string
          format: date-time
        name:
          type: string
        revision:
          type: integer
          format: int64
        state:
          type: string
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: ""
            - value: new
              description: ""
            - value: wellFormed
              description: ""
            - value: createPending
              description: ""
            - value: all
              description: ""
            - value: unchanged
              description: ""
            - value: deleted
              description: ""
        url:
          type: string
        visibility:
          type: string
          enum:
          - private
          - public
          x-ms-enum:
            name: ProjectVisibility
            values:
            - value: private
              description: ""
            - value: public
              description: ""
      description: ""
    TestActionResultModel:
      description: Represents a test step result.
      allOf:
      - $ref: '#/components/schemas/TestResultModelBase'
    TestAttachment:
      type: object
      properties:
        attachmentType:
          type: string
          description: Attachment type.
          enum:
          - generalAttachment
          - codeCoverage
          - consoleLog
          x-ms-enum:
            name: AttachmentType
            values:
            - value: generalAttachment
              description: Attachment type GeneralAttachment , use this as default
                type unless you have other type.
            - value: codeCoverage
              description: Attachment type CodeCoverage.
            - value: consoleLog
              description: Attachment type ConsoleLog.
        comment:
          type: string
          description: Comment associated with attachment.
        createdDate:
          type: string
          description: Attachment created date.
          format: date-time
        fileName:
          type: string
          description: Attachment file name
        id:
          type: integer
          description: ID of the attachment.
          format: int32
        size:
          type: integer
          description: Attachment size.
          format: int64
        url:
          type: string
          description: Attachment Url.
      description: ""
    TestAttachmentReference:
      type: object
      properties:
        id:
          type: integer
          description: ID of the attachment.
          format: int32
        url:
          type: string
          description: Url to download the attachment.
      description: Reference to test attachment.
    TestAttachmentRequestModel:
      type: object
      properties:
        attachmentType:
          type: string
          description: Attachment type By Default it will be GeneralAttachment. It
            can be one of the following type. { GeneralAttachment, AfnStrip, BugFilingData,
            CodeCoverage, IntermediateCollectorData, RunConfig, TestImpactDetails,
            TmiTestRunDeploymentFiles, TmiTestRunReverseDeploymentFiles, TmiTestResultDetail,
            TmiTestRunSummary }
        comment:
          type: string
          description: Comment associated with attachment
        fileName:
          type: string
          description: Attachment filename
        stream:
          type: string
          description: Base64 encoded file stream
      description: Test attachment request model
    TestCaseResult:
      type: object
      properties:
        afnStripId:
          type: integer
          description: Test attachment ID of action recording.
          format: int32
        area:
          $ref: '#/components/schemas/ShallowReference'
        associatedBugs:
          type: array
          description: Reference to bugs linked to test result.
          items:
            $ref: '#/components/schemas/ShallowReference'
        automatedTestId:
          type: string
          description: ID representing test method in a dll.
        automatedTestName:
          type: string
          description: Fully qualified name of test executed.
        automatedTestStorage:
          type: string
          description: Container to which test belongs.
        automatedTestType:
          type: string
          description: Type of automated test.
        automatedTestTypeId:
          type: string
          description: TypeId of automated test.
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildReference:
          $ref: '#/components/schemas/BuildReference'
        comment:
          type: string
          description: Comment in a test result with maxSize= 1000 chars.
        completedDate:
          type: string
          description: Time when test execution completed(UTC). Completed date should
            be greater than StartedDate.
          format: date-time
        computerName:
          type: string
          description: Machine name where test executed.
        configuration:
          $ref: '#/components/schemas/ShallowReference'
        createdDate:
          type: string
          description: Timestamp when test result created(UTC).
          format: date-time
        customFields:
          type: array
          description: Additional properties of test result.
          items:
            $ref: '#/components/schemas/CustomTestField'
        durationInMs:
          type: number
          description: Duration of test execution in milliseconds. If not provided
            value will be set as CompletedDate - StartedDate
          format: double
        errorMessage:
          type: string
          description: Error message in test execution.
        failingSince:
          $ref: '#/components/schemas/FailingSince'
        failureType:
          type: string
          description: Failure type of test result. Valid Value= (Known Issue, New
            Issue, Regression, Unknown, None)
        id:
          type: integer
          description: ID of a test result.
          format: int32
        iterationDetails:
          type: array
          description: Test result details of test iterations used only for Manual
            Testing.
          items:
            $ref: '#/components/schemas/TestIterationDetailsModel'
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last updated datetime of test result(UTC).
          format: date-time
        outcome:
          type: string
          description: Test outcome of test result. Valid values = (Unspecified, None,
            Passed, Failed, Inconclusive, Timeout, Aborted, Blocked, NotExecuted,
            Warning, Error, NotApplicable, Paused, InProgress, NotImpacted)
        owner:
          $ref: '#/components/schemas/IdentityRef'
        priority:
          type: integer
          description: Priority of test executed.
          format: int32
        project:
          $ref: '#/components/schemas/ShallowReference'
        release:
          $ref: '#/components/schemas/ShallowReference'
        releaseReference:
          $ref: '#/components/schemas/ReleaseReference'
        resetCount:
          type: integer
          description: ResetCount.
          format: int32
        resolutionState:
          type: string
          description: Resolution state of test result.
        resolutionStateId:
          type: integer
          description: ID of resolution state.
          format: int32
        resultGroupType:
          type: string
          description: Hierarchy type of the result, default value of None means its
            leaf node.
          enum:
          - none
          - rerun
          - dataDriven
          - orderedTest
          - generic
          x-ms-enum:
            name: ResultGroupType
            values:
            - value: none
              description: Leaf node of test result.
            - value: rerun
              description: Hierarchy type of test result.
            - value: dataDriven
              description: Hierarchy type of test result.
            - value: orderedTest
              description: Hierarchy type of test result.
            - value: generic
              description: Unknown hierarchy type.
        revision:
          type: integer
          description: Revision number of test result.
          format: int32
        runBy:
          $ref: '#/components/schemas/IdentityRef'
        stackTrace:
          type: string
          description: Stacktrace with maxSize= 1000 chars.
        startedDate:
          type: string
          description: Time when test execution started(UTC).
          format: date-time
        state:
          type: string
          description: State of test result. Type TestRunState.
        subResults:
          type: array
          description: List of sub results inside a test result, if ResultGroupType
            is not None, it holds corresponding type sub results.
          items:
            $ref: '#/components/schemas/TestSubResult'
        testCase:
          $ref: '#/components/schemas/ShallowReference'
        testCaseReferenceId:
          type: integer
          description: Reference ID of test used by test result. Type TestResultMetaData
          format: int32
        testCaseRevision:
          type: integer
          description: TestCaseRevision Number.
          format: int32
        testCaseTitle:
          type: string
          description: Name of test.
        testPlan:
          $ref: '#/components/schemas/ShallowReference'
        testPoint:
          $ref: '#/components/schemas/ShallowReference'
        testRun:
          $ref: '#/components/schemas/ShallowReference'
        testSuite:
          $ref: '#/components/schemas/ShallowReference'
        url:
          type: string
          description: Url of test result.
      description: Represents a test result.
    TestCaseResultAttachmentModel:
      type: object
      properties:
        actionPath:
          type: string
          description: Path identifier test step in test case workitem.
        id:
          type: integer
          description: Attachment ID.
          format: int32
        iterationId:
          type: integer
          description: Iteration ID.
          format: int32
        name:
          type: string
          description: Name of attachment.
        size:
          type: integer
          description: Attachment size.
          format: int64
        url:
          type: string
          description: Url to attachment.
      description: Test attachment information in a test iteration.
    TestCaseResultIdentifier:
      type: object
      properties:
        testResultId:
          type: integer
          description: Test result ID.
          format: int32
        testRunId:
          type: integer
          description: Test run ID.
          format: int32
      description: Reference to a test result.
    TestEnvironment:
      type: object
      properties:
        environmentId:
          type: string
          description: Test Environment Id.
          format: uuid
        environmentName:
          type: string
          description: Test Environment Name.
      description: Test environment Detail.
    TestFailureDetails:
      type: object
      properties:
        count:
          type: integer
          format: int32
        testResults:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseResultIdentifier'
      description: ""
    TestFailuresAnalysis:
      type: object
      properties:
        existingFailures:
          $ref: '#/components/schemas/TestFailureDetails'
        fixedTests:
          $ref: '#/components/schemas/TestFailureDetails'
        newFailures:
          $ref: '#/components/schemas/TestFailureDetails'
        previousContext:
          $ref: '#/components/schemas/TestResultsContext'
      description: ""
    TestFlakyIdentifier:
      type: object
      properties:
        branchName:
          type: string
          description: Branch Name where Flakiness has to be Marked/Unmarked
        isFlaky:
          type: boolean
          description: State for Flakiness
      description: Test Flaky Identifier
    TestHistoryQuery:
      type: object
      properties:
        automatedTestName:
          type: string
          description: Automated test name of the TestCase.
        branch:
          type: string
          description: Results to be get for a particular branches.
        buildDefinitionId:
          type: integer
          description: Get the results history only for this BuildDefinitionId. This
            to get used in query GroupBy should be Branch. If this is provided, Branch
            will have no use.
          format: int32
        continuationToken:
          type: string
          description: It will be filled by server. If not null means there are some
            results still to be get, and we need to call this REST API with this ContinuousToken.
            It is not supposed to be created (or altered, if received from server
            in last batch) by user.
        groupBy:
          type: string
          description: Group the result on the basis of TestResultGroupBy. This can
            be Branch, Environment or null(if results are fetched by BuildDefinitionId)
          enum:
          - branch
          - environment
          x-ms-enum:
            name: TestResultGroupBy
            values:
            - value: branch
              description: Group the results by branches
            - value: environment
              description: Group the results by environment
        maxCompleteDate:
          type: string
          description: History to get between time interval MaxCompleteDate and  (MaxCompleteDate
            - TrendDays). Default is current date time.
          format: date-time
        releaseEnvDefinitionId:
          type: integer
          description: Get the results history only for this ReleaseEnvDefinitionId.
            This to get used in query GroupBy should be Environment.
          format: int32
        resultsForGroup:
          type: array
          description: List of TestResultHistoryForGroup which are grouped by GroupBy
          items:
            $ref: '#/components/schemas/TestResultHistoryForGroup'
        testCaseId:
          type: integer
          description: Get the results history only for this testCaseId. This to get
            used in query to filter the result along with automatedtestname
          format: int32
        trendDays:
          type: integer
          description: Number of days for which history to collect. Maximum supported
            value is 7 days. Default is 7 days.
          format: int32
      description: Filter to get TestCase result history.
    TestIterationDetailsModel:
      type: object
      properties:
        actionResults:
          type: array
          description: Test step results in an iteration.
          items:
            $ref: '#/components/schemas/TestActionResultModel'
        attachments:
          type: array
          description: Reference to attachments in test iteration result.
          items:
            $ref: '#/components/schemas/TestCaseResultAttachmentModel'
        comment:
          type: string
          description: Comment in test iteration result.
        completedDate:
          type: string
          description: Time when execution completed(UTC).
          format: date-time
        durationInMs:
          type: number
          description: Duration of execution.
          format: double
        errorMessage:
          type: string
          description: Error message in test iteration result execution.
        id:
          type: integer
          description: ID of test iteration result.
          format: int32
        outcome:
          type: string
          description: Test outcome if test iteration result.
        parameters:
          type: array
          description: Test parameters in an iteration.
          items:
            $ref: '#/components/schemas/TestResultParameterModel'
        startedDate:
          type: string
          description: Time when execution started(UTC).
          format: date-time
        url:
          type: string
          description: Url to test iteration result.
      description: Represents a test iteration result.
    TestLog:
      type: object
      properties:
        logReference:
          $ref: '#/components/schemas/TestLogReference'
        metaData:
          type: object
          additionalProperties:
            type: string
          description: Meta data for Log file
        modifiedOn:
          type: string
          description: LastUpdatedDate for Log file
          format: date-time
        size:
          type: integer
          description: Size in Bytes for Log file
          format: int64
      description: Represents Test Log Result object.
    TestLogReference:
      type: object
      properties:
        buildId:
          type: integer
          description: BuildId for test log, if context is build
          format: int32
        filePath:
          type: string
          description: FileName for log file
        releaseEnvId:
          type: integer
          description: ReleaseEnvId for test log, if context is Release
          format: int32
        releaseId:
          type: integer
          description: ReleaseId for test log, if context is Release
          format: int32
        resultId:
          type: integer
          description: Resultid for test log, if context is run and log is related
            to result
          format: int32
        runId:
          type: integer
          description: runid for test log, if context is run
          format: int32
        scope:
          type: string
          description: Test Log Scope
          enum:
          - run
          x-ms-enum:
            name: TestLogScope
            values:
            - value: run
              description: Log file is associated with Run, result, subresult
        subResultId:
          type: integer
          description: SubResultid for test log, if context is run and log is related
            to subresult
          format: int32
        type:
          type: string
          description: Log Type
          enum:
          - generalAttachment
          x-ms-enum:
            name: TestLogType
            values:
            - value: generalAttachment
              description: Any gereric attachment.
      description: Test Log Reference object
    TestLogStoreEndpointDetails:
      type: object
      properties:
        endpointSASUri:
          type: string
          description: Test log store connection Uri.
        endpointType:
          type: string
          description: Test log store endpoint type.
          enum:
          - root
          - file
          x-ms-enum:
            name: TestLogStoreEndpointType
            values:
            - value: root
              description: Endpoint type is scoped to root
            - value: file
              description: Endpoint type is scoped to file
        status:
          type: string
          description: Test log store status code
          enum:
          - success
          - failed
          - fileAlreadyExists
          - invalidInput
          - invalidFileName
          - invalidContainer
          - transferFailed
          - featureDisabled
          - buildDoesNotExist
          - runDoesNotExist
          - containerNotCreated
          - apiNotSupported
          - fileSizeExceeds
          - containerNotFound
          - fileNotFound
          - directoryNotFound
          - storageCapacityExceeded
          x-ms-enum:
            name: TestLogStatusCode
            values:
            - value: success
              description: Operation is successful
            - value: failed
              description: Operation failed
            - value: fileAlreadyExists
              description: Operation failed due to file already exist
            - value: invalidInput
              description: Invalid input provided by user
            - value: invalidFileName
              description: Invalid file name provided by user
            - value: invalidContainer
              description: Error occurred while operating on container
            - value: transferFailed
              description: Blob Transfer Error
            - value: featureDisabled
              description: TestLogStore feature is not enabled
            - value: buildDoesNotExist
              description: Build for which operation is requested does not exist
            - value: runDoesNotExist
              description: Run for which operation is requested does not exist
            - value: containerNotCreated
              description: Container cannot be created
            - value: apiNotSupported
              description: Api is not supported
            - value: fileSizeExceeds
              description: File size is greater than the limitation
            - value: containerNotFound
              description: Container is not found for which operation is requested
            - value: fileNotFound
              description: File cannot be found
            - value: directoryNotFound
              description: Directory cannot be found
            - value: storageCapacityExceeded
              description: Storage capacity exceeded
      description: Represents Test Log store endpoint details.
    TestMessageLogDetails:
      type: object
      properties:
        dateCreated:
          type: string
          description: Date when the resource is created
          format: date-time
        entryId:
          type: integer
          description: Id of the resource
          format: int32
        message:
          type: string
          description: Message of the resource
      description: An abstracted reference to some other resource. This class is used
        to provide the build data contracts with a uniform way to reference other
        resources in a way that provides easy traversal through links.
    TestMethod:
      type: object
      properties:
        container:
          type: string
        name:
          type: string
      description: ""
    TestOperationReference:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        url:
          type: string
      description: Class representing a reference to an operation.
    TestResolutionState:
      type: object
      properties:
        id:
          type: integer
          description: Test Resolution state Id.
          format: int32
        name:
          type: string
          description: Test Resolution State Name.
        project:
          $ref: '#/components/schemas/ShallowReference'
      description: Test Resolution State Details.
    TestResultDocument:
      type: object
      properties:
        operationReference:
          $ref: '#/components/schemas/TestOperationReference'
        payload:
          $ref: '#/components/schemas/TestResultPayload'
      description: ""
    TestResultFailuresAnalysis:
      type: object
      properties:
        existingFailures:
          $ref: '#/components/schemas/TestFailureDetails'
        fixedTests:
          $ref: '#/components/schemas/TestFailureDetails'
        newFailures:
          $ref: '#/components/schemas/TestFailureDetails'
      description: ""
    TestResultHistory:
      type: object
      properties:
        groupByField:
          type: string
        resultsForGroup:
          type: array
          items:
            $ref: '#/components/schemas/TestResultHistoryDetailsForGroup'
      description: ""
    TestResultHistoryDetailsForGroup:
      type: object
      properties:
        groupByValue:
          type: object
          properties: {}
        latestResult:
          $ref: '#/components/schemas/TestCaseResult'
      description: ""
    TestResultHistoryForGroup:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the group.
        groupByValue:
          type: string
          description: Name or Id of the group identifier by which results are grouped
            together.
        results:
          type: array
          description: List of results for GroupByValue
          items:
            $ref: '#/components/schemas/TestCaseResult'
      description: List of test results filtered on the basis of GroupByValue
    TestResultMetaData:
      type: object
      properties:
        automatedTestName:
          type: string
          description: AutomatedTestName of test result.
        automatedTestStorage:
          type: string
          description: AutomatedTestStorage of test result.
        flakyIdentifiers:
          type: array
          description: List of Flaky Identifier for TestCaseReferenceId
          items:
            $ref: '#/components/schemas/TestFlakyIdentifier'
        owner:
          type: string
          description: Owner of test result.
        priority:
          type: integer
          description: Priority of test result.
          format: int32
        testCaseReferenceId:
          type: integer
          description: ID of TestCaseReference.
          format: int32
        testCaseTitle:
          type: string
          description: TestCaseTitle of test result.
      description: Represents a Meta Data of a test result.
    TestResultMetaDataUpdateInput:
      type: object
      properties:
        flakyIdentifiers:
          type: array
          description: List of Flaky Identifiers
          items:
            $ref: '#/components/schemas/TestFlakyIdentifier'
      description: Represents a TestResultMetaData Input
    TestResultModelBase:
      type: object
      properties:
        comment:
          type: string
          description: Comment in result.
        completedDate:
          type: string
          description: Time when execution completed(UTC).
          format: date-time
        durationInMs:
          type: number
          description: Duration of execution.
          format: double
        errorMessage:
          type: string
          description: Error message in result.
        outcome:
          type: string
          description: Test outcome of result.
        startedDate:
          type: string
          description: Time when execution started(UTC).
          format: date-time
      description: ""
    TestResultParameterModel:
      type: object
      properties:
        actionPath:
          type: string
          description: Test step path where parameter is referenced.
        iterationId:
          type: integer
          description: Iteration ID.
          format: int32
        parameterName:
          type: string
          description: Name of parameter.
        stepIdentifier:
          type: string
          description: 'This is step Id of test case. For shared step, it is step
            Id of shared step in test case workitem; step Id in shared step. Example:
            TestCase workitem has two steps: 1) Normal step with Id = 1 2) Shared
            Step with Id = 2. Inside shared step: a) Normal Step with Id = 1 Value
            for StepIdentifier for First step: "1" Second step: "2;1"'
        url:
          type: string
          description: Url of test parameter. Deprecated in hosted environment.
        value:
          type: string
          description: Value of parameter.
      description: Test parameter information in a test iteration.
    TestResultPayload:
      type: object
      properties:
        comment:
          type: string
        name:
          type: string
        stream:
          type: string
      description: ""
    TestResultsContext:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildReference'
        contextType:
          type: string
          enum:
          - build
          - release
          - pipeline
          x-ms-enum:
            name: TestResultsContextType
            values:
            - value: build
              description: ""
            - value: release
              description: ""
            - value: pipeline
              description: ""
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        release:
          $ref: '#/components/schemas/ReleaseReference'
      description: ""
    TestResultsDetails:
      type: object
      properties:
        groupByField:
          type: string
        resultsForGroup:
          type: array
          items:
            $ref: '#/components/schemas/TestResultsDetailsForGroup'
      description: ""
    TestResultsDetailsForGroup:
      type: object
      properties:
        groupByValue:
          type: object
          properties: {}
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseResult'
        resultsCountByOutcome:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
        tags:
          type: array
          items:
            type: string
      description: ""
    TestResultsQuery:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseResult'
        resultsFilter:
          $ref: '#/components/schemas/ResultsFilter'
      description: ""
    TestResultsSettings:
      type: object
      properties:
        flakySettings:
          $ref: '#/components/schemas/FlakySettings'
        newTestResultLoggingSettings:
          $ref: '#/components/schemas/NewTestResultLoggingSettings'
      description: ""
    TestResultSummary:
      type: object
      properties:
        aggregatedResultsAnalysis:
          $ref: '#/components/schemas/AggregatedResultsAnalysis'
        noConfigRunsCount:
          type: integer
          format: int32
        teamProject:
          $ref: '#/components/schemas/TeamProjectReference'
        testFailures:
          $ref: '#/components/schemas/TestFailuresAnalysis'
        testResultsContext:
          $ref: '#/components/schemas/TestResultsContext'
        totalRunsCount:
          type: integer
          format: int32
      description: ""
    TestResultsUpdateSettings:
      type: object
      properties:
        flakySettings:
          $ref: '#/components/schemas/FlakySettings'
        newTestResultLoggingSettings:
          $ref: '#/components/schemas/NewTestResultLoggingSettings'
      description: ""
    TestResultTrendFilter:
      type: object
      properties:
        branchNames:
          type: array
          items:
            type: string
        buildCount:
          type: integer
          format: int32
        definitionIds:
          type: array
          items:
            type: integer
            format: int32
        envDefinitionIds:
          type: array
          items:
            type: integer
            format: int32
        maxCompleteDate:
          type: string
          format: date-time
        publishContext:
          type: string
        testRunTitles:
          type: array
          items:
            type: string
        trendDays:
          type: integer
          format: int32
      description: ""
    TestRun:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/ShallowReference'
        buildConfiguration:
          $ref: '#/components/schemas/BuildConfiguration'
        comment:
          type: string
          description: Comments entered by those analyzing the run.
        completedDate:
          type: string
          description: Completed date time of the run.
          format: date-time
        controller:
          type: string
          description: Test Run Controller.
        createdDate:
          type: string
          description: Test Run CreatedDate.
          format: date-time
        customFields:
          type: array
          description: List of Custom Fields for TestRun.
          items:
            $ref: '#/components/schemas/CustomTestField'
        dropLocation:
          type: string
          description: Drop Location for the test Run.
        dtlAutEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironment:
          $ref: '#/components/schemas/ShallowReference'
        dtlEnvironmentCreationDetails:
          $ref: '#/components/schemas/DtlEnvironmentDetails'
        dueDate:
          type: string
          description: Due date and time for test run.
          format: date-time
        errorMessage:
          type: string
          description: Error message associated with the run.
        filter:
          $ref: '#/components/schemas/RunFilter'
        id:
          type: integer
          description: ID of the test run.
          format: int32
        incompleteTests:
          type: integer
          description: Number of Incomplete Tests.
          format: int32
        isAutomated:
          type: boolean
          description: true if test run is automated, false otherwise.
        iteration:
          type: string
          description: The iteration to which the run belongs.
        lastUpdatedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastUpdatedDate:
          type: string
          description: Last updated date and time
          format: date-time
        name:
          type: string
          description: Name of the test run.
        notApplicableTests:
          type: integer
          description: Number of Not Applicable Tests.
          format: int32
        owner:
          $ref: '#/components/schemas/IdentityRef'
        passedTests:
          type: integer
          description: Number of passed tests in the run
          format: int32
        phase:
          type: string
          description: Phase/State for the testRun.
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        plan:
          $ref: '#/components/schemas/ShallowReference'
        postProcessState:
          type: string
          description: Post Process State.
        project:
          $ref: '#/components/schemas/ShallowReference'
        release:
          $ref: '#/components/schemas/ReleaseReference'
        releaseEnvironmentUri:
          type: string
          description: Release Environment Uri for TestRun.
        releaseUri:
          type: string
          description: Release Uri for TestRun.
        revision:
          type: integer
          format: int32
        runStatistics:
          type: array
          description: RunSummary by outcome.
          items:
            $ref: '#/components/schemas/RunStatistic'
        startedDate:
          type: string
          description: Start date time of the run.
          format: date-time
        state:
          type: string
          description: The state of the run. Type TestRunState Valid states - Unspecified
            ,NotStarted, InProgress, Completed, Waiting, Aborted, NeedsInvestigation
        substate:
          type: string
          description: TestRun Substate.
          enum:
          - none
          - creatingEnvironment
          - runningTests
          - canceledByUser
          - abortedBySystem
          - timedOut
          - pendingAnalysis
          - analyzed
          - cancellationInProgress
          x-ms-enum:
            name: TestRunSubstate
            values:
            - value: none
              description: Run with noState.
            - value: creatingEnvironment
              description: Run state while Creating Environment.
            - value: runningTests
              description: Run state while Running Tests.
            - value: canceledByUser
              description: Run state while Creating Environment.
            - value: abortedBySystem
              description: Run state when it is Aborted By the System.
            - value: timedOut
              description: Run state when run has timedOut.
            - value: pendingAnalysis
              description: Run state while Pending Analysis.
            - value: analyzed
              description: Run state after being Analysed.
            - value: cancellationInProgress
              description: Run state when cancellation is in Progress.
        tags:
          type: array
          description: Tags attached with this test run.
          items:
            $ref: '#/components/schemas/TestTag'
        testEnvironment:
          $ref: '#/components/schemas/TestEnvironment'
        testMessageLogId:
          type: integer
          format: int32
        testSettings:
          $ref: '#/components/schemas/ShallowReference'
        totalTests:
          type: integer
          description: Total tests in the run
          format: int32
        unanalyzedTests:
          type: integer
          description: Number of failed tests in the run.
          format: int32
        url:
          type: string
          description: Url of the test run
        webAccessUrl:
          type: string
          description: Web Access Url for TestRun.
      description: Test run details.
    TestRunCoverage:
      type: object
      properties:
        lastError:
          type: string
          description: Last Error
        modules:
          type: array
          description: List of Modules Coverage
          items:
            $ref: '#/components/schemas/ModuleCoverage'
        state:
          type: string
          description: State
        testRun:
          $ref: '#/components/schemas/ShallowReference'
      description: Test Run Code Coverage Details
    TestRunStatistic:
      type: object
      properties:
        run:
          $ref: '#/components/schemas/ShallowReference'
        runStatistics:
          type: array
          items:
            $ref: '#/components/schemas/RunStatistic'
      description: Test run statistics.
    TestSettings:
      type: object
      properties:
        areaPath:
          type: string
          description: Area path required to create test settings
        description:
          type: string
          description: Description of the test settings. Used in create test settings.
        isPublic:
          type: boolean
          description: Indicates if the tests settings is public or private.Used in
            create test settings.
        machineRoles:
          type: string
          description: Xml string of machine roles. Used in create test settings.
        testSettingsContent:
          type: string
          description: Test settings content.
        testSettingsId:
          type: integer
          description: Test settings id.
          format: int32
        testSettingsName:
          type: string
          description: Test settings name.
      description: Represents the test settings of the run. Used to create test settings
        and fetch test settings
    TestSubResult:
      type: object
      properties:
        comment:
          type: string
          description: Comment in sub result.
        completedDate:
          type: string
          description: Time when test execution completed(UTC).
          format: date-time
        computerName:
          type: string
          description: Machine where test executed.
        configuration:
          $ref: '#/components/schemas/ShallowReference'
        customFields:
          type: array
          description: Additional properties of sub result.
          items:
            $ref: '#/components/schemas/CustomTestField'
        displayName:
          type: string
          description: Name of sub result.
        durationInMs:
          type: integer
          description: Duration of test execution.
          format: int64
        errorMessage:
          type: string
          description: Error message in sub result.
        id:
          type: integer
          description: ID of sub result.
          format: int32
        lastUpdatedDate:
          type: string
          description: Time when result last updated(UTC).
          format: date-time
        outcome:
          type: string
          description: Outcome of sub result.
        parentId:
          type: integer
          description: Immediate parent ID of sub result.
          format: int32
        resultGroupType:
          type: string
          description: Hierarchy type of the result, default value of None means its
            leaf node.
          enum:
          - none
          - rerun
          - dataDriven
          - orderedTest
          - generic
          x-ms-enum:
            name: ResultGroupType
            values:
            - value: none
              description: Leaf node of test result.
            - value: rerun
              description: Hierarchy type of test result.
            - value: dataDriven
              description: Hierarchy type of test result.
            - value: orderedTest
              description: Hierarchy type of test result.
            - value: generic
              description: Unknown hierarchy type.
        sequenceId:
          type: integer
          description: Index number of sub result.
          format: int32
        stackTrace:
          type: string
          description: Stacktrace.
        startedDate:
          type: string
          description: Time when test execution started(UTC).
          format: date-time
        subResults:
          type: array
          description: List of sub results inside a sub result, if ResultGroupType
            is not None, it holds corresponding type sub results.
          items:
            $ref: '#/components/schemas/TestSubResult'
        testResult:
          $ref: '#/components/schemas/TestCaseResultIdentifier'
        url:
          type: string
          description: Url of sub result.
      description: Represents a sub result of a test result.
    TestSummaryForWorkItem:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/AggregatedDataForResultTrend'
        workItem:
          $ref: '#/components/schemas/WorkItemReference'
      description: ""
    TestTag:
      type: object
      properties:
        name:
          type: string
          description: Name of the tag, alphanumeric value less than 30 chars
      description: Tag attached to a run or result.
    TestTagSummary:
      type: object
      properties:
        tagsGroupByTestArtifact:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/TestTag'
          description: Dictionary which contains tags associated with a test run.
      description: Test tag summary for build or release grouped by test run.
    TestTagsUpdateModel:
      type: object
      properties:
        tags:
          type: array
          items:
            type: object
            properties: {}
      description: Tags to update to a run or result.
    TestToWorkItemLinks:
      type: object
      properties:
        test:
          $ref: '#/components/schemas/TestMethod'
        workItems:
          type: array
          items:
            $ref: '#/components/schemas/WorkItemReference'
      description: ""
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
    WorkItemReference:
      type: object
      properties:
        id:
          type: string
          description: WorkItem Id.
        name:
          type: string
          description: WorkItem Name.
        type:
          type: string
          description: WorkItem Type.
        url:
          type: string
          description: 'WorkItem Url. Valid Values : (Bug, Task, User Story, Test
            Case)'
        webUrl:
          type: string
          description: WorkItem WebUrl.
      description: WorkItem reference Details.
    WorkItemToTestLinks:
      type: object
      properties:
        executedIn:
          type: string
          enum:
          - any
          - tcm
          - tfs
          x-ms-enum:
            name: Service
            values:
            - value: any
              description: ""
            - value: tcm
              description: ""
            - value: tfs
              description: ""
        tests:
          type: array
          items:
            $ref: '#/components/schemas/TestMethod'
        workItem:
          $ref: '#/components/schemas/WorkItemReference'
      description: ""
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0' to use
        this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.3:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0-preview.3'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.4:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0-preview.4'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.test: Grants the ability to read test plans, cases, results and other
              test management related artifacts.
            vso.test_write: Grants the ability to read, create, and update test plans,
              cases, results and other test management related artifacts.
x-ms-vss-area: testResults
x-ms-vss-resource-area-id: c83eaf52-edf3-4034-ae11-17d38f25404c
x-ms-paths:
  /{organization}/{project}/_apis/testresults/runs/{runId}/results/{resultId}/testlog?subResultId={subResultId}&type={type}:
    get:
      tags:
      - Testlog
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlog
      x-ms-vss-method: GetTestSubResultLogsAsync
      x-ms-preview: true
      description: Get list of test subresult attachments reference
      operationId: Testlog_Get Test Sub Result Logs
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: runId
        description: Id of the test run that contains the results
        required: true
        type: integer
        format: int32
      - in: path
        name: resultId
        description: Id of the test result that contains subresult
        required: true
        type: integer
        format: int32
      - in: query
        name: subResultId
        description: Id of the test subresult
        required: true
        type: integer
        format: int32
      - in: query
        name: type
        description: type of the attachments to get
        required: true
        type: string
        enum:
        - generalAttachment
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - in: query
        name: directoryPath
        description: directory path of the attachment to get
        required: false
        type: string
      - in: query
        name: fileNamePrefix
        description: file name prefix to filter the list of attachments
        required: false
        type: string
      - in: query
        name: fetchMetaData
        description: Default is false, set if metadata is needed
        required: false
        type: boolean
      - in: query
        name: top
        description: Number of attachments reference to return
        required: false
        type: integer
        format: int32
      - in: header
        name: continuationToken
        description: Header to pass the continuationToken
        required: false
        type: string
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TestLog'
      security:
      - oauth2:
        - vso.test
      x-ms-examples:
        Get test logs for subresult:
          $ref: ./httpExamples/testlog/Get_testlog_subresult.json
  ? /{organization}/{project}/_apis/testresults/runs/{runId}/results/{resultId}/testlogstoreendpoint?subResultId={subResultId}&type={type}&filePath={filePath}
  : get:
      tags:
      - Testlogstoreendpoint
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: testlogstoreendpoint
      x-ms-vss-method: GetTestLogStoreEndpointDetailsForSubResultLog
      x-ms-preview: true
      description: Get SAS Uri of a test subresults attachment
      operationId: Testlogstoreendpoint_Get Test Log Store Endpoint Details For Sub
        Result Log
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: runId
        description: Id of the test run that contains result
        required: true
        type: integer
        format: int32
      - in: path
        name: resultId
        description: Id of the test result that contains subresult
        required: true
        type: integer
        format: int32
      - in: query
        name: subResultId
        description: Id of the test subresult whose file sas uri is needed
        required: true
        type: integer
        format: int32
      - in: query
        name: type
        description: type of the file
        required: true
        type: string
        enum:
        - generalAttachment
        x-ms-enum:
          name: TestLogType
          values:
          - value: generalAttachment
            description: Any gereric attachment.
      - in: query
        name: filePath
        description: filePath for which sas uri is needed
        required: true
        type: string
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TestLogStoreEndpointDetails'
      security:
      - oauth2:
        - vso.test
      x-ms-examples:
        Get file endpoint details:
          $ref: ./httpExamples/testlogstoreendpoint/Get_testlogstore_subresults_endpoint.json
