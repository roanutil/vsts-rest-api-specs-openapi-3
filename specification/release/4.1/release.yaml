openapi: 3.0.1
info:
  title: Release
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: 4.1-preview
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://vsrm.dev.azure.com/
security:
- accessToken: []
tags:
- name: Approvals
- name: Attachments
- name: Definitions
- name: Deployments
- name: Manual Interventions
- name: Releases
paths:
  /{organization}/{project}/_apis/release/approvals:
    get:
      tags:
      - Approvals
      description: Get a list of approvals
      operationId: List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: assignedToFilter
        in: query
        description: Approvals assigned to this user.
        schema:
          type: string
      - name: statusFilter
        in: query
        description: Approvals with this status. Default is 'pending'.
        schema:
          type: string
          enum:
          - undefined
          - pending
          - approved
          - rejected
          - reassigned
          - canceled
          - skipped
          x-ms-enum:
            name: ApprovalStatus
            values:
            - value: undefined
              description: ""
            - value: pending
              description: ""
            - value: approved
              description: ""
            - value: rejected
              description: ""
            - value: reassigned
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
        x-ms-enum:
          name: ApprovalStatus
          values:
          - value: undefined
            description: ""
          - value: pending
            description: ""
          - value: approved
            description: ""
          - value: rejected
            description: ""
          - value: reassigned
            description: ""
          - value: canceled
            description: ""
          - value: skipped
            description: ""
      - name: releaseIdsFilter
        in: query
        description: Approvals for release id(s) mentioned in the filter. Multiple
          releases can be mentioned by separating them with ',' e.g. releaseIdsFilter=1,2,3,4.
        schema:
          type: string
          format: array (int32)
      - name: typeFilter
        in: query
        description: Approval with this type.
        schema:
          type: string
          enum:
          - undefined
          - preDeploy
          - postDeploy
          - all
          x-ms-enum:
            name: ApprovalType
            values:
            - value: undefined
              description: ""
            - value: preDeploy
              description: ""
            - value: postDeploy
              description: ""
            - value: all
              description: ""
        x-ms-enum:
          name: ApprovalType
          values:
          - value: undefined
            description: ""
          - value: preDeploy
            description: ""
          - value: postDeploy
            description: ""
          - value: all
            description: ""
      - name: top
        in: query
        description: Number of approvals to get. Default is 50.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: Gets the approvals after the continuation token provided.
        schema:
          type: integer
          format: int32
      - name: queryOrder
        in: query
        description: Gets the results in the defined order of created approvals. Default
          is 'descending'.
        schema:
          type: string
          enum:
          - descending
          - ascending
          x-ms-enum:
            name: ReleaseQueryOrder
            values:
            - value: descending
              description: ""
            - value: ascending
              description: ""
        x-ms-enum:
          name: ReleaseQueryOrder
          values:
          - value: descending
            description: ""
          - value: ascending
            description: ""
      - name: includeMyGroupApprovals
        in: query
        description: '''true'' to include my group approvals. Default is ''false''.'
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseApproval'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.3
      x-ms-vss-resource: approvals
      x-ms-vss-method: GetApprovals
      x-ms-preview: true
      x-ms-examples:
        Pending for all users:
          $ref: ./httpExamples/approvals/GET__ListAllPendingApprovals.json
        Pending for a specific user:
          $ref: ./httpExamples/approvals/GET__ListPendingApprovalsForASpecificUser.json
        Pending for a specific release:
          $ref: ./httpExamples/approvals/GET__ListPendingApprovalsForASpecificARelease.json
  /{organization}/{project}/_apis/release/approvals/{approvalId}:
    patch:
      tags:
      - Approvals
      description: Update status of an approval
      operationId: Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: approvalId
        in: path
        description: Id of the approval.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: ReleaseApproval object having status, approver and comments.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseApproval'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseApproval'
      security:
      - oauth2:
        - vso.release_manage
      x-ms-docs-override-version: 4.1-preview.3
      x-ms-vss-resource: approvals
      x-ms-vss-method: UpdateReleaseApproval
      x-ms-preview: true
      x-ms-examples:
        Approve a release:
          $ref: ./httpExamples/approvals/PATCH__UpdateStatusOfAnApprovalFromPendingToApproved.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/definitions:
    get:
      tags:
      - Definitions
      description: Get a list of release definitions.
      operationId: List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: searchText
        in: query
        description: Get release definitions with names starting with searchText.
        schema:
          type: string
      - name: $expand
        in: query
        description: The properties that should be expanded in the list of Release
          definitions.
        schema:
          type: string
          enum:
          - none
          - environments
          - artifacts
          - triggers
          - variables
          - tags
          - lastRelease
          x-ms-enum:
            name: ReleaseDefinitionExpands
            values:
            - value: none
              description: ""
            - value: environments
              description: ""
            - value: artifacts
              description: ""
            - value: triggers
              description: ""
            - value: variables
              description: ""
            - value: tags
              description: ""
            - value: lastRelease
              description: ""
        x-ms-enum:
          name: ReleaseDefinitionExpands
          values:
          - value: none
            description: ""
          - value: environments
            description: ""
          - value: artifacts
            description: ""
          - value: triggers
            description: ""
          - value: variables
            description: ""
          - value: tags
            description: ""
          - value: lastRelease
            description: ""
      - name: artifactType
        in: query
        description: Release definitions with given artifactType will be returned.
          Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild,
          Git, TFVC, ExternalTfsXamlBuild.
        schema:
          type: string
      - name: artifactSourceId
        in: query
        description: Release definitions with given artifactSourceId will be returned.
          e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins
          it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it
          would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}.
          For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier'
          inside vss-extension.json at https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
        schema:
          type: string
      - name: $top
        in: query
        description: Number of release definitions to get.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: Gets the release definitions after the continuation token provided.
        schema:
          type: string
      - name: queryOrder
        in: query
        description: Gets the results in the defined order. Default is 'IdAscending'.
        schema:
          type: string
          enum:
          - idAscending
          - idDescending
          - nameAscending
          - nameDescending
          x-ms-enum:
            name: ReleaseDefinitionQueryOrder
            values:
            - value: idAscending
              description: ""
            - value: idDescending
              description: ""
            - value: nameAscending
              description: ""
            - value: nameDescending
              description: ""
        x-ms-enum:
          name: ReleaseDefinitionQueryOrder
          values:
          - value: idAscending
            description: ""
          - value: idDescending
            description: ""
          - value: nameAscending
            description: ""
          - value: nameDescending
            description: ""
      - name: path
        in: query
        description: Gets the release definitions under the specified path.
        schema:
          type: string
      - name: isExactNameMatch
        in: query
        description: '''true''to gets the release definitions with exact match as
          specified in searchText. Default is ''false''.'
        schema:
          type: boolean
      - name: tagFilter
        in: query
        description: A comma-delimited list of tags. Only release definitions with
          these tags will be returned.
        schema:
          type: string
          format: array (string)
      - name: propertyFilters
        in: query
        description: A comma-delimited list of extended properties to retrieve.
        schema:
          type: string
          format: array (string)
      - name: definitionIdFilter
        in: query
        description: A comma-delimited list of release definitions to retrieve.
        schema:
          type: string
          format: array (string)
      - name: isDeleted
        in: query
        description: '''true'' to get release definitions that has been deleted. Default
          is ''false'''
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.3
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetReleaseDefinitions
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/definitions/GET__ListAllReleaseDefinitions.json
        With environments details expanded:
          $ref: ./httpExamples/definitions/GET__ListAllReleaseDefinitionsWithEnvironmentsExpanded.json
        With artifacts details expanded:
          $ref: ./httpExamples/definitions/GET_ListAllReleaseDefinitionsWithArtifactsExpanded.json
    put:
      tags:
      - Definitions
      description: Update a release definition.
      operationId: Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Release definition object to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseDefinition'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 4.1-preview.3
      x-ms-vss-resource: definitions
      x-ms-vss-method: UpdateReleaseDefinition
      x-ms-preview: true
      x-codegen-request-body-name: body
    post:
      tags:
      - Definitions
      description: Create a release definition
      operationId: Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: release definition object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseDefinition'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 4.1-preview.3
      x-ms-vss-resource: definitions
      x-ms-vss-method: CreateReleaseDefinition
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/definitions/{definitionId}:
    get:
      tags:
      - Definitions
      description: Get a release definition.
      operationId: Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the release definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyFilters
        in: query
        description: A comma-delimited list of extended properties to retrieve.
        schema:
          type: string
          format: array (string)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.3
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetReleaseDefinition
      x-ms-preview: true
    delete:
      tags:
      - Definitions
      description: Delete a release definition.
      operationId: Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the release definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: comment
        in: query
        description: Comment for deleting a release definition.
        schema:
          type: string
      - name: forceDelete
        in: query
        description: '''true'' to automatically cancel any in-progress release deployments
          and proceed with release definition deletion . Default is ''false''.'
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.3'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.release_manage
      x-ms-docs-override-version: 4.1-preview.3
      x-ms-vss-resource: definitions
      x-ms-vss-method: DeleteReleaseDefinition
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/definitions/DELETE__DeleteReleaseDefinition.json
  /{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions:
    get:
      tags:
      - Definitions
      description: Get revision history for a release definition
      operationId: Get Release Definition History
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseDefinitionRevision'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: revisions
      x-ms-vss-method: GetReleaseDefinitionHistory
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/revisions/GET__GetReleaseDefinitionRevision.json
  /{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions/{revision}:
    get:
      tags:
      - Definitions
      description: Get release definition for a given definitionId and revision
      operationId: Get Definition Revision
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: revision
        in: path
        description: Id of the revision.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: revisions
      x-ms-vss-method: GetDefinitionRevision
      x-ms-preview: true
  /{organization}/{project}/_apis/release/deployments:
    get:
      tags:
      - Deployments
      operationId: List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: query
        schema:
          type: integer
          format: int32
      - name: definitionEnvironmentId
        in: query
        schema:
          type: integer
          format: int32
      - name: createdBy
        in: query
        schema:
          type: string
      - name: minModifiedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: maxModifiedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: deploymentStatus
        in: query
        schema:
          type: string
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is inprogress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
        x-ms-enum:
          name: DeploymentStatus
          values:
          - value: undefined
            description: The deployment status is undefined.
          - value: notDeployed
            description: The deployment status is not deployed.
          - value: inProgress
            description: The deployment status is inprogress.
          - value: succeeded
            description: The deployment status is succeeded.
          - value: partiallySucceeded
            description: The deployment status is partiallysucceeded.
          - value: failed
            description: The deployment status is failed.
          - value: all
            description: The deployment status is all.
      - name: operationStatus
        in: query
        schema:
          type: string
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase inprogress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        x-ms-enum:
          name: DeploymentOperationStatus
          values:
          - value: undefined
            description: The deployment operation status is undefined.
          - value: queued
            description: The deployment operation status is queued.
          - value: scheduled
            description: The deployment operation status is scheduled.
          - value: pending
            description: The deployment operation status is pending.
          - value: approved
            description: The deployment operation status is approved.
          - value: rejected
            description: The deployment operation status is rejected.
          - value: deferred
            description: The deployment operation status is deferred.
          - value: queuedForAgent
            description: The deployment operation status is queued for agent.
          - value: phaseInProgress
            description: The deployment operation status is phase inprogress.
          - value: phaseSucceeded
            description: The deployment operation status is phase succeeded.
          - value: phasePartiallySucceeded
            description: The deployment operation status is phase partially succeeded.
          - value: phaseFailed
            description: The deployment operation status is phase failed.
          - value: canceled
            description: The deployment operation status is canceled.
          - value: phaseCanceled
            description: The deployment operation status is phase canceled.
          - value: manualInterventionPending
            description: The deployment operation status is manualintervention pending.
          - value: queuedForPipeline
            description: The deployment operation status is queued for pipeline.
          - value: cancelling
            description: The deployment operation status is cancelling.
          - value: evaluatingGates
            description: The deployment operation status is EvaluatingGates.
          - value: gateFailed
            description: The deployment operation status is GateFailed.
          - value: all
            description: The deployment operation status is all.
      - name: latestAttemptsOnly
        in: query
        schema:
          type: boolean
      - name: queryOrder
        in: query
        schema:
          type: string
          enum:
          - descending
          - ascending
          x-ms-enum:
            name: ReleaseQueryOrder
            values:
            - value: descending
              description: ""
            - value: ascending
              description: ""
        x-ms-enum:
          name: ReleaseQueryOrder
          values:
          - value: descending
            description: ""
          - value: ascending
            description: ""
      - name: $top
        in: query
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        schema:
          type: integer
          format: int32
      - name: createdFor
        in: query
        schema:
          type: string
      - name: minStartedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: maxStartedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.2
      x-ms-vss-resource: deployments
      x-ms-vss-method: GetDeployments
      x-ms-preview: true
      x-ms-examples:
        Get all deployments for a given definition Id:
          $ref: ./httpExamples/deployments/GET__ListDeploymentsForAGivenDefinitionId.json
        Get all deployments in the project:
          $ref: ./httpExamples/deployments/GET__ListDeployments.json
  /{organization}/{project}/_apis/release/releases:
    get:
      tags:
      - Releases
      description: Get release summary of a given definition Id.
      operationId: Get Release Definition Summary
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: query
        description: Id of the definition to get release summary.
        required: true
        schema:
          type: integer
          format: int32
      - name: releaseCount
        in: query
        description: Count of releases to be included in summary.
        required: true
        schema:
          type: integer
          format: int32
      - name: includeArtifact
        in: query
        description: Include artifact details.Default is 'false'.
        schema:
          type: boolean
      - name: definitionEnvironmentIdsFilter
        in: query
        schema:
          type: string
          format: array (int32)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseDefinitionSummary'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.6
      x-ms-vss-resource: releases
      x-ms-vss-method: GetReleaseDefinitionSummary
      x-ms-preview: true
    post:
      tags:
      - Releases
      description: Create a release.
      operationId: Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Metadata to create a release.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseStartMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 4.1-preview.6
      x-ms-vss-resource: releases
      x-ms-vss-method: CreateRelease
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/releases/POST__CreateARelease.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/releases/{releaseId}:
    get:
      tags:
      - Releases
      description: Get release for a given revision number.
      operationId: Get Release Revision
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: definitionSnapshotRevision
        in: query
        description: Definition snapshot revision number.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.6
      x-ms-vss-resource: releases
      x-ms-vss-method: GetReleaseRevision
      x-ms-preview: true
    put:
      tags:
      - Releases
      description: Update a complete release object.
      operationId: Update Release
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Release object for update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 4.1-preview.6
      x-ms-vss-resource: releases
      x-ms-vss-method: UpdateRelease
      x-ms-preview: true
      x-codegen-request-body-name: body
    patch:
      tags:
      - Releases
      description: Update few properties of a release.
      operationId: Update Release Resource
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Properties of release to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseUpdateMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 4.1-preview.6
      x-ms-vss-resource: releases
      x-ms-vss-method: UpdateReleaseResource
      x-ms-preview: true
      x-ms-examples:
        Abandoning an active release:
          $ref: ./httpExamples/releases/PATCH__AbandonAnActiveRelease.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/Release/releases/{releaseId}/environments/{environmentId}:
    patch:
      tags:
      - Releases
      description: Update the status of a release environment
      operationId: Update Release Environment
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.5'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Environment update meta data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseEnvironmentUpdateMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseEnvironment'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 4.1-preview.5
      x-ms-vss-resource: environments
      x-ms-vss-method: UpdateReleaseEnvironment
      x-ms-preview: true
      x-codegen-request-body-name: body
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/attachments/{type}
  : get:
      tags:
      - Attachments
      operationId: List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: attemptId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: timelineId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseTaskAttachment'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTaskAttachments
      x-ms-preview: true
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}
  : get:
      tags:
      - Attachments
      operationId: Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: attemptId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: timelineId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: recordId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTaskAttachmentContent
      x-ms-preview: true
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/deployPhases/{releaseDeployPhaseId}/tasks/{taskId}/logs
  : get:
      tags:
      - Releases
      description: Gets the task log of a release as a plain text file.
      operationId: Get Task Log
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: releaseDeployPhaseId
        in: path
        description: Release deploy phase Id.
        required: true
        schema:
          type: integer
          format: int32
      - name: taskId
        in: path
        description: ReleaseTask Id for the log.
        required: true
        schema:
          type: integer
          format: int32
      - name: startLine
        in: query
        description: Starting line number for logs
        schema:
          type: integer
          format: int64
      - name: endLine
        in: query
        description: Ending line number for logs
        schema:
          type: integer
          format: int64
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.2
      x-ms-vss-resource: logs
      x-ms-vss-method: GetTaskLog
      x-ms-preview: true
  /{organization}/{project}/_apis/release/releases/{releaseId}/logs:
    get:
      tags:
      - Releases
      description: Get logs for a release Id.
      operationId: Get Logs
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.2
      x-ms-vss-resource: logs
      x-ms-vss-method: GetLogs
      x-ms-preview: true
  /{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions:
    get:
      tags:
      - Manual Interventions
      description: List all manual interventions for a given release.
      operationId: List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManualIntervention'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: manualInterventions
      x-ms-vss-method: GetManualInterventions
      x-ms-preview: true
      x-ms-examples:
        Get manual interventions:
          $ref: ./httpExamples/manualInterventions/GET__GetManualInterventions.json
  /{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions/{manualInterventionId}:
    get:
      tags:
      - Manual Interventions
      description: Get manual intervention for a given release and manual intervention
        id.
      operationId: Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: manualInterventionId
        in: path
        description: Id of the manual intervention.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualIntervention'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: manualInterventions
      x-ms-vss-method: GetManualIntervention
      x-ms-preview: true
      x-ms-examples:
        Get manual intervention:
          $ref: ./httpExamples/manualInterventions/GET__GetManualIntervention.json
    patch:
      tags:
      - Manual Interventions
      description: Update manual intervention.
      operationId: Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: manualInterventionId
        in: path
        description: Id of the manual intervention.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '4.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Meta data to update manual intervention.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualInterventionUpdateMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualIntervention'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 4.1-preview.1
      x-ms-vss-resource: manualInterventions
      x-ms-vss-method: UpdateManualIntervention
      x-ms-preview: true
      x-ms-examples:
        Resume manual intervention:
          $ref: ./httpExamples/manualInterventions/PATCH__ResumeManualIntervention.json
        Reject manual intervention:
          $ref: ./httpExamples/manualInterventions/PATCH__RejectManualIntervention.json
      x-codegen-request-body-name: body
components:
  schemas:
    AgentArtifactDefinition:
      type: object
      properties:
        alias:
          type: string
        artifactType:
          type: string
          enum:
          - xamlBuild
          - build
          - jenkins
          - fileShare
          - nuget
          - tfsOnPrem
          - gitHub
          - tFGit
          - externalTfsBuild
          - custom
          - tfvc
          x-ms-enum:
            name: AgentArtifactType
            values:
            - value: xamlBuild
              description: ""
            - value: build
              description: ""
            - value: jenkins
              description: ""
            - value: fileShare
              description: ""
            - value: nuget
              description: ""
            - value: tfsOnPrem
              description: ""
            - value: gitHub
              description: ""
            - value: tFGit
              description: ""
            - value: externalTfsBuild
              description: ""
            - value: custom
              description: ""
            - value: tfvc
              description: ""
        details:
          type: string
        name:
          type: string
        version:
          type: string
      description: ""
    AgentBasedDeployPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeployPhase'
    AgentDeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeploymentInput'
    ApprovalOptions:
      type: object
      properties:
        autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped:
          type: boolean
        enforceIdentityRevalidation:
          type: boolean
        executionOrder:
          type: string
          enum:
          - beforeGates
          - afterSuccessfulGates
          - afterGatesAlways
          x-ms-enum:
            name: ApprovalExecutionOrder
            values:
            - value: beforeGates
              description: ""
            - value: afterSuccessfulGates
              description: ""
            - value: afterGatesAlways
              description: ""
        releaseCreatorCanBeApprover:
          type: boolean
        requiredApproverCount:
          type: integer
          format: int32
        timeoutInMinutes:
          type: integer
          format: int32
      description: ""
    Artifact:
      type: object
      properties:
        alias:
          type: string
          description: Gets or sets alias.
        definitionReference:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ArtifactSourceReference'
          description: Gets or sets definition reference. e.g. {"project":{"id":"fed755ea-49c5-4399-acea-fd5b5aa90a6c","name":"myProject"},"definition":{"id":"1","name":"mybuildDefinition"},"connection":{"id":"1","name":"myConnection"}}
        isPrimary:
          type: boolean
          description: Gets or sets as artifact is primary or not.
        type:
          type: string
          description: Gets or sets type. It can have value as 'Build', 'Jenkins',
            'GitHub', 'Nuget', 'Team Build (external)', 'ExternalTFSBuild', 'Git',
            'TFVC', 'ExternalTfsXamlBuild'.
      description: ""
    ArtifactContributionDefinition:
      type: object
      properties:
        artifactType:
          type: string
        artifactTypeStreamMapping:
          type: object
          additionalProperties:
            type: string
        browsableArtifactTypeMapping:
          type: object
          additionalProperties:
            type: string
        dataSourceBindings:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceBinding'
        displayName:
          type: string
        downloadTaskId:
          type: string
        endpointTypeId:
          type: string
        inputDescriptors:
          type: array
          items:
            $ref: '#/components/schemas/InputDescriptor'
        name:
          type: string
        uniqueSourceIdentifier:
          type: string
      description: ""
    ArtifactDownloadInputBase:
      type: object
      properties:
        alias:
          type: string
        artifactDownloadMode:
          type: string
        artifactType:
          type: string
      description: ""
    ArtifactFilter:
      type: object
      properties:
        sourceBranch:
          type: string
        tags:
          type: array
          items:
            type: string
        useBuildDefinitionBranch:
          type: boolean
      description: ""
    ArtifactInstanceData:
      type: object
      properties:
        accountName:
          type: string
        authenticationToken:
          type: string
        tfsUrl:
          type: string
        version:
          type: string
      description: ""
    ArtifactMetadata:
      type: object
      properties:
        alias:
          type: string
          description: Sets alias of artifact.
        instanceReference:
          $ref: '#/components/schemas/BuildVersion'
      description: ""
    ArtifactProvider:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        sourceUri:
          type: string
        version:
          type: string
      description: ""
    ArtifactsDownloadInput:
      type: object
      properties:
        downloadInputs:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactDownloadInputBase'
      description: ""
    ArtifactSourceId:
      type: object
      properties:
        artifactTypeId:
          type: string
        sourceIdInputs:
          type: array
          items:
            $ref: '#/components/schemas/SourceIdInput'
      description: ""
    ArtifactSourceIdsQueryResult:
      type: object
      properties:
        artifactSourceIds:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactSourceId'
      description: ""
    ArtifactSourceReference:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      description: ""
    ArtifactSourceTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ArtifactTypeDefinition:
      type: object
      properties:
        displayName:
          type: string
        endpointTypeId:
          type: string
        inputDescriptors:
          type: array
          items:
            $ref: '#/components/schemas/InputDescriptor'
        name:
          type: string
        uniqueSourceIdentifier:
          type: string
      description: ""
    ArtifactVersion:
      type: object
      properties:
        alias:
          type: string
        defaultVersion:
          $ref: '#/components/schemas/BuildVersion'
        errorMessage:
          type: string
        versions:
          type: array
          items:
            $ref: '#/components/schemas/BuildVersion'
      description: ""
    ArtifactVersionQueryResult:
      type: object
      properties:
        artifactVersions:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactVersion'
      description: ""
    AuthorizationHeader:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: ""
    AutoTriggerIssue:
      type: object
      properties:
        issue:
          $ref: '#/components/schemas/Issue'
        issueSource:
          type: string
          enum:
          - none
          - user
          - system
          x-ms-enum:
            name: IssueSource
            values:
            - value: none
              description: ""
            - value: user
              description: ""
            - value: system
              description: ""
        project:
          $ref: '#/components/schemas/ProjectReference'
        releaseDefinitionReference:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseTriggerType:
          type: string
          enum:
          - undefined
          - artifactSource
          - schedule
          - sourceRepo
          - containerImage
          - package
          - pullRequest
          x-ms-enum:
            name: ReleaseTriggerType
            values:
            - value: undefined
              description: ""
            - value: artifactSource
              description: ""
            - value: schedule
              description: ""
            - value: sourceRepo
              description: ""
            - value: containerImage
              description: ""
            - value: package
              description: ""
            - value: pullRequest
              description: ""
      description: ""
    AzureKeyVaultVariableGroupProviderData:
      description: ""
      allOf:
      - $ref: '#/components/schemas/VariableGroupProviderData'
    AzureKeyVaultVariableValue:
      description: ""
      allOf:
      - $ref: '#/components/schemas/VariableValue'
    BaseDeploymentInput:
      type: object
      properties:
        condition:
          type: string
        jobCancelTimeoutInMinutes:
          type: integer
          description: Gets or sets the job cancel timeout in minutes for deployment
            which are cancelled by user for this release environment
          format: int32
        overrideInputs:
          type: object
          additionalProperties:
            type: string
        timeoutInMinutes:
          type: integer
          description: Gets or sets the job execution timeout in minutes for deployment
            which are queued against this release environment
          format: int32
      description: ""
    BuildArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    BuildVersion:
      type: object
      properties:
        commitMessage:
          type: string
        id:
          type: string
        name:
          type: string
        sourceBranch:
          type: string
        sourcePullRequestId:
          type: string
          description: PullRequestId or Commit Id for the Pull Request for which the
            release will publish status
        sourceRepositoryId:
          type: string
        sourceRepositoryType:
          type: string
        sourceVersion:
          type: string
      description: ""
    Change:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/IdentityRef'
        changeType:
          type: string
          description: The type of change. "commit", "changeset", etc.
        displayUri:
          type: string
          description: The location of a user-friendly representation of the resource.
        id:
          type: string
          description: Something that identifies the change. For a commit, this would
            be the SHA1. For a TFVC changeset, this would be the changeset id.
        location:
          type: string
          description: The location of the full representation of the resource.
        message:
          type: string
          description: A description of the change. This might be a commit message
            or changeset description.
        pusher:
          type: string
          description: The person or process that pushed the change.
        timestamp:
          type: string
          description: A timestamp for the change.
          format: date-time
      description: Represents a change associated with a build.
    Condition:
      type: object
      properties:
        conditionType:
          type: string
          description: Gets or sets the condition type.
          enum:
          - undefined
          - event
          - environmentState
          - artifact
          x-ms-enum:
            name: ConditionType
            values:
            - value: undefined
              description: The condition type is undefined.
            - value: event
              description: The condition type is event.
            - value: environmentState
              description: The condition type is environment state.
            - value: artifact
              description: The condition type is artifact.
        name:
          type: string
          description: Gets or sets the name of the condition. e.g. 'ReleaseStarted'.
        value:
          type: string
          description: Gets or set value of the condition.
      description: ""
    ConfigurationVariableValue:
      type: object
      properties:
        isSecret:
          type: boolean
          description: Gets or sets as variable is secret or not.
        value:
          type: string
          description: Gets or sets value of the configuration variable.
      description: ""
    Consumer:
      type: object
      properties:
        consumerId:
          type: integer
          format: int32
        consumerName:
          type: string
      description: ""
    ContainerImageTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ContinuousDeploymentTriggerIssue:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AutoTriggerIssue'
    ControlOptions:
      type: object
      properties:
        alwaysRun:
          type: boolean
        continueOnError:
          type: boolean
        enabled:
          type: boolean
      description: ""
    CustomArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    DataSourceBinding:
      type: object
      properties:
        dataSourceName:
          type: string
        endpointId:
          type: string
        endpointUrl:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        resultSelector:
          type: string
        resultTemplate:
          type: string
        target:
          type: string
      description: ""
    DataSourceBindingBase:
      type: object
      properties:
        dataSourceName:
          type: string
          description: Gets or sets the name of the data source.
        endpointId:
          type: string
          description: Gets or sets the endpoint Id.
        endpointUrl:
          type: string
          description: Gets or sets the url of the service endpoint.
        headers:
          type: array
          description: Gets or sets the authorization headers.
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters for the data source.
        resultSelector:
          type: string
          description: Gets or sets the result selector.
        resultTemplate:
          type: string
          description: Gets or sets the result template.
        target:
          type: string
          description: Gets or sets the target of the data source.
      description: Represents binding of data source for the service endpoint request.
    DefinitionEnvironmentReference:
      type: object
      properties:
        definitionEnvironmentId:
          type: integer
          format: int32
        definitionEnvironmentName:
          type: string
        releaseDefinitionId:
          type: integer
          format: int32
        releaseDefinitionName:
          type: string
      description: ""
    Demand:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: ""
    Deployment:
      type: object
      properties:
        attempt:
          type: integer
          description: Gets attempt number.
          format: int32
        completedOn:
          type: string
          description: Gets the date on which deployment is complete.
          format: date-time
        conditions:
          type: array
          description: Gets the list of condition associated with deployment.
          items:
            $ref: '#/components/schemas/Condition'
        definitionEnvironmentId:
          type: integer
          description: Gets release definition environment id.
          format: int32
        deploymentStatus:
          type: string
          description: Gets status of the deployment.
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is inprogress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
        id:
          type: integer
          description: Gets the unique identifier for deployment.
          format: int32
        lastModifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastModifiedOn:
          type: string
          description: Gets the date on which deployment is last modified.
          format: date-time
        operationStatus:
          type: string
          description: Gets operation status of deployment.
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase inprogress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        postDeployApprovals:
          type: array
          description: Gets list of PostDeployApprovals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        preDeployApprovals:
          type: array
          description: Gets list of PreDeployApprovals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        queuedOn:
          type: string
          description: Gets the date on which deployment is queued.
          format: date-time
        reason:
          type: string
          description: Gets reason of deployment.
          enum:
          - none
          - manual
          - automated
          - scheduled
          x-ms-enum:
            name: DeploymentReason
            values:
            - value: none
              description: The deployment reason is none.
            - value: manual
              description: The deployment reason is manual.
            - value: automated
              description: The deployment reason is automated.
            - value: scheduled
              description: The deployment reason is scheduled.
        release:
          $ref: '#/components/schemas/ReleaseReference'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseEnvironment:
          $ref: '#/components/schemas/ReleaseEnvironmentShallowReference'
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        scheduledDeploymentTime:
          type: string
          description: Gets the date on which deployment is scheduled.
          format: date-time
        startedOn:
          type: string
          description: Gets the date on which deployment is started.
          format: date-time
      description: ""
    DeploymentApprovalCompletedEvent:
      type: object
      properties:
        approval:
          $ref: '#/components/schemas/ReleaseApproval'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeploymentApprovalPendingEvent:
      type: object
      properties:
        approval:
          $ref: '#/components/schemas/ReleaseApproval'
        approvalOptions:
          $ref: '#/components/schemas/ApprovalOptions'
        completedApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        deployment:
          $ref: '#/components/schemas/Deployment'
        isMultipleRankApproval:
          type: boolean
        pendingApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeploymentAttempt:
      type: object
      properties:
        attempt:
          type: integer
          format: int32
        deploymentId:
          type: integer
          format: int32
        hasStarted:
          type: boolean
          description: Specifies whether deployment has started or not
        id:
          type: integer
          format: int32
        issues:
          type: array
          description: All the issues related to the deployment
          items:
            $ref: '#/components/schemas/Issue'
        job:
          $ref: '#/components/schemas/ReleaseTask'
        lastModifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastModifiedOn:
          type: string
          format: date-time
        operationStatus:
          type: string
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase inprogress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        postDeploymentGates:
          $ref: '#/components/schemas/ReleaseGates'
        preDeploymentGates:
          $ref: '#/components/schemas/ReleaseGates'
        queuedOn:
          type: string
          format: date-time
        reason:
          type: string
          enum:
          - none
          - manual
          - automated
          - scheduled
          x-ms-enum:
            name: DeploymentReason
            values:
            - value: none
              description: The deployment reason is none.
            - value: manual
              description: The deployment reason is manual.
            - value: automated
              description: The deployment reason is automated.
            - value: scheduled
              description: The deployment reason is scheduled.
        releaseDeployPhases:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseDeployPhase'
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        runPlanId:
          type: string
          format: uuid
        status:
          type: string
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is inprogress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseTask'
      description: ""
    DeploymentAuthorizationInfo:
      type: object
      properties:
        authorizationHeaderFor:
          type: string
          enum:
          - revalidateApproverIdentity
          - onBehalfOf
          x-ms-enum:
            name: AuthorizationHeaderFor
            values:
            - value: revalidateApproverIdentity
              description: ""
            - value: onBehalfOf
              description: ""
        resources:
          type: array
          items:
            type: string
        tenantId:
          type: string
        vstsAccessTokenKey:
          type: string
      description: ""
    DeploymentCompletedEvent:
      type: object
      properties:
        comment:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        deployment:
          $ref: '#/components/schemas/Deployment'
        environment:
          $ref: '#/components/schemas/ReleaseEnvironment'
        project:
          $ref: '#/components/schemas/ProjectReference'
      description: ""
    DeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BaseDeploymentInput'
    DeploymentJob:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/ReleaseTask'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseTask'
      description: ""
    DeploymentManualInterventionPendingEvent:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/Deployment'
        emailRecipients:
          type: array
          items:
            type: string
            format: uuid
        environmentOwner:
          $ref: '#/components/schemas/IdentityRef'
        manualIntervention:
          $ref: '#/components/schemas/ManualIntervention'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeploymentQueryParameters:
      type: object
      properties:
        artifactSourceId:
          type: string
        artifactTypeId:
          type: string
        artifactVersions:
          type: array
          items:
            type: string
        deploymentsPerEnvironment:
          type: integer
          format: int32
        deploymentStatus:
          type: string
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is inprogress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
        environments:
          type: array
          items:
            $ref: '#/components/schemas/DefinitionEnvironmentReference'
        expands:
          type: string
          enum:
          - all
          - deploymentOnly
          - approvals
          - artifacts
          x-ms-enum:
            name: DeploymentExpands
            values:
            - value: all
              description: ""
            - value: deploymentOnly
              description: ""
            - value: approvals
              description: ""
            - value: artifacts
              description: ""
        isDeleted:
          type: boolean
        operationStatus:
          type: string
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase inprogress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        queryType:
          type: string
          enum:
          - regular
          - failingSince
          x-ms-enum:
            name: DeploymentsQueryType
            values:
            - value: regular
              description: ""
            - value: failingSince
              description: ""
        sourceBranch:
          type: string
      description: ""
    DeploymentStartedEvent:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/ReleaseEnvironment'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeployPhase:
      type: object
      properties:
        name:
          type: string
        phaseType:
          type: string
          enum:
          - undefined
          - agentBasedDeployment
          - runOnServer
          - machineGroupBasedDeployment
          x-ms-enum:
            name: DeployPhaseTypes
            values:
            - value: undefined
              description: ""
            - value: agentBasedDeployment
              description: ""
            - value: runOnServer
              description: ""
            - value: machineGroupBasedDeployment
              description: ""
        rank:
          type: integer
          format: int32
        workflowTasks:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowTask'
      description: ""
    EmailRecipients:
      type: object
      properties:
        emailAddresses:
          type: array
          items:
            type: string
        tfsIds:
          type: array
          items:
            type: string
            format: uuid
      description: ""
    EnvironmentExecutionPolicy:
      type: object
      properties:
        concurrencyCount:
          type: integer
          description: This policy decides, how many environments would be with Environment
            Runner.
          format: int32
        queueDepthCount:
          type: integer
          description: Queue depth in the EnvironmentQueue table, this table keeps
            the environment entries till Environment Runner is free [as per it's policy]
            to take another environment for running.
          format: int32
      description: Defines policy on environment queuing at Release Management side
        queue. We will send to Environment Runner [creating pre-deploy and other steps]
        only when the policies mentioned are satisfied.
    EnvironmentOptions:
      type: object
      properties:
        autoLinkWorkItems:
          type: boolean
        badgeEnabled:
          type: boolean
        emailNotificationType:
          type: string
        emailRecipients:
          type: string
        enableAccessToken:
          type: boolean
        publishDeploymentStatus:
          type: boolean
        skipArtifactsDownload:
          type: boolean
        timeoutInMinutes:
          type: integer
          format: int32
      description: ""
    EnvironmentRetentionPolicy:
      type: object
      properties:
        daysToKeep:
          type: integer
          format: int32
        releasesToKeep:
          type: integer
          format: int32
        retainBuild:
          type: boolean
      description: ""
    ExecutionInput:
      type: object
      properties:
        parallelExecutionType:
          type: string
          enum:
          - none
          - multiConfiguration
          - multiMachine
          x-ms-enum:
            name: ParallelExecutionTypes
            values:
            - value: none
              description: ""
            - value: multiConfiguration
              description: ""
            - value: multiMachine
              description: ""
      description: ""
    FavoriteItem:
      type: object
      properties:
        data:
          type: string
          description: Application specific data for the entry
        id:
          type: string
          description: Unique Id of the the entry
          format: uuid
        name:
          type: string
          description: Display text for favorite entry
        type:
          type: string
          description: Application specific favorite entry type. Empty or Null represents
            that Favorite item is a Folder
      description: Class to represent favorite entry
    Folder:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          format: date-time
        description:
          type: string
        lastChangedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastChangedDate:
          type: string
          format: date-time
        path:
          type: string
      description: ""
    GitArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    GitHubArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Organizations.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    InputDescriptor:
      type: object
      properties:
        dependencyInputIds:
          type: array
          description: The ids of all inputs that the value of this input is dependent
            on.
          items:
            type: string
        description:
          type: string
          description: Description of what this input is used for
        groupName:
          type: string
          description: The group localized name to which this input belongs and can
            be shown as a header for the container that will include all the inputs
            in the group.
        hasDynamicValueInformation:
          type: boolean
          description: If true, the value information for this input is dynamic and
            should be fetched when the value of dependency inputs change.
        id:
          type: string
          description: Identifier for the subscription input
        inputMode:
          type: string
          description: Mode in which the value of this input should be entered
          enum:
          - none
          - textBox
          - passwordBox
          - combo
          - radioButtons
          - checkBox
          - textArea
          x-ms-enum:
            name: InputMode
            values:
            - value: none
              description: This input should not be shown in the UI
            - value: textBox
              description: An input text box should be shown
            - value: passwordBox
              description: An password input box should be shown
            - value: combo
              description: A select/combo control should be shown
            - value: radioButtons
              description: Radio buttons should be shown
            - value: checkBox
              description: Checkbox should be shown(for true/false values)
            - value: textArea
              description: A multi-line text area should be shown
        isConfidential:
          type: boolean
          description: Gets whether this input is confidential, such as for a password
            or application key
        name:
          type: string
          description: Localized name which can be shown as a label for the subscription
            input
        properties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: Custom properties for the input which can be used by the service
            provider
        type:
          type: string
          description: Underlying data type for the input value. When this value is
            specified, InputMode, Validation and Values are optional.
        useInDefaultDescription:
          type: boolean
          description: Gets whether this input is included in the default generated
            action description.
        validation:
          $ref: '#/components/schemas/InputValidation'
        valueHint:
          type: string
          description: A hint for input value. It can be used in the UI as the input
            placeholder.
        values:
          $ref: '#/components/schemas/InputValues'
      description: Describes an input for subscriptions.
    InputValidation:
      type: object
      properties:
        dataType:
          type: string
          enum:
          - none
          - string
          - number
          - boolean
          - guid
          - uri
          x-ms-enum:
            name: InputDataType
            values:
            - value: none
              description: No data type is specified.
            - value: string
              description: Represents a textual value.
            - value: number
              description: Represents a numberic value.
            - value: boolean
              description: Represents a value of true or false.
            - value: guid
              description: Represents a Guid.
            - value: uri
              description: Represents a URI.
        isRequired:
          type: boolean
        maxLength:
          type: integer
          format: int32
        maxValue:
          type: string
          format: decimal
        minLength:
          type: integer
          format: int32
        minValue:
          type: string
          format: decimal
        pattern:
          type: string
        patternMismatchErrorMessage:
          type: string
      description: Describes what values are valid for a subscription input
    InputValue:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: Any other data about this input
        displayValue:
          type: string
          description: The text to show for the display of this value
        value:
          type: string
          description: The value to store for this input
      description: Information about a single value for an input
    InputValues:
      type: object
      properties:
        defaultValue:
          type: string
          description: The default value to use for this input
        error:
          $ref: '#/components/schemas/InputValuesError'
        inputId:
          type: string
          description: The id of the input
        isDisabled:
          type: boolean
          description: Should this input be disabled
        isLimitedToPossibleValues:
          type: boolean
          description: Should the value be restricted to one of the values in the
            PossibleValues (True) or are the values in PossibleValues just a suggestion
            (False)
        isReadOnly:
          type: boolean
          description: Should this input be made read-only
        possibleValues:
          type: array
          description: Possible values that this input can take
          items:
            $ref: '#/components/schemas/InputValue'
      description: Information about the possible/allowed values for a given subscription
        input
    InputValuesError:
      type: object
      properties:
        message:
          type: string
          description: The error message.
      description: Error information related to a subscription input value.
    InputValuesQuery:
      type: object
      properties:
        currentValues:
          type: object
          additionalProperties:
            type: string
        inputValues:
          type: array
          description: The input values to return on input, and the result from the
            consumer on output.
          items:
            $ref: '#/components/schemas/InputValues'
        resource:
          type: object
          properties: {}
          description: Subscription containing information about the publisher/consumer
            and the current input values
      description: ""
    Issue:
      type: object
      properties:
        issueType:
          type: string
        message:
          type: string
      description: ""
    JenkinsArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    MachineGroupBasedDeployPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeployPhase'
    MachineGroupDeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeploymentInput'
    MailMessage:
      type: object
      properties:
        body:
          type: string
        cC:
          $ref: '#/components/schemas/EmailRecipients'
        inReplyTo:
          type: string
        messageId:
          type: string
        replyBy:
          type: string
          format: date-time
        replyTo:
          $ref: '#/components/schemas/EmailRecipients'
        sections:
          type: array
          items:
            type: object
            x-ms-enum:
              name: MailSectionType
              values:
              - value: details
                description: ""
              - value: environments
                description: ""
              - value: issues
                description: ""
              - value: testResults
                description: ""
              - value: workItems
                description: ""
              - value: releaseInfo
                description: ""
        senderType:
          type: string
          enum:
          - serviceAccount
          - requestingUser
          x-ms-enum:
            name: SenderType
            values:
            - value: serviceAccount
              description: ""
            - value: requestingUser
              description: ""
        subject:
          type: string
        to:
          $ref: '#/components/schemas/EmailRecipients'
      description: ""
    ManualIntervention:
      type: object
      properties:
        approver:
          $ref: '#/components/schemas/IdentityRef'
        comments:
          type: string
          description: Gets or sets comments for approval.
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        id:
          type: integer
          description: Gets the unique identifier for manual intervention.
          format: int32
        instructions:
          type: string
          description: Gets or sets instructions for approval.
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets or sets the name.
        release:
          $ref: '#/components/schemas/ReleaseShallowReference'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseEnvironment:
          $ref: '#/components/schemas/ReleaseEnvironmentShallowReference'
        status:
          type: string
          description: Gets or sets the status of the manual intervention.
          enum:
          - unknown
          - pending
          - rejected
          - approved
          - canceled
          x-ms-enum:
            name: ManualInterventionStatus
            values:
            - value: unknown
              description: The manual intervention does not have the status set.
            - value: pending
              description: The manual intervention is pending.
            - value: rejected
              description: The manual intervention is rejected.
            - value: approved
              description: The manual intervention is approved.
            - value: canceled
              description: The manual intervention is canceled.
        taskInstanceId:
          type: string
          description: Get task instance identifier.
          format: uuid
        url:
          type: string
          description: Gets url to access the manual intervention.
      description: ""
    ManualInterventionUpdateMetadata:
      type: object
      properties:
        comment:
          type: string
          description: Sets the comment for manual intervention update.
        status:
          type: string
          description: Sets the status of the manual intervention.
          enum:
          - unknown
          - pending
          - rejected
          - approved
          - canceled
          x-ms-enum:
            name: ManualInterventionStatus
            values:
            - value: unknown
              description: The manual intervention does not have the status set.
            - value: pending
              description: The manual intervention is pending.
            - value: rejected
              description: The manual intervention is rejected.
            - value: approved
              description: The manual intervention is approved.
            - value: canceled
              description: The manual intervention is canceled.
      description: ""
    MappingDetails:
      type: object
      properties:
        mappings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InputValue'
      description: ""
    Metric:
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
          format: int32
      description: ""
    MultiConfigInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ParallelExecutionInputBase'
    MultiMachineInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ParallelExecutionInputBase'
    PackageTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ParallelExecutionInputBase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ExecutionInput'
    PipelineProcess:
      type: object
      properties:
        type:
          type: string
          enum:
          - designer
          - yaml
          x-ms-enum:
            name: PipelineProcessTypes
            values:
            - value: designer
              description: ""
            - value: yaml
              description: ""
      description: ""
    ProcessParameters:
      type: object
      properties:
        dataSourceBindings:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceBindingBase'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/TaskInputDefinitionBase'
        sourceDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/TaskSourceDefinitionBase'
      description: ""
    ProjectReference:
      type: object
      properties:
        id:
          type: string
          description: Gets the unique identifier of this field.
          format: uuid
        name:
          type: string
          description: Gets name of project.
      description: ""
    PropertiesCollection:
      type: object
      properties:
        count:
          type: integer
          description: The count of properties in the collection.
          format: int32
        item:
          type: object
          properties: {}
        keys:
          type: array
          description: The set of keys in the collection.
          items:
            type: string
        values:
          type: array
          description: The set of values in the collection.
          items:
            type: string
      description: The class represents a property bag as a collection of key-value
        pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`)
        except for `DBNull` are accepted. Values of type Byte[], Int32, Double, DateType
        and String preserve their type, other primitives are retuned as a String.
        Byte[] expected as base64 encoded string.
    PropertySelector:
      type: object
      properties:
        properties:
          type: array
          items:
            type: string
        selectorType:
          type: string
          enum:
          - inclusion
          - exclusion
          x-ms-enum:
            name: PropertySelectorType
            values:
            - value: inclusion
              description: ""
            - value: exclusion
              description: ""
      description: ""
    QueuedReleaseData:
      type: object
      properties:
        projectId:
          type: string
          format: uuid
        queuePosition:
          type: integer
          format: int32
        releaseId:
          type: integer
          format: int32
      description: ""
    RealtimeReleaseEvent:
      type: object
      properties:
        projectId:
          type: string
          format: uuid
        releaseId:
          type: integer
          format: int32
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    Release:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        artifacts:
          type: array
          description: Gets or sets the list of artifacts.
          items:
            $ref: '#/components/schemas/Artifact'
        comment:
          type: string
          description: Gets or sets comment.
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        definitionSnapshotRevision:
          type: integer
          description: Gets revision number of definition snapshot.
          format: int32
        description:
          type: string
          description: Gets or sets description of release.
        environments:
          type: array
          description: Gets list of environments.
          items:
            $ref: '#/components/schemas/ReleaseEnvironment'
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        keepForever:
          type: boolean
          description: Whether to exclude the release from retention policies.
        logsContainerUrl:
          type: string
          description: Gets logs container url.
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets name.
        poolName:
          type: string
          description: Gets pool name.
        projectReference:
          $ref: '#/components/schemas/ProjectReference'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        reason:
          type: string
          description: Gets reason of release.
          enum:
          - none
          - manual
          - continuousIntegration
          - schedule
          x-ms-enum:
            name: ReleaseReason
            values:
            - value: none
              description: ""
            - value: manual
              description: ""
            - value: continuousIntegration
              description: ""
            - value: schedule
              description: ""
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseNameFormat:
          type: string
          description: Gets release name format.
        status:
          type: string
          description: Gets status.
          enum:
          - undefined
          - draft
          - active
          - abandoned
          x-ms-enum:
            name: ReleaseStatus
            values:
            - value: undefined
              description: ""
            - value: draft
              description: ""
            - value: active
              description: ""
            - value: abandoned
              description: ""
        tags:
          type: array
          description: Gets or sets list of tags.
          items:
            type: string
        triggeringArtifactAlias:
          type: string
        variableGroups:
          type: array
          description: Gets the list of variable groups.
          items:
            $ref: '#/components/schemas/VariableGroup'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Gets or sets the dictionary of variables.
      description: ""
    ReleaseAbandonedEvent:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    ReleaseApproval:
      type: object
      properties:
        approvalType:
          type: string
          description: Gets or sets the type of approval.
          enum:
          - undefined
          - preDeploy
          - postDeploy
          - all
          x-ms-enum:
            name: ApprovalType
            values:
            - value: undefined
              description: ""
            - value: preDeploy
              description: ""
            - value: postDeploy
              description: ""
            - value: all
              description: ""
        approvedBy:
          $ref: '#/components/schemas/IdentityRef'
        approver:
          $ref: '#/components/schemas/IdentityRef'
        attempt:
          type: integer
          description: Gets or sets attempt which specifies as which deployment attempt
            it belongs.
          format: int32
        comments:
          type: string
          description: Gets or sets comments for approval.
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        history:
          type: array
          description: Gets history which specifies all approvals associated with
            this approval.
          items:
            $ref: '#/components/schemas/ReleaseApprovalHistory'
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        isAutomated:
          type: boolean
          description: Gets or sets as approval is automated or not.
        isNotificationOn:
          type: boolean
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        rank:
          type: integer
          description: Gets or sets rank which specifies the order of the approval.
            e.g. Same rank denotes parallel approval.
          format: int32
        release:
          $ref: '#/components/schemas/ReleaseShallowReference'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseEnvironment:
          $ref: '#/components/schemas/ReleaseEnvironmentShallowReference'
        revision:
          type: integer
          description: Gets the revision number.
          format: int32
        status:
          type: string
          description: Gets or sets the status of the approval.
          enum:
          - undefined
          - pending
          - approved
          - rejected
          - reassigned
          - canceled
          - skipped
          x-ms-enum:
            name: ApprovalStatus
            values:
            - value: undefined
              description: ""
            - value: pending
              description: ""
            - value: approved
              description: ""
            - value: rejected
              description: ""
            - value: reassigned
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
        trialNumber:
          type: integer
          format: int32
        url:
          type: string
          description: Gets url to access the approval.
      description: ""
    ReleaseApprovalHistory:
      type: object
      properties:
        approver:
          $ref: '#/components/schemas/IdentityRef'
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        comments:
          type: string
        createdOn:
          type: string
          format: date-time
        modifiedOn:
          type: string
          format: date-time
        revision:
          type: integer
          format: int32
      description: ""
    ReleaseApprovalPendingEvent:
      type: object
      properties:
        approval:
          $ref: '#/components/schemas/ReleaseApproval'
        approvalOptions:
          $ref: '#/components/schemas/ApprovalOptions'
        completedApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        definitionName:
          type: string
        deployment:
          $ref: '#/components/schemas/Deployment'
        environmentId:
          type: integer
          format: int32
        environmentName:
          type: string
        environments:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseEnvironment'
        isMultipleRankApproval:
          type: boolean
        pendingApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        releaseCreator:
          type: string
        releaseName:
          type: string
        title:
          type: string
        webAccessUri:
          type: string
      description: ""
    ReleaseArtifact:
      type: object
      properties:
        artifactProvider:
          $ref: '#/components/schemas/ArtifactProvider'
        artifactType:
          type: string
        definitionData:
          type: string
        definitionId:
          type: integer
          format: int32
        description:
          type: string
        id:
          type: integer
          format: int32
        name:
          type: string
        releaseId:
          type: integer
          format: int32
      description: ""
    ReleaseCondition:
      description: ""
      allOf:
      - $ref: '#/components/schemas/Condition'
    ReleaseCreatedEvent:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    ReleaseDefinition:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        artifacts:
          type: array
          description: Gets or sets the list of artifacts.
          items:
            $ref: '#/components/schemas/Artifact'
        comment:
          type: string
          description: Gets or sets comment.
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        description:
          type: string
          description: Gets or sets the description.
        environments:
          type: array
          description: Gets or sets the list of environments.
          items:
            $ref: '#/components/schemas/ReleaseDefinitionEnvironment'
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        isDeleted:
          type: boolean
          description: Whether release definition is deleted.
        lastRelease:
          $ref: '#/components/schemas/ReleaseReference'
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets or sets the name.
        path:
          type: string
          description: Gets or sets the path.
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        releaseNameFormat:
          type: string
          description: Gets or sets the release name format.
        revision:
          type: integer
          description: Gets the revision number.
          format: int32
        source:
          type: string
          description: Gets or sets source of release definition.
          enum:
          - undefined
          - restApi
          - userInterface
          - ibiza
          - portalExtensionApi
          x-ms-enum:
            name: ReleaseDefinitionSource
            values:
            - value: undefined
              description: ""
            - value: restApi
              description: ""
            - value: userInterface
              description: ""
            - value: ibiza
              description: ""
            - value: portalExtensionApi
              description: ""
        tags:
          type: array
          description: Gets or sets list of tags.
          items:
            type: string
        triggers:
          type: array
          description: Gets or sets the list of triggers.
          items:
            $ref: '#/components/schemas/ReleaseTriggerBase'
        url:
          type: string
          description: Gets url to access the release definition.
        variableGroups:
          type: array
          description: Gets or sets the list of variable groups.
          items:
            type: integer
            format: int32
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Gets or sets the dictionary of variables.
      description: ""
    ReleaseDefinitionApprovals:
      type: object
      properties:
        approvalOptions:
          $ref: '#/components/schemas/ApprovalOptions'
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseDefinitionApprovalStep'
      description: ""
    ReleaseDefinitionApprovalStep:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseDefinitionEnvironmentStep'
    ReleaseDefinitionDeployStep:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseDefinitionEnvironmentStep'
    ReleaseDefinitionEnvironment:
      type: object
      properties:
        badgeUrl:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
        demands:
          type: array
          items:
            $ref: '#/components/schemas/Demand'
        deployPhases:
          type: array
          items:
            $ref: '#/components/schemas/DeployPhase'
        deployStep:
          $ref: '#/components/schemas/ReleaseDefinitionDeployStep'
        environmentOptions:
          $ref: '#/components/schemas/EnvironmentOptions'
        executionPolicy:
          $ref: '#/components/schemas/EnvironmentExecutionPolicy'
        id:
          type: integer
          format: int32
        name:
          type: string
        owner:
          $ref: '#/components/schemas/IdentityRef'
        postDeployApprovals:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        postDeploymentGates:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        preDeployApprovals:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        preDeploymentGates:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        processParameters:
          $ref: '#/components/schemas/ProcessParameters'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        queueId:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
        retentionPolicy:
          $ref: '#/components/schemas/EnvironmentRetentionPolicy'
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseSchedule'
        variableGroups:
          type: array
          items:
            type: integer
            format: int32
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
      description: ""
    ReleaseDefinitionEnvironmentStep:
      type: object
      properties:
        id:
          type: integer
          format: int32
      description: ""
    ReleaseDefinitionEnvironmentSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        lastReleases:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseShallowReference'
        name:
          type: string
      description: ""
    ReleaseDefinitionEnvironmentTemplate:
      type: object
      properties:
        canDelete:
          type: boolean
        category:
          type: string
        description:
          type: string
        environment:
          $ref: '#/components/schemas/ReleaseDefinitionEnvironment'
        iconTaskId:
          type: string
          format: uuid
        iconUri:
          type: string
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        name:
          type: string
      description: ""
    ReleaseDefinitionGate:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowTask'
      description: ""
    ReleaseDefinitionGatesOptions:
      type: object
      properties:
        isEnabled:
          type: boolean
        samplingInterval:
          type: integer
          format: int32
        stabilizationTime:
          type: integer
          format: int32
        timeout:
          type: integer
          format: int32
      description: ""
    ReleaseDefinitionGatesStep:
      type: object
      properties:
        gates:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseDefinitionGate'
        gatesOptions:
          $ref: '#/components/schemas/ReleaseDefinitionGatesOptions'
        id:
          type: integer
          format: int32
      description: ""
    ReleaseDefinitionRevision:
      type: object
      properties:
        apiVersion:
          type: string
          description: Gets api-version for revision object.
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        changedDate:
          type: string
          description: Gets date on which it got changed.
          format: date-time
        changeType:
          type: string
          description: Gets type of change.
          enum:
          - add
          - update
          - delete
          - undelete
          x-ms-enum:
            name: AuditAction
            values:
            - value: add
              description: ""
            - value: update
              description: ""
            - value: delete
              description: ""
            - value: undelete
              description: ""
        comment:
          type: string
          description: Gets comments for revision.
        definitionId:
          type: integer
          description: Get id of the definition.
          format: int32
        definitionUrl:
          type: string
          description: Gets definition url.
        revision:
          type: integer
          description: Get revision number of the definition.
          format: int32
      description: ""
    ReleaseDefinitionShallowReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          description: Gets the unique identifier of release definition.
          format: int32
        name:
          type: string
          description: Gets or sets the name of the release definition.
        url:
          type: string
          description: Gets the REST API url to access the release definition.
      description: ""
    ReleaseDefinitionSummary:
      type: object
      properties:
        environments:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseDefinitionEnvironmentSummary'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releases:
          type: array
          items:
            $ref: '#/components/schemas/Release'
      description: ""
    ReleaseDefinitionUndeleteParameter:
      type: object
      properties:
        comment:
          type: string
          description: Gets or sets comment.
      description: ""
    ReleaseDeployPhase:
      type: object
      properties:
        deploymentJobs:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentJob'
        errorLog:
          type: string
        id:
          type: integer
          format: int32
        manualInterventions:
          type: array
          items:
            $ref: '#/components/schemas/ManualIntervention'
        name:
          type: string
        phaseId:
          type: string
        phaseType:
          type: string
          enum:
          - undefined
          - agentBasedDeployment
          - runOnServer
          - machineGroupBasedDeployment
          x-ms-enum:
            name: DeployPhaseTypes
            values:
            - value: undefined
              description: ""
            - value: agentBasedDeployment
              description: ""
            - value: runOnServer
              description: ""
            - value: machineGroupBasedDeployment
              description: ""
        rank:
          type: integer
          format: int32
        runPlanId:
          type: string
          format: uuid
        status:
          type: string
          enum:
          - undefined
          - notStarted
          - inProgress
          - partiallySucceeded
          - succeeded
          - failed
          - canceled
          - skipped
          - cancelling
          x-ms-enum:
            name: DeployPhaseStatus
            values:
            - value: undefined
              description: ""
            - value: notStarted
              description: ""
            - value: inProgress
              description: ""
            - value: partiallySucceeded
              description: ""
            - value: succeeded
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: cancelling
              description: ""
      description: ""
    ReleaseEnvironment:
      type: object
      properties:
        conditions:
          type: array
          description: Gets list of conditions.
          items:
            $ref: '#/components/schemas/ReleaseCondition'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        definitionEnvironmentId:
          type: integer
          description: Gets definition environment id.
          format: int32
        demands:
          type: array
          description: Gets demands.
          items:
            $ref: '#/components/schemas/Demand'
        deployPhasesSnapshot:
          type: array
          description: Gets list of deploy phases snapshot.
          items:
            $ref: '#/components/schemas/DeployPhase'
        deploySteps:
          type: array
          description: Gets deploy steps.
          items:
            $ref: '#/components/schemas/DeploymentAttempt'
        environmentOptions:
          $ref: '#/components/schemas/EnvironmentOptions'
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets name.
        nextScheduledUtcTime:
          type: string
          description: Gets next scheduled UTC time.
          format: date-time
        owner:
          $ref: '#/components/schemas/IdentityRef'
        postApprovalsSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        postDeployApprovals:
          type: array
          description: Gets list of post deploy approvals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        postDeploymentGatesSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        preApprovalsSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        preDeployApprovals:
          type: array
          description: Gets list of pre deploy approvals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        preDeploymentGatesSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        processParameters:
          $ref: '#/components/schemas/ProcessParameters'
        queueId:
          type: integer
          description: Gets queue id.
          format: int32
        rank:
          type: integer
          description: Gets rank.
          format: int32
        release:
          $ref: '#/components/schemas/ReleaseShallowReference'
        releaseCreatedBy:
          $ref: '#/components/schemas/IdentityRef'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseDescription:
          type: string
          description: Gets release description.
        releaseId:
          type: integer
          description: Gets release id.
          format: int32
        scheduledDeploymentTime:
          type: string
          description: Gets schedule deployment time of release environment.
          format: date-time
        schedules:
          type: array
          description: Gets list of schedules.
          items:
            $ref: '#/components/schemas/ReleaseSchedule'
        status:
          type: string
          description: Gets environment status.
          enum:
          - undefined
          - notStarted
          - inProgress
          - succeeded
          - canceled
          - rejected
          - queued
          - scheduled
          - partiallySucceeded
          x-ms-enum:
            name: EnvironmentStatus
            values:
            - value: undefined
              description: ""
            - value: notStarted
              description: ""
            - value: inProgress
              description: ""
            - value: succeeded
              description: ""
            - value: canceled
              description: ""
            - value: rejected
              description: ""
            - value: queued
              description: ""
            - value: scheduled
              description: ""
            - value: partiallySucceeded
              description: ""
        timeToDeploy:
          type: number
          description: Gets time to deploy.
          format: double
        triggerReason:
          type: string
          description: Gets trigger reason.
        variableGroups:
          type: array
          description: Gets the list of variable groups.
          items:
            $ref: '#/components/schemas/VariableGroup'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Gets the dictionary of variables.
        workflowTasks:
          type: array
          description: Gets list of workflow tasks.
          items:
            $ref: '#/components/schemas/WorkflowTask'
      description: ""
    ReleaseEnvironmentCompletedEvent:
      type: object
      properties:
        createdByName:
          type: string
        definitionId:
          type: integer
          format: int32
        definitionName:
          type: string
        environment:
          $ref: '#/components/schemas/ReleaseEnvironment'
        environmentId:
          type: integer
          format: int32
        projectName:
          type: string
        reason:
          type: string
          enum:
          - none
          - manual
          - automated
          - scheduled
          x-ms-enum:
            name: DeploymentReason
            values:
            - value: none
              description: The deployment reason is none.
            - value: manual
              description: The deployment reason is manual.
            - value: automated
              description: The deployment reason is automated.
            - value: scheduled
              description: The deployment reason is scheduled.
        releaseCreatedBy:
          $ref: '#/components/schemas/IdentityRef'
        releaseLogsUri:
          type: string
        releaseName:
          type: string
        status:
          type: string
        title:
          type: string
        webAccessUri:
          type: string
      description: ""
    ReleaseEnvironmentShallowReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          description: Gets the unique identifier of release environment.
          format: int32
        name:
          type: string
          description: Gets or sets the name of the release environment.
        url:
          type: string
          description: Gets the REST API url to access the release environment.
      description: ""
    ReleaseEnvironmentUpdateMetadata:
      type: object
      properties:
        comment:
          type: string
          description: Gets or sets comment.
        scheduledDeploymentTime:
          type: string
          description: Gets or sets scheduled deployment time.
          format: date-time
        status:
          type: string
          description: Gets or sets status of environment.
          enum:
          - undefined
          - notStarted
          - inProgress
          - succeeded
          - canceled
          - rejected
          - queued
          - scheduled
          - partiallySucceeded
          x-ms-enum:
            name: EnvironmentStatus
            values:
            - value: undefined
              description: ""
            - value: notStarted
              description: ""
            - value: inProgress
              description: ""
            - value: succeeded
              description: ""
            - value: canceled
              description: ""
            - value: rejected
              description: ""
            - value: queued
              description: ""
            - value: scheduled
              description: ""
            - value: partiallySucceeded
              description: ""
      description: ""
    ReleaseGates:
      type: object
      properties:
        deploymentJobs:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentJob'
        id:
          type: integer
          format: int32
        lastModifiedOn:
          type: string
          format: date-time
        runPlanId:
          type: string
          format: uuid
        stabilizationCompletedOn:
          type: string
          format: date-time
        startedOn:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - none
          - pending
          - inProgress
          - succeeded
          - failed
          x-ms-enum:
            name: GateStatus
            values:
            - value: none
              description: ""
            - value: pending
              description: ""
            - value: inProgress
              description: ""
            - value: succeeded
              description: ""
            - value: failed
              description: ""
      description: ""
    ReleaseReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        artifacts:
          type: array
          description: Gets list of artifacts.
          items:
            $ref: '#/components/schemas/Artifact'
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        description:
          type: string
          description: Gets description.
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        name:
          type: string
          description: Gets name of release.
        reason:
          type: string
          description: Gets reason for release.
          enum:
          - none
          - manual
          - continuousIntegration
          - schedule
          x-ms-enum:
            name: ReleaseReason
            values:
            - value: none
              description: ""
            - value: manual
              description: ""
            - value: continuousIntegration
              description: ""
            - value: schedule
              description: ""
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
      description: ""
    ReleaseRevision:
      type: object
      properties:
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        changedDate:
          type: string
          format: date-time
        changeDetails:
          type: string
        changeType:
          type: string
        comment:
          type: string
        definitionSnapshotRevision:
          type: integer
          format: int32
        releaseId:
          type: integer
          format: int32
      description: ""
    ReleaseSchedule:
      type: object
      properties:
        daysToRelease:
          type: string
          description: Days of the week to release
          enum:
          - none
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
          - all
          x-ms-enum:
            name: ScheduleDays
            values:
            - value: none
              description: ""
            - value: monday
              description: ""
            - value: tuesday
              description: ""
            - value: wednesday
              description: ""
            - value: thursday
              description: ""
            - value: friday
              description: ""
            - value: saturday
              description: ""
            - value: sunday
              description: ""
            - value: all
              description: ""
        jobId:
          type: string
          description: Team Foundation Job Definition Job Id
          format: uuid
        startHours:
          type: integer
          description: Local time zone hour to start
          format: int32
        startMinutes:
          type: integer
          description: Local time zone minute to start
          format: int32
        timeZoneId:
          type: string
          description: Time zone Id of release schedule, such as 'UTC'
      description: ""
    ReleaseSettings:
      type: object
      properties:
        retentionSettings:
          $ref: '#/components/schemas/RetentionSettings'
      description: ""
    ReleaseShallowReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          description: Gets the unique identifier of release.
          format: int32
        name:
          type: string
          description: Gets or sets the name of the release.
        url:
          type: string
          description: Gets the REST API url to access the release.
      description: ""
    ReleaseStartMetadata:
      type: object
      properties:
        artifacts:
          type: array
          description: Sets list of artifact to create a release.
          items:
            $ref: '#/components/schemas/ArtifactMetadata'
        definitionId:
          type: integer
          description: Sets definition Id to create a release.
          format: int32
        description:
          type: string
          description: Sets description to create a release.
        isDraft:
          type: boolean
          description: Sets 'true' to create release in draft mode, 'false' otherwise.
        manualEnvironments:
          type: array
          description: Sets list of environments to manual as condition.
          items:
            type: string
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        reason:
          type: string
          description: Sets reason to create a release.
          enum:
          - none
          - manual
          - continuousIntegration
          - schedule
          x-ms-enum:
            name: ReleaseReason
            values:
            - value: none
              description: ""
            - value: manual
              description: ""
            - value: continuousIntegration
              description: ""
            - value: schedule
              description: ""
      description: ""
    ReleaseTask:
      type: object
      properties:
        agentName:
          type: string
        dateEnded:
          type: string
          format: date-time
        dateStarted:
          type: string
          format: date-time
        finishTime:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        issues:
          type: array
          items:
            $ref: '#/components/schemas/Issue'
        lineCount:
          type: integer
          format: int64
        logUrl:
          type: string
        name:
          type: string
        percentComplete:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - unknown
          - pending
          - inProgress
          - success
          - failure
          - canceled
          - skipped
          - succeeded
          - failed
          - partiallySucceeded
          x-ms-enum:
            name: TaskStatus
            values:
            - value: unknown
              description: ""
            - value: pending
              description: ""
            - value: inProgress
              description: ""
            - value: success
              description: ""
            - value: failure
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: succeeded
              description: ""
            - value: failed
              description: ""
            - value: partiallySucceeded
              description: ""
        task:
          $ref: '#/components/schemas/WorkflowTaskReference'
        timelineRecordId:
          type: string
          format: uuid
      description: ""
    ReleaseTaskAttachment:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        createdOn:
          type: string
          format: date-time
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          format: date-time
        name:
          type: string
        recordId:
          type: string
          format: uuid
        timelineId:
          type: string
          format: uuid
        type:
          type: string
      description: ""
    ReleaseTaskLogUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeReleaseEvent'
    ReleaseTasksUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeReleaseEvent'
    ReleaseTriggerBase:
      type: object
      properties:
        triggerType:
          type: string
          enum:
          - undefined
          - artifactSource
          - schedule
          - sourceRepo
          - containerImage
          - package
          - pullRequest
          x-ms-enum:
            name: ReleaseTriggerType
            values:
            - value: undefined
              description: ""
            - value: artifactSource
              description: ""
            - value: schedule
              description: ""
            - value: sourceRepo
              description: ""
            - value: containerImage
              description: ""
            - value: package
              description: ""
            - value: pullRequest
              description: ""
      description: ""
    ReleaseUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeReleaseEvent'
    ReleaseUpdateMetadata:
      type: object
      properties:
        comment:
          type: string
          description: Sets comment for release.
        keepForever:
          type: boolean
          description: Set 'true' to exclude the release from retention policies.
        manualEnvironments:
          type: array
          description: Sets list of manual environments.
          items:
            type: string
        status:
          type: string
          description: Sets status of the release.
          enum:
          - undefined
          - draft
          - active
          - abandoned
          x-ms-enum:
            name: ReleaseStatus
            values:
            - value: undefined
              description: ""
            - value: draft
              description: ""
            - value: active
              description: ""
            - value: abandoned
              description: ""
      description: ""
    ReleaseWorkItemRef:
      type: object
      properties:
        assignee:
          type: string
        id:
          type: string
        state:
          type: string
        title:
          type: string
        type:
          type: string
        url:
          type: string
      description: ""
    RetentionPolicy:
      type: object
      properties:
        daysToKeep:
          type: integer
          format: int32
      description: ""
    RetentionSettings:
      type: object
      properties:
        daysToKeepDeletedReleases:
          type: integer
          format: int32
        defaultEnvironmentRetentionPolicy:
          $ref: '#/components/schemas/EnvironmentRetentionPolicy'
        maximumEnvironmentRetentionPolicy:
          $ref: '#/components/schemas/EnvironmentRetentionPolicy'
      description: ""
    RunOnServerDeployPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeployPhase'
    ScheduledReleaseTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ServerDeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BaseDeploymentInput'
    SourceIdInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      description: ""
    SourceRepoTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    SummaryMailSection:
      type: object
      properties:
        htmlContent:
          type: string
        rank:
          type: integer
          format: int32
        sectionType:
          type: string
          enum:
          - details
          - environments
          - issues
          - testResults
          - workItems
          - releaseInfo
          x-ms-enum:
            name: MailSectionType
            values:
            - value: details
              description: ""
            - value: environments
              description: ""
            - value: issues
              description: ""
            - value: testResults
              description: ""
            - value: workItems
              description: ""
            - value: releaseInfo
              description: ""
        title:
          type: string
      description: ""
    TaskInputDefinitionBase:
      type: object
      properties:
        aliases:
          type: array
          items:
            type: string
        defaultValue:
          type: string
        groupName:
          type: string
        helpMarkDown:
          type: string
        label:
          type: string
        name:
          type: string
        options:
          type: object
          additionalProperties:
            type: string
        properties:
          type: object
          additionalProperties:
            type: string
        required:
          type: boolean
        type:
          type: string
        validation:
          $ref: '#/components/schemas/TaskInputValidation'
        visibleRule:
          type: string
      description: ""
    TaskInputValidation:
      type: object
      properties:
        expression:
          type: string
          description: Conditional expression
        message:
          type: string
          description: Message explaining how user can correct if validation fails
      description: ""
    TaskOrchestrationPlanGroupReference:
      type: object
      properties:
        planGroup:
          type: string
        projectId:
          type: string
          format: uuid
      description: ""
    TaskOrchestrationPlanGroupsStartedEvent:
      type: object
      properties:
        planGroups:
          type: array
          items:
            $ref: '#/components/schemas/TaskOrchestrationPlanGroupReference'
      description: ""
    TaskSourceDefinitionBase:
      type: object
      properties:
        authKey:
          type: string
        endpoint:
          type: string
        keySelector:
          type: string
        selector:
          type: string
        target:
          type: string
      description: ""
    TfvcArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    TimeZone:
      type: object
      properties:
        displayName:
          type: string
        id:
          type: string
      description: ""
    TimeZoneList:
      type: object
      properties:
        utcTimeZone:
          $ref: '#/components/schemas/TimeZone'
        validTimeZones:
          type: array
          items:
            $ref: '#/components/schemas/TimeZone'
      description: ""
    VariableGroup:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        description:
          type: string
          description: Gets or sets description.
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets or sets name.
        providerData:
          $ref: '#/components/schemas/VariableGroupProviderData'
        type:
          type: string
          description: Gets or sets type.
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariableValue'
      description: ""
    VariableGroupProviderData:
      type: object
      description: ""
    VariableValue:
      type: object
      properties:
        isSecret:
          type: boolean
        value:
          type: string
      description: ""
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
    WorkflowTask:
      type: object
      properties:
        alwaysRun:
          type: boolean
        condition:
          type: string
        continueOnError:
          type: boolean
        definitionType:
          type: string
        enabled:
          type: boolean
        inputs:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        overrideInputs:
          type: object
          additionalProperties:
            type: string
        refName:
          type: string
        taskId:
          type: string
          format: uuid
        timeoutInMinutes:
          type: integer
          format: int32
        version:
          type: string
      description: ""
    WorkflowTaskReference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        version:
          type: string
      description: ""
  parameters:
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.3:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.3'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.5:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.5'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.6:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '4.1-preview.6'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.release: Grants the ability to read release artifacts, including releases,
              release definitions and release environment.
            vso.release_execute: Grants the ability to read and update release artifacts,
              including releases, release definitions and release envrionment, and
              the ability to queue a new release.
            vso.release_manage: Grants the ability to read, update and delete release
              artifacts, including releases, release definitions and release envrionment,
              and the ability to queue and approve a new release.
x-ms-vss-area: Release
x-ms-vss-resource-area-id: efc2f575-36ef-48e9-b672-0c6fb4a48ac5
x-ms-paths:
  /{organization}/{project}/_apis/release/releases?:
    get:
      tags:
      - Releases
      x-ms-docs-override-version: 4.1-preview.6
      x-ms-vss-resource: releases
      x-ms-vss-method: GetReleases
      x-ms-preview: true
      description: Get a list of releases
      operationId: List
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        x-ms-required: false
        type: string
      - in: query
        name: definitionId
        description: Releases from this release definition Id.
        required: false
        type: integer
        format: int32
      - in: query
        name: definitionEnvironmentId
        description: ""
        required: false
        type: integer
        format: int32
      - in: query
        name: searchText
        description: Releases with names starting with searchText.
        required: false
        type: string
      - in: query
        name: createdBy
        description: Releases created by this user.
        required: false
        type: string
      - in: query
        name: statusFilter
        description: Releases that have this status.
        required: false
        type: string
        enum:
        - undefined
        - draft
        - active
        - abandoned
        x-ms-enum:
          name: ReleaseStatus
          values:
          - value: undefined
            description: ""
          - value: draft
            description: ""
          - value: active
            description: ""
          - value: abandoned
            description: ""
      - in: query
        name: environmentStatusFilter
        description: ""
        required: false
        type: integer
        format: int32
      - in: query
        name: minCreatedTime
        description: Releases that were created after this time.
        required: false
        type: string
        format: date-time
      - in: query
        name: maxCreatedTime
        description: Releases that were created before this time.
        required: false
        type: string
        format: date-time
      - in: query
        name: queryOrder
        description: Gets the results in the defined order of created date for releases.
          Default is descending.
        required: false
        type: string
        enum:
        - descending
        - ascending
        x-ms-enum:
          name: ReleaseQueryOrder
          values:
          - value: descending
            description: ""
          - value: ascending
            description: ""
      - in: query
        name: $top
        description: Number of releases to get. Default is 50.
        required: false
        type: integer
        format: int32
      - in: query
        name: continuationToken
        description: Gets the releases after the continuation token provided.
        required: false
        type: integer
        format: int32
      - in: query
        name: $expand
        description: The property that should be expanded in the list of releases.
        required: false
        type: string
        enum:
        - none
        - environments
        - artifacts
        - approvals
        - manualInterventions
        - variables
        - tags
        x-ms-enum:
          name: ReleaseExpands
          values:
          - value: none
            description: ""
          - value: environments
            description: ""
          - value: artifacts
            description: ""
          - value: approvals
            description: ""
          - value: manualInterventions
            description: ""
          - value: variables
            description: ""
          - value: tags
            description: ""
      - in: query
        name: artifactTypeId
        description: Releases with given artifactTypeId will be returned. Values can
          be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild,
          Git, TFVC, ExternalTfsXamlBuild.
        required: false
        type: string
      - in: query
        name: sourceId
        description: Unique identifier of the artifact used. e.g. For build it would
          be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId},
          for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}.
          For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier'
          inside vss-extension.json https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
        required: false
        type: string
      - in: query
        name: artifactVersionId
        description: Releases with given artifactVersionId will be returned. E.g.
          in case of Build artifactType, it is buildId.
        required: false
        type: string
      - in: query
        name: sourceBranchFilter
        description: Releases with given sourceBranchFilter will be returned.
        required: false
        type: string
      - in: query
        name: isDeleted
        description: Gets the soft deleted releases, if true.
        required: false
        type: boolean
      - in: query
        name: tagFilter
        description: A comma-delimited list of tags. Only releases with these tags
          will be returned.
        required: false
        type: string
        format: array (string)
      - in: query
        name: propertyFilters
        description: A comma-delimited list of extended properties to retrieve.
        required: false
        type: string
        format: array (string)
      - in: query
        name: releaseIdFilter
        description: A comma-delimited list of releases Ids. Only releases with these
          Ids will be returned.
        required: false
        type: string
        format: array (int32)
      - $ref: '#/parameters/api-Version-preview.6'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Release'
      security:
      - oauth2:
        - vso.release
      x-ms-examples:
        ?
        : $ref: ./httpExamples/releases/Query_ListAllReleases.json
        For a release definition:
          $ref: ./httpExamples/releases/GET__ListAllReleasesForAReleaseDefinition.json
  /{organization}/{project}/_apis/release/releases/{releaseId}?:
    get:
      tags:
      - Releases
      x-ms-docs-override-version: 4.1-preview.6
      x-ms-vss-resource: releases
      x-ms-vss-method: GetRelease
      x-ms-preview: true
      description: Get a Release
      operationId: Get Release
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: releaseId
        description: Id of the release.
        required: true
        type: integer
        format: int32
      - in: query
        name: approvalFilters
        description: A filter which would allow fetching approval steps selectively
          based on whether it is automated, or manual. This would also decide whether
          we should fetch pre and post approval snapshots. Assumes All by default
        required: false
        type: string
        enum:
        - none
        - manualApprovals
        - automatedApprovals
        - approvalSnapshots
        - all
        x-ms-enum:
          name: ApprovalFilters
          values:
          - value: none
            description: No approvals or approval snapshots
          - value: manualApprovals
            description: Manual approval steps but no approval snapshots (Use with
              ApprovalSnapshots for snapshots)
          - value: automatedApprovals
            description: Automated approval steps but no approval snapshots (Use with
              ApprovalSnapshots for snapshots)
          - value: approvalSnapshots
            description: No approval steps, but approval snapshots (Use with either
              ManualApprovals or AutomatedApprovals for approval steps)
          - value: all
            description: All approval steps and approval snapshots
      - in: query
        name: propertyFilters
        description: A comma-delimited list of properties to include in the results.
        required: false
        type: string
        format: array (string)
      - $ref: '#/parameters/api-Version-preview.6'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Release'
      security:
      - oauth2:
        - vso.release
      x-ms-examples:
        ?
        : $ref: ./httpExamples/releases/GET__GetARelease.json
