openapi: 3.0.1
info:
  title: Release
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "5.1"
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://vsrm.dev.azure.com/
security:
- accessToken: []
tags:
- name: Approvals
- name: Attachments
- name: Definitions
- name: Deployments
- name: Folders
  description: Controller to handle all REST calls against folders.
- name: Gates
- name: Manual Interventions
- name: Releases
paths:
  /{organization}/{project}/_apis/release/approvals:
    get:
      tags:
      - Approvals
      description: Get a list of approvals
      operationId: Approvals_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: assignedToFilter
        in: query
        description: Approvals assigned to this user.
        schema:
          type: string
      - name: statusFilter
        in: query
        description: Approvals with this status. Default is 'pending'.
        schema:
          type: string
          enum:
          - undefined
          - pending
          - approved
          - rejected
          - reassigned
          - canceled
          - skipped
          x-ms-enum:
            name: ApprovalStatus
            values:
            - value: undefined
              description: Indicates the approval does not have the status set.
            - value: pending
              description: Indicates the approval is pending.
            - value: approved
              description: Indicates the approval is approved.
            - value: rejected
              description: Indicates the approval is rejected.
            - value: reassigned
              description: Indicates the approval is reassigned.
            - value: canceled
              description: Indicates the approval is canceled.
            - value: skipped
              description: Indicates the approval is skipped.
        x-ms-enum:
          name: ApprovalStatus
          values:
          - value: undefined
            description: Indicates the approval does not have the status set.
          - value: pending
            description: Indicates the approval is pending.
          - value: approved
            description: Indicates the approval is approved.
          - value: rejected
            description: Indicates the approval is rejected.
          - value: reassigned
            description: Indicates the approval is reassigned.
          - value: canceled
            description: Indicates the approval is canceled.
          - value: skipped
            description: Indicates the approval is skipped.
      - name: releaseIdsFilter
        in: query
        description: Approvals for release id(s) mentioned in the filter. Multiple
          releases can be mentioned by separating them with ',' e.g. releaseIdsFilter=1,2,3,4.
        schema:
          type: string
          format: array (int32)
      - name: typeFilter
        in: query
        description: Approval with this type.
        schema:
          type: string
          enum:
          - undefined
          - preDeploy
          - postDeploy
          - all
          x-ms-enum:
            name: ApprovalType
            values:
            - value: undefined
              description: Indicates the approval type does not set.
            - value: preDeploy
              description: Indicates the approvals which executed before deployment.
            - value: postDeploy
              description: Indicates the approvals which executed after deployment.
            - value: all
              description: Indicates all approvals.
        x-ms-enum:
          name: ApprovalType
          values:
          - value: undefined
            description: Indicates the approval type does not set.
          - value: preDeploy
            description: Indicates the approvals which executed before deployment.
          - value: postDeploy
            description: Indicates the approvals which executed after deployment.
          - value: all
            description: Indicates all approvals.
      - name: top
        in: query
        description: Number of approvals to get. Default is 50.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: Gets the approvals after the continuation token provided.
        schema:
          type: integer
          format: int32
      - name: queryOrder
        in: query
        description: Gets the results in the defined order of created approvals. Default
          is 'descending'.
        schema:
          type: string
          enum:
          - descending
          - ascending
          x-ms-enum:
            name: ReleaseQueryOrder
            values:
            - value: descending
              description: Return results in descending order.
            - value: ascending
              description: Return results in ascending order.
        x-ms-enum:
          name: ReleaseQueryOrder
          values:
          - value: descending
            description: Return results in descending order.
          - value: ascending
            description: Return results in ascending order.
      - name: includeMyGroupApprovals
        in: query
        description: '''true'' to include my group approvals. Default is ''false''.'
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseApproval'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: approvals
      x-ms-vss-method: GetApprovals
      x-ms-examples:
        Pending for all users:
          $ref: ./httpExamples/approvals/GET__ListAllPendingApprovals.json
        Pending for a specific user:
          $ref: ./httpExamples/approvals/GET__ListPendingApprovalsForASpecificUser.json
        Pending for a specific release:
          $ref: ./httpExamples/approvals/GET__ListPendingApprovalsForASpecificARelease.json
  /{organization}/{project}/_apis/release/approvals/{approvalId}:
    patch:
      tags:
      - Approvals
      description: Update status of an approval
      operationId: Approvals_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: approvalId
        in: path
        description: Id of the approval.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: ReleaseApproval object having status, approver and comments.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseApproval'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseApproval'
      security:
      - oauth2:
        - vso.release_manage
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: approvals
      x-ms-vss-method: UpdateReleaseApproval
      x-ms-examples:
        Approve a release:
          $ref: ./httpExamples/approvals/PATCH__UpdateStatusOfAnApprovalFromPendingToApproved.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/definitions:
    get:
      tags:
      - Definitions
      description: Get a list of release definitions.
      operationId: Definitions_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: searchText
        in: query
        description: Get release definitions with names containing searchText.
        schema:
          type: string
      - name: $expand
        in: query
        description: The properties that should be expanded in the list of Release
          definitions.
        schema:
          type: string
          enum:
          - none
          - environments
          - artifacts
          - triggers
          - variables
          - tags
          - lastRelease
          x-ms-enum:
            name: ReleaseDefinitionExpands
            values:
            - value: none
              description: Returns top level properties of object.
            - value: environments
              description: Include environments in return object.
            - value: artifacts
              description: Include artifacts in return object.
            - value: triggers
              description: Include triggers in return object.
            - value: variables
              description: Include variables in return object.
            - value: tags
              description: Include tags in return object.
            - value: lastRelease
              description: Include last release in return object.
        x-ms-enum:
          name: ReleaseDefinitionExpands
          values:
          - value: none
            description: Returns top level properties of object.
          - value: environments
            description: Include environments in return object.
          - value: artifacts
            description: Include artifacts in return object.
          - value: triggers
            description: Include triggers in return object.
          - value: variables
            description: Include variables in return object.
          - value: tags
            description: Include tags in return object.
          - value: lastRelease
            description: Include last release in return object.
      - name: artifactType
        in: query
        description: Release definitions with given artifactType will be returned.
          Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild,
          Git, TFVC, ExternalTfsXamlBuild.
        schema:
          type: string
      - name: artifactSourceId
        in: query
        description: Release definitions with given artifactSourceId will be returned.
          e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins
          it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it
          would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}.
          For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier'
          inside vss-extension.json at https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
        schema:
          type: string
      - name: $top
        in: query
        description: Number of release definitions to get.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: Gets the release definitions after the continuation token provided.
        schema:
          type: string
      - name: queryOrder
        in: query
        description: Gets the results in the defined order. Default is 'IdAscending'.
        schema:
          type: string
          enum:
          - idAscending
          - idDescending
          - nameAscending
          - nameDescending
          x-ms-enum:
            name: ReleaseDefinitionQueryOrder
            values:
            - value: idAscending
              description: Return results based on release definition Id ascending
                order.
            - value: idDescending
              description: Return results based on release definition Id descending
                order.
            - value: nameAscending
              description: Return results based on release definition name ascending
                order.
            - value: nameDescending
              description: Return results based on release definition name descending
                order.
        x-ms-enum:
          name: ReleaseDefinitionQueryOrder
          values:
          - value: idAscending
            description: Return results based on release definition Id ascending order.
          - value: idDescending
            description: Return results based on release definition Id descending
              order.
          - value: nameAscending
            description: Return results based on release definition name ascending
              order.
          - value: nameDescending
            description: Return results based on release definition name descending
              order.
      - name: path
        in: query
        description: Gets the release definitions under the specified path.
        schema:
          type: string
      - name: isExactNameMatch
        in: query
        description: '''true''to gets the release definitions with exact match as
          specified in searchText. Default is ''false''.'
        schema:
          type: boolean
      - name: tagFilter
        in: query
        description: A comma-delimited list of tags. Only release definitions with
          these tags will be returned.
        schema:
          type: string
          format: array (string)
      - name: propertyFilters
        in: query
        description: A comma-delimited list of extended properties to be retrieved.
          If set, the returned Release Definitions will contain values for the specified
          property Ids (if they exist). If not set, properties will not be included.
          Note that this will not filter out any Release Definition from results irrespective
          of whether it has property set or not.
        schema:
          type: string
          format: array (string)
      - name: definitionIdFilter
        in: query
        description: A comma-delimited list of release definitions to retrieve.
        schema:
          type: string
          format: array (string)
      - name: isDeleted
        in: query
        description: '''true'' to get release definitions that has been deleted. Default
          is ''false'''
        schema:
          type: boolean
      - name: searchTextContainsFolderName
        in: query
        description: '''true'' to get the release definitions under the folder with
          name as specified in searchText. Default is ''false''.'
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetReleaseDefinitions
      x-ms-examples:
        ?
        : $ref: ./httpExamples/definitions/GET__ListAllReleaseDefinitions.json
        With environments details expanded:
          $ref: ./httpExamples/definitions/GET__ListAllReleaseDefinitionsWithEnvironmentsExpanded.json
        With artifacts details expanded:
          $ref: ./httpExamples/definitions/GET_ListAllReleaseDefinitionsWithArtifactsExpanded.json
    put:
      tags:
      - Definitions
      description: Update a release definition.
      operationId: Definitions_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Release definition object to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseDefinition'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: definitions
      x-ms-vss-method: UpdateReleaseDefinition
      x-ms-examples:
        Update the release definition:
          $ref: ./httpExamples/definitions/PUT__UpdateReleaseDefinition.json
      x-codegen-request-body-name: body
    post:
      tags:
      - Definitions
      description: Create a release definition
      operationId: Definitions_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: release definition object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseDefinition'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: definitions
      x-ms-vss-method: CreateReleaseDefinition
      x-ms-examples:
        Create release definition:
          $ref: ./httpExamples/definitions/POST__CreateReleaseDefinition.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/definitions/{definitionId}:
    get:
      tags:
      - Definitions
      description: Get a release definition.
      operationId: Definitions_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the release definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: propertyFilters
        in: query
        description: A comma-delimited list of extended properties to be retrieved.
          If set, the returned Release Definition will contain values for the specified
          property Ids (if they exist). If not set, properties will not be included.
        schema:
          type: string
          format: array (string)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseDefinition'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetReleaseDefinition
      x-ms-examples:
        Get a release definition:
          $ref: ./httpExamples/definitions/GET__GetReleaseDefinition.json
    delete:
      tags:
      - Definitions
      description: Delete a release definition.
      operationId: Definitions_Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the release definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: comment
        in: query
        description: Comment for deleting a release definition.
        schema:
          type: string
      - name: forceDelete
        in: query
        description: '''true'' to automatically cancel any in-progress release deployments
          and proceed with release definition deletion . Default is ''false''.'
        schema:
          type: boolean
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.release_manage
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: definitions
      x-ms-vss-method: DeleteReleaseDefinition
      x-ms-examples:
        Delete a release definition:
          $ref: ./httpExamples/definitions/DELETE__DeleteReleaseDefinition.json
  /{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions:
    get:
      tags:
      - Definitions
      description: Get revision history for a release definition
      operationId: Definitions_Get Release Definition History
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseDefinitionRevision'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.1
      x-ms-vss-resource: revisions
      x-ms-vss-method: GetReleaseDefinitionHistory
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/revisions/GET__GetReleaseDefinitionRevision.json
  /{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions/{revision}:
    get:
      tags:
      - Definitions
      description: Get release definition for a given definitionId and revision
      operationId: Definitions_Get Definition Revision
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: path
        description: Id of the definition.
        required: true
        schema:
          type: integer
          format: int32
      - name: revision
        in: path
        description: Id of the revision.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.1
      x-ms-vss-resource: revisions
      x-ms-vss-method: GetDefinitionRevision
      x-ms-preview: true
  /{organization}/{project}/_apis/release/deployments:
    get:
      tags:
      - Deployments
      operationId: Deployments_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: definitionId
        in: query
        schema:
          type: integer
          format: int32
      - name: definitionEnvironmentId
        in: query
        schema:
          type: integer
          format: int32
      - name: createdBy
        in: query
        schema:
          type: string
      - name: minModifiedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: maxModifiedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: deploymentStatus
        in: query
        schema:
          type: string
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is in progress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
        x-ms-enum:
          name: DeploymentStatus
          values:
          - value: undefined
            description: The deployment status is undefined.
          - value: notDeployed
            description: The deployment status is not deployed.
          - value: inProgress
            description: The deployment status is in progress.
          - value: succeeded
            description: The deployment status is succeeded.
          - value: partiallySucceeded
            description: The deployment status is partiallysucceeded.
          - value: failed
            description: The deployment status is failed.
          - value: all
            description: The deployment status is all.
      - name: operationStatus
        in: query
        schema:
          type: string
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase in progress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        x-ms-enum:
          name: DeploymentOperationStatus
          values:
          - value: undefined
            description: The deployment operation status is undefined.
          - value: queued
            description: The deployment operation status is queued.
          - value: scheduled
            description: The deployment operation status is scheduled.
          - value: pending
            description: The deployment operation status is pending.
          - value: approved
            description: The deployment operation status is approved.
          - value: rejected
            description: The deployment operation status is rejected.
          - value: deferred
            description: The deployment operation status is deferred.
          - value: queuedForAgent
            description: The deployment operation status is queued for agent.
          - value: phaseInProgress
            description: The deployment operation status is phase in progress.
          - value: phaseSucceeded
            description: The deployment operation status is phase succeeded.
          - value: phasePartiallySucceeded
            description: The deployment operation status is phase partially succeeded.
          - value: phaseFailed
            description: The deployment operation status is phase failed.
          - value: canceled
            description: The deployment operation status is canceled.
          - value: phaseCanceled
            description: The deployment operation status is phase canceled.
          - value: manualInterventionPending
            description: The deployment operation status is manualintervention pending.
          - value: queuedForPipeline
            description: The deployment operation status is queued for pipeline.
          - value: cancelling
            description: The deployment operation status is cancelling.
          - value: evaluatingGates
            description: The deployment operation status is EvaluatingGates.
          - value: gateFailed
            description: The deployment operation status is GateFailed.
          - value: all
            description: The deployment operation status is all.
      - name: latestAttemptsOnly
        in: query
        schema:
          type: boolean
      - name: queryOrder
        in: query
        schema:
          type: string
          enum:
          - descending
          - ascending
          x-ms-enum:
            name: ReleaseQueryOrder
            values:
            - value: descending
              description: Return results in descending order.
            - value: ascending
              description: Return results in ascending order.
        x-ms-enum:
          name: ReleaseQueryOrder
          values:
          - value: descending
            description: Return results in descending order.
          - value: ascending
            description: Return results in ascending order.
      - name: $top
        in: query
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        schema:
          type: integer
          format: int32
      - name: createdFor
        in: query
        schema:
          type: string
      - name: minStartedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: maxStartedTime
        in: query
        schema:
          type: string
          format: date-time
      - name: sourceBranch
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: deployments
      x-ms-vss-method: GetDeployments
      x-ms-examples:
        Get all deployments for a given definition Id:
          $ref: ./httpExamples/deployments/GET__ListDeploymentsForAGivenDefinitionId.json
        Get all deployments in the project:
          $ref: ./httpExamples/deployments/GET__ListDeployments.json
  /{organization}/{project}/_apis/release/folders/{path}:
    get:
      tags:
      - Folders
      description: Gets folders.
      operationId: Folders_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: path
        description: Path of the folder.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: queryOrder
        in: query
        description: Gets the results in the defined order. Default is 'None'.
        schema:
          type: string
          enum:
          - none
          - ascending
          - descending
          x-ms-enum:
            name: FolderPathQueryOrder
            values:
            - value: none
              description: No order.
            - value: ascending
              description: Order by folder name and path ascending.
            - value: descending
              description: Order by folder name and path descending.
        x-ms-enum:
          name: FolderPathQueryOrder
          values:
          - value: none
            description: No order.
          - value: ascending
            description: Order by folder name and path ascending.
          - value: descending
            description: Order by folder name and path descending.
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folder'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: GetFolders
      x-ms-preview: true
    post:
      tags:
      - Folders
      description: This method is no longer supported. Use CreateFolder with folder
        parameter API.
      operationId: Folders_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: path
        description: Path of the folder.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: folder.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      deprecated: true
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 5.1-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: CreateFolder
      x-ms-preview: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - Folders
      description: Deletes a definition folder for given folder name and path and
        all it's existing definitions.
      operationId: Folders_Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: path
        description: Path of the folder to delete.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.release_manage
      x-ms-docs-override-version: 5.1-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: DeleteFolder
      x-ms-preview: true
    patch:
      tags:
      - Folders
      description: Updates an existing folder at given existing path.
      operationId: Folders_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: path
        in: path
        description: Path of the folder to update.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: folder.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 5.1-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: UpdateFolder
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/gates/{gateStepId}:
    patch:
      tags:
      - Gates
      description: Updates the gate for a deployment.
      operationId: Gates_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: gateStepId
        in: path
        description: Gate step Id.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Metadata to patch the Release Gates.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GateUpdateMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseGates'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 5.1-preview.1
      x-ms-vss-resource: gates
      x-ms-vss-method: UpdateGates
      x-ms-preview: true
      x-ms-examples:
        Ignore a gate:
          $ref: ./httpExamples/gates/PATCH__IgnoreGate.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/releases:
    get:
      tags:
      - Releases
      description: Get a list of releases
      operationId: Releases_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: definitionId
        in: query
        description: Releases from this release definition Id.
        schema:
          type: integer
          format: int32
      - name: definitionEnvironmentId
        in: query
        schema:
          type: integer
          format: int32
      - name: searchText
        in: query
        description: Releases with names containing searchText.
        schema:
          type: string
      - name: createdBy
        in: query
        description: Releases created by this user.
        schema:
          type: string
      - name: statusFilter
        in: query
        description: Releases that have this status.
        schema:
          type: string
          enum:
          - undefined
          - draft
          - active
          - abandoned
          x-ms-enum:
            name: ReleaseStatus
            values:
            - value: undefined
              description: Release status not set.
            - value: draft
              description: Release is in draft state.
            - value: active
              description: Release status is in active.
            - value: abandoned
              description: Release status is in abandoned.
        x-ms-enum:
          name: ReleaseStatus
          values:
          - value: undefined
            description: Release status not set.
          - value: draft
            description: Release is in draft state.
          - value: active
            description: Release status is in active.
          - value: abandoned
            description: Release status is in abandoned.
      - name: environmentStatusFilter
        in: query
        schema:
          type: integer
          format: int32
      - name: minCreatedTime
        in: query
        description: Releases that were created after this time.
        schema:
          type: string
          format: date-time
      - name: maxCreatedTime
        in: query
        description: Releases that were created before this time.
        schema:
          type: string
          format: date-time
      - name: queryOrder
        in: query
        description: Gets the results in the defined order of created date for releases.
          Default is descending.
        schema:
          type: string
          enum:
          - descending
          - ascending
          x-ms-enum:
            name: ReleaseQueryOrder
            values:
            - value: descending
              description: Return results in descending order.
            - value: ascending
              description: Return results in ascending order.
        x-ms-enum:
          name: ReleaseQueryOrder
          values:
          - value: descending
            description: Return results in descending order.
          - value: ascending
            description: Return results in ascending order.
      - name: $top
        in: query
        description: Number of releases to get. Default is 50.
        schema:
          type: integer
          format: int32
      - name: continuationToken
        in: query
        description: Gets the releases after the continuation token provided.
        schema:
          type: integer
          format: int32
      - name: $expand
        in: query
        description: The property that should be expanded in the list of releases.
        schema:
          type: string
          enum:
          - none
          - environments
          - artifacts
          - approvals
          - manualInterventions
          - variables
          - tags
          x-ms-enum:
            name: ReleaseExpands
            values:
            - value: none
              description: ""
            - value: environments
              description: ""
            - value: artifacts
              description: ""
            - value: approvals
              description: ""
            - value: manualInterventions
              description: ""
            - value: variables
              description: ""
            - value: tags
              description: ""
        x-ms-enum:
          name: ReleaseExpands
          values:
          - value: none
            description: ""
          - value: environments
            description: ""
          - value: artifacts
            description: ""
          - value: approvals
            description: ""
          - value: manualInterventions
            description: ""
          - value: variables
            description: ""
          - value: tags
            description: ""
      - name: artifactTypeId
        in: query
        description: Releases with given artifactTypeId will be returned. Values can
          be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild,
          Git, TFVC, ExternalTfsXamlBuild.
        schema:
          type: string
      - name: sourceId
        in: query
        description: Unique identifier of the artifact used. e.g. For build it would
          be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId},
          for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}.
          For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier'
          inside vss-extension.json https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
        schema:
          type: string
      - name: artifactVersionId
        in: query
        description: Releases with given artifactVersionId will be returned. E.g.
          in case of Build artifactType, it is buildId.
        schema:
          type: string
      - name: sourceBranchFilter
        in: query
        description: Releases with given sourceBranchFilter will be returned.
        schema:
          type: string
      - name: isDeleted
        in: query
        description: Gets the soft deleted releases, if true.
        schema:
          type: boolean
      - name: tagFilter
        in: query
        description: A comma-delimited list of tags. Only releases with these tags
          will be returned.
        schema:
          type: string
          format: array (string)
      - name: propertyFilters
        in: query
        description: A comma-delimited list of extended properties to be retrieved.
          If set, the returned Releases will contain values for the specified property
          Ids (if they exist). If not set, properties will not be included. Note that
          this will not filter out any Release from results irrespective of whether
          it has property set or not.
        schema:
          type: string
          format: array (string)
      - name: releaseIdFilter
        in: query
        description: A comma-delimited list of releases Ids. Only releases with these
          Ids will be returned.
        schema:
          type: string
          format: array (int32)
      - name: path
        in: query
        description: Releases under this folder path will be returned
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: releases
      x-ms-vss-method: GetReleases
      x-ms-examples:
        ?
        : $ref: ./httpExamples/releases/Query_ListAllReleases.json
        For a release definition:
          $ref: ./httpExamples/releases/GET__ListAllReleasesForAReleaseDefinition.json
    post:
      tags:
      - Releases
      description: Create a release.
      operationId: Releases_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Metadata to create a release.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseStartMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: releases
      x-ms-vss-method: CreateRelease
      x-ms-examples:
        ?
        : $ref: ./httpExamples/releases/POST__CreateARelease.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/release/releases/{releaseId}:
    get:
      tags:
      - Releases
      description: Get release for a given revision number.
      operationId: Releases_Get Release Revision
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: definitionSnapshotRevision
        in: query
        description: Definition snapshot revision number.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: releases
      x-ms-vss-method: GetReleaseRevision
      x-ms-examples:
        ?
        : $ref: ./httpExamples/releases/GET__GetReleaseRevisionOfRelease.json
    put:
      tags:
      - Releases
      description: Update a complete release object.
      operationId: Releases_Update Release
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Release object for update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: releases
      x-ms-vss-method: UpdateRelease
      x-ms-examples:
        Update the release:
          $ref: ./httpExamples/releases/PUT__UpdateRelease.json
      x-codegen-request-body-name: body
    patch:
      tags:
      - Releases
      description: Update few properties of a release.
      operationId: Releases_Update Release Resource
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Properties of release to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseUpdateMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: releases
      x-ms-vss-method: UpdateReleaseResource
      x-ms-examples:
        Abandoning an active release:
          $ref: ./httpExamples/releases/PATCH__AbandonAnActiveRelease.json
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/Release/releases/{releaseId}/environments/{environmentId}:
    get:
      tags:
      - Releases
      description: Get a release environment.
      operationId: Releases_Get Release Environment
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of the release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseEnvironment'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.6
      x-ms-vss-resource: environments
      x-ms-vss-method: GetReleaseEnvironment
      x-ms-preview: true
    patch:
      tags:
      - Releases
      description: Update the status of a release environment
      operationId: Releases_Update Release Environment
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.6'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Environment update meta data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseEnvironmentUpdateMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseEnvironment'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: 5.1-preview.6
      x-ms-vss-resource: environments
      x-ms-vss-method: UpdateReleaseEnvironment
      x-ms-preview: true
      x-ms-examples:
        Start deployment on an environment:
          $ref: ./httpExamples/environments/PATCH__UpdateReleaseEnvironment.json
      x-codegen-request-body-name: body
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/plan/{planId}/attachments/{type}
  : get:
      tags:
      - Attachments
      description: Get the release task attachments.
      operationId: Attachments_Get Release Task Attachments
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of the release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: attemptId
        in: path
        description: Attempt number of deployment.
        required: true
        schema:
          type: integer
          format: int32
      - name: planId
        in: path
        description: Plan Id of the deploy phase.
        required: true
        schema:
          type: string
          format: uuid
      - name: type
        in: path
        description: Type of the attachment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseTaskAttachment'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetReleaseTaskAttachments
      x-ms-preview: true
      x-ms-examples:
        Get release task attachments:
          $ref: ./httpExamples/attachments/GET__GetReleaseAttachment.json
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/plan/{planId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}
  : get:
      tags:
      - Attachments
      description: Get a release task attachment.
      operationId: Attachments_Get Release Task Attachment Content
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of the release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: attemptId
        in: path
        description: Attempt number of deployment.
        required: true
        schema:
          type: integer
          format: int32
      - name: planId
        in: path
        description: Plan Id of the deploy phase.
        required: true
        schema:
          type: string
          format: uuid
      - name: timelineId
        in: path
        description: Timeline Id of the task.
        required: true
        schema:
          type: string
          format: uuid
      - name: recordId
        in: path
        description: Record Id of attachment.
        required: true
        schema:
          type: string
          format: uuid
      - name: type
        in: path
        description: Type of the attachment.
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of the attachment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetReleaseTaskAttachmentContent
      x-ms-preview: true
      x-ms-examples:
        Get release task attachment content:
          $ref: ./httpExamples/attachments/GET__GetReleaseTaskAttachmentContent.json
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/attachments/{type}
  : get:
      tags:
      - Attachments
      description: GetTaskAttachments API is deprecated. Use GetReleaseTaskAttachments
        API instead.
      operationId: Attachments_Get Task Attachments
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of the release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: attemptId
        in: path
        description: Attempt number of deployment.
        required: true
        schema:
          type: integer
          format: int32
      - name: timelineId
        in: path
        description: Timeline Id of the task.
        required: true
        schema:
          type: string
          format: uuid
      - name: type
        in: path
        description: Type of the attachment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseTaskAttachment'
      deprecated: true
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTaskAttachments
      x-ms-preview: true
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}
  : get:
      tags:
      - Attachments
      description: GetTaskAttachmentContent API is deprecated. Use GetReleaseTaskAttachmentContent
        API instead.
      operationId: Attachments_Get Task Attachment Content
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of the release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: attemptId
        in: path
        description: Attempt number of deployment.
        required: true
        schema:
          type: integer
          format: int32
      - name: timelineId
        in: path
        description: Timeline Id of the task.
        required: true
        schema:
          type: string
          format: uuid
      - name: recordId
        in: path
        description: Record Id of attachment.
        required: true
        schema:
          type: string
          format: uuid
      - name: type
        in: path
        description: Type of the attachment.
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of the attachment.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: Stream
      deprecated: true
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.1
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetTaskAttachmentContent
      x-ms-preview: true
  ? /{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/deployPhases/{releaseDeployPhaseId}/tasks/{taskId}/logs
  : get:
      tags:
      - Releases
      description: Gets the task log of a release as a plain text file.
      operationId: Releases_Get Task Log
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: environmentId
        in: path
        description: Id of release environment.
        required: true
        schema:
          type: integer
          format: int32
      - name: releaseDeployPhaseId
        in: path
        description: Release deploy phase Id.
        required: true
        schema:
          type: integer
          format: int32
      - name: taskId
        in: path
        description: ReleaseTask Id for the log.
        required: true
        schema:
          type: integer
          format: int32
      - name: startLine
        in: query
        description: Starting line number for logs
        schema:
          type: integer
          format: int64
      - name: endLine
        in: query
        description: Ending line number for logs
        schema:
          type: integer
          format: int64
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.2
      x-ms-vss-resource: logs
      x-ms-vss-method: GetTaskLog
      x-ms-preview: true
      x-ms-examples:
        Get logs of a task:
          $ref: ./httpExamples/logs/GET__GetLogsOfReleaseTask.json
  /{organization}/{project}/_apis/release/releases/{releaseId}/logs:
    get:
      tags:
      - Releases
      description: Get logs for a release Id.
      operationId: Releases_Get Logs
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1-preview.2'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: Stream
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: 5.1-preview.2
      x-ms-vss-resource: logs
      x-ms-vss-method: GetLogs
      x-ms-preview: true
      x-ms-examples:
        Get logs of a task:
          $ref: ./httpExamples/logs/GET__GetLogsOfReleaseTask.json
  /{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions:
    get:
      tags:
      - Manual Interventions
      description: List all manual interventions for a given release.
      operationId: Manual Interventions_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManualIntervention'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: manualInterventions
      x-ms-vss-method: GetManualInterventions
      x-ms-examples:
        Get manual interventions:
          $ref: ./httpExamples/manualInterventions/GET__GetManualInterventions.json
  /{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions/{manualInterventionId}:
    get:
      tags:
      - Manual Interventions
      description: Get manual intervention for a given release and manual intervention
        id.
      operationId: Manual Interventions_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: manualInterventionId
        in: path
        description: Id of the manual intervention.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualIntervention'
      security:
      - oauth2:
        - vso.release
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: manualInterventions
      x-ms-vss-method: GetManualIntervention
      x-ms-examples:
        Get manual intervention:
          $ref: ./httpExamples/manualInterventions/GET__GetManualIntervention.json
    patch:
      tags:
      - Manual Interventions
      description: Update manual intervention.
      operationId: Manual Interventions_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: Project ID or project name
        required: true
        schema:
          type: string
      - name: releaseId
        in: path
        description: Id of the release.
        required: true
        schema:
          type: integer
          format: int32
      - name: manualInterventionId
        in: path
        description: Id of the manual intervention.
        required: true
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '5.1' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: Meta data to update manual intervention.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualInterventionUpdateMetadata'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualIntervention'
      security:
      - oauth2:
        - vso.release_execute
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: manualInterventions
      x-ms-vss-method: UpdateManualIntervention
      x-ms-examples:
        Resume manual intervention:
          $ref: ./httpExamples/manualInterventions/PATCH__ResumeManualIntervention.json
        Reject manual intervention:
          $ref: ./httpExamples/manualInterventions/PATCH__RejectManualIntervention.json
      x-codegen-request-body-name: body
components:
  schemas:
    AgentArtifactDefinition:
      type: object
      properties:
        alias:
          type: string
          description: Gets or sets the artifact definition alias.
        artifactType:
          type: string
          description: Gets or sets the artifact type.
          enum:
          - xamlBuild
          - build
          - jenkins
          - fileShare
          - nuget
          - tfsOnPrem
          - gitHub
          - tfGit
          - externalTfsBuild
          - custom
          - tfvc
          x-ms-enum:
            name: AgentArtifactType
            values:
            - value: xamlBuild
              description: Indicates XamlBuild artifact
            - value: build
              description: Indicates Build artifact
            - value: jenkins
              description: Indicates Jenkins artifact
            - value: fileShare
              description: Indicates FileShare artifact
            - value: nuget
              description: Indicates Nuget artifact
            - value: tfsOnPrem
              description: Indicates TfsOnPrem artifact
            - value: gitHub
              description: Indicates GitHub artifact
            - value: tfGit
              description: Indicates TFGit artifact
            - value: externalTfsBuild
              description: Indicates ExternalTfsBuild artifact
            - value: custom
              description: Indicates Custom artifact
            - value: tfvc
              description: Indicates Tfvc artifact
        details:
          type: string
          description: Gets or sets the artifact definition details.
        name:
          type: string
          description: Gets or sets the name of artifact definition.
        version:
          type: string
          description: Gets or sets the version of artifact definition.
      description: ""
    AgentBasedDeployPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeployPhase'
    AgentDeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeploymentInput'
    AgentPoolQueueReference:
      description: Represents a reference to an agent queue.
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
    AgentSpecification:
      type: object
      properties:
        identifier:
          type: string
          description: Agent specification unique identifier.
      description: Specification of the agent defined by the pool provider.
    ApprovalOptions:
      type: object
      properties:
        autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped:
          type: boolean
          description: Specify whether the approval can be skipped if the same approver
            approved the previous stage.
        enforceIdentityRevalidation:
          type: boolean
          description: Specify whether revalidate identity of approver before completing
            the approval.
        executionOrder:
          type: string
          description: Approvals execution order.
          enum:
          - beforeGates
          - afterSuccessfulGates
          - afterGatesAlways
          x-ms-enum:
            name: ApprovalExecutionOrder
            values:
            - value: beforeGates
              description: Approvals shown before gates.
            - value: afterSuccessfulGates
              description: Approvals shown after successful execution of gates.
            - value: afterGatesAlways
              description: Approvals shown always after execution of gates.
        releaseCreatorCanBeApprover:
          type: boolean
          description: Specify whether the user requesting a release or deployment
            should allow to approver.
        requiredApproverCount:
          type: integer
          description: The number of approvals required to move release forward. '0'
            means all approvals required.
          format: int32
        timeoutInMinutes:
          type: integer
          description: Approval timeout. Approval default timeout is 30 days. Maximum
            allowed timeout is 365 days. '0' means default timeout i.e 30 days.
          format: int32
      description: ""
    Artifact:
      type: object
      properties:
        alias:
          type: string
          description: Gets or sets alias.
        definitionReference:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ArtifactSourceReference'
          description: Gets or sets definition reference. e.g. {"project":{"id":"fed755ea-49c5-4399-acea-fd5b5aa90a6c","name":"myProject"},"definition":{"id":"1","name":"mybuildDefinition"},"connection":{"id":"1","name":"myConnection"}}.
        isPrimary:
          type: boolean
          description: Indicates whether artifact is primary or not.
        isRetained:
          type: boolean
          description: Indicates whether artifact is retained by release or not.
        type:
          type: string
          description: Gets or sets type. It can have value as 'Build', 'Jenkins',
            'GitHub', 'Nuget', 'Team Build (external)', 'ExternalTFSBuild', 'Git',
            'TFVC', 'ExternalTfsXamlBuild'.
      description: ""
    ArtifactContributionDefinition:
      type: object
      properties:
        artifactTriggerConfiguration:
          $ref: '#/components/schemas/ArtifactTriggerConfiguration'
        artifactType:
          type: string
        artifactTypeStreamMapping:
          type: object
          additionalProperties:
            type: string
        browsableArtifactTypeMapping:
          type: object
          additionalProperties:
            type: string
        dataSourceBindings:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceBinding'
        displayName:
          type: string
        downloadTaskId:
          type: string
        endpointTypeId:
          type: string
        inputDescriptors:
          type: array
          items:
            $ref: '#/components/schemas/InputDescriptor'
        isCommitsTraceabilitySupported:
          type: boolean
        isWorkitemsTraceabilitySupported:
          type: boolean
        name:
          type: string
        taskInputMapping:
          type: object
          additionalProperties:
            type: string
        uniqueSourceIdentifier:
          type: string
      description: ""
    ArtifactDownloadInputBase:
      type: object
      properties:
        alias:
          type: string
          description: Gets or sets the alias of artifact.
        artifactDownloadMode:
          type: string
          description: Gets or sets the name of artifact definition. Valid values
            are 'Skip', 'Selective', 'All'.
        artifactItems:
          type: array
          description: Gets or sets the artifact items of the input.
          items:
            type: string
        artifactType:
          type: string
          description: Gets or sets the type of artifact.
      description: ""
    ArtifactFilter:
      type: object
      properties:
        createReleaseOnBuildTagging:
          type: boolean
          description: Gets or sets whether a release should be created on build tagging.
        sourceBranch:
          type: string
          description: Gets or sets the branch for the filter.
        tags:
          type: array
          description: Gets or sets the list of tags for the filter.
          items:
            type: string
        useBuildDefinitionBranch:
          type: boolean
          description: Gets or sets whether filter should default to build definition
            branch.
      description: ""
    ArtifactInstanceData:
      type: object
      properties:
        accountName:
          type: string
        authenticationToken:
          type: string
        tfsUrl:
          type: string
        version:
          type: string
      description: ""
    ArtifactMetadata:
      type: object
      properties:
        alias:
          type: string
          description: Sets alias of artifact.
        instanceReference:
          $ref: '#/components/schemas/BuildVersion'
      description: ""
    ArtifactProvider:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets the id of artifact provider.
          format: int32
        name:
          type: string
          description: Gets or sets the name of artifact provider.
        sourceUri:
          type: string
          description: Gets or sets the link of artifact provider.
        version:
          type: string
          description: Gets or sets the version of artifact provider.
      description: ""
    ArtifactsDownloadInput:
      type: object
      properties:
        downloadInputs:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactDownloadInputBase'
      description: ""
    ArtifactSourceId:
      type: object
      properties:
        artifactTypeId:
          type: string
          description: Gets or sets the artifact type of artifact source.
        sourceIdInputs:
          type: array
          description: Gets or sets the list of sourceIdInput of artifact source.
          items:
            $ref: '#/components/schemas/SourceIdInput'
      description: ""
    ArtifactSourceIdsQueryResult:
      type: object
      properties:
        artifactSourceIds:
          type: array
          description: Gets or sets the list of artifactsourceIds.
          items:
            $ref: '#/components/schemas/ArtifactSourceId'
      description: ""
    ArtifactSourceReference:
      type: object
      properties:
        id:
          type: string
          description: ID of the artifact source.
        name:
          type: string
          description: Name of the artifact source.
      description: ""
    ArtifactSourceTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ArtifactTriggerConfiguration:
      type: object
      properties:
        isTriggerSupported:
          type: boolean
          description: Gets or sets the whether trigger is supported or not.
        isTriggerSupportedOnlyInHosted:
          type: boolean
          description: Gets or sets the whether trigger is supported only on hosted
            environment.
        isWebhookSupportedAtServerLevel:
          type: boolean
          description: Gets or sets the whether webhook is supported at server level.
        payloadHashHeaderName:
          type: string
          description: Gets or sets the payload hash header name for the artifact
            trigger configuration.
        resources:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the resources for artifact trigger configuration.
        webhookPayloadMapping:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the webhook payload mapping for artifact trigger
            configuration.
      description: ""
    ArtifactTypeDefinition:
      type: object
      properties:
        artifactTriggerConfiguration:
          $ref: '#/components/schemas/ArtifactTriggerConfiguration'
        artifactType:
          type: string
          description: Gets or sets the artifact type of artifact type definition.
            Valid values are 'Build', 'Package', 'Source' or 'ContainerImage'.
        displayName:
          type: string
          description: Gets or sets the display name of artifact type definition.
        endpointTypeId:
          type: string
          description: Gets or sets the endpoint type id of artifact type definition.
        inputDescriptors:
          type: array
          description: Gets or sets the input descriptors of artifact type definition.
          items:
            $ref: '#/components/schemas/InputDescriptor'
        name:
          type: string
          description: Gets or sets the name of artifact type definition.
        uniqueSourceIdentifier:
          type: string
          description: Gets or sets the unique source identifier of artifact type
            definition.
      description: ""
    ArtifactVersion:
      type: object
      properties:
        alias:
          type: string
          description: Gets or sets the alias of artifact.
        defaultVersion:
          $ref: '#/components/schemas/BuildVersion'
        errorMessage:
          type: string
          description: Gets or sets the error message encountered during querying
            of versions for artifact.
        versions:
          type: array
          description: Gets or sets the list of build versions of artifact.
          items:
            $ref: '#/components/schemas/BuildVersion'
      description: ""
    ArtifactVersionQueryResult:
      type: object
      properties:
        artifactVersions:
          type: array
          description: Gets or sets the list for artifact versions of artifact version
            query result.
          items:
            $ref: '#/components/schemas/ArtifactVersion'
      description: ""
    AuthorizationHeader:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: ""
    AutoTriggerIssue:
      type: object
      properties:
        issue:
          $ref: '#/components/schemas/Issue'
        issueSource:
          type: string
          enum:
          - none
          - user
          - system
          x-ms-enum:
            name: IssueSource
            values:
            - value: none
              description: ""
            - value: user
              description: ""
            - value: system
              description: ""
        project:
          $ref: '#/components/schemas/ProjectReference'
        releaseDefinitionReference:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseTriggerType:
          type: string
          enum:
          - undefined
          - artifactSource
          - schedule
          - sourceRepo
          - containerImage
          - package
          - pullRequest
          x-ms-enum:
            name: ReleaseTriggerType
            values:
            - value: undefined
              description: Release trigger type not set.
            - value: artifactSource
              description: Artifact based release trigger.
            - value: schedule
              description: Schedule based release trigger.
            - value: sourceRepo
              description: Source repository based release trigger.
            - value: containerImage
              description: Container image based release trigger.
            - value: package
              description: Package based release trigger.
            - value: pullRequest
              description: Pull request based release trigger.
      description: ""
    AzureKeyVaultVariableGroupProviderData:
      description: ""
      allOf:
      - $ref: '#/components/schemas/VariableGroupProviderData'
    AzureKeyVaultVariableValue:
      description: ""
      allOf:
      - $ref: '#/components/schemas/VariableValue'
    BaseDeploymentInput:
      type: object
      properties:
        condition:
          type: string
          description: Gets or sets the job condition.
        jobCancelTimeoutInMinutes:
          type: integer
          description: Gets or sets the job cancel timeout in minutes for deployment
            which are cancelled by user for this release environment.
          format: int32
        overrideInputs:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the override inputs.
        timeoutInMinutes:
          type: integer
          description: Gets or sets the job execution timeout in minutes for deployment
            which are queued against this release environment.
          format: int32
      description: ""
    BuildArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    BuildVersion:
      type: object
      properties:
        commitMessage:
          type: string
          description: Gets or sets the commit message for the artifact.
        definitionId:
          type: string
          description: Gets or sets the definition id.
        definitionName:
          type: string
          description: Gets or sets the definition name.
        id:
          type: string
          description: Gets or sets the build id.
        isMultiDefinitionType:
          type: boolean
          description: Gets or sets if the artifact supports multiple definitions.
        name:
          type: string
          description: Gets or sets the build number.
        sourceBranch:
          type: string
          description: Gets or sets the source branch for the artifact.
        sourcePullRequestVersion:
          $ref: '#/components/schemas/SourcePullRequestVersion'
        sourceRepositoryId:
          type: string
          description: Gets or sets the repository id for the artifact.
        sourceRepositoryType:
          type: string
          description: Gets or sets the repository type for the artifact.
        sourceVersion:
          type: string
          description: Gets or sets the source version for the artifact.
      description: ""
    Change:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/IdentityRef'
        changeType:
          type: string
          description: The type of source. "TfsVersionControl", "TfsGit", etc.
        displayUri:
          type: string
          description: The location of a user-friendly representation of the resource.
        id:
          type: string
          description: Something that identifies the change. For a commit, this would
            be the SHA1. For a TFVC changeset, this would be the changeset id.
        location:
          type: string
          description: The location of the full representation of the resource.
        message:
          type: string
          description: A description of the change. This might be a commit message
            or changeset description.
        pushedBy:
          $ref: '#/components/schemas/IdentityRef'
        timestamp:
          type: string
          description: A timestamp for the change.
          format: date-time
      description: Represents a change associated with a build.
    CodeRepositoryReference:
      type: object
      properties:
        repositoryReference:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReleaseManagementInputValue'
          description: Gets and sets the repository references.
        systemType:
          type: string
          description: It can have value as ‘GitHub’, ‘Vsts’.
          enum:
          - none
          - tfsGit
          - gitHub
          x-ms-enum:
            name: PullRequestSystemType
            values:
            - value: none
              description: ""
            - value: tfsGit
              description: ""
            - value: gitHub
              description: ""
      description: ""
    ComplianceSettings:
      type: object
      properties:
        checkForCredentialsAndOtherSecrets:
          type: boolean
          description: Scan the release definition for secrets
      description: ""
    Condition:
      type: object
      properties:
        conditionType:
          type: string
          description: Gets or sets the condition type.
          enum:
          - undefined
          - event
          - environmentState
          - artifact
          x-ms-enum:
            name: ConditionType
            values:
            - value: undefined
              description: The condition type is undefined.
            - value: event
              description: The condition type is event.
            - value: environmentState
              description: The condition type is environment state.
            - value: artifact
              description: The condition type is artifact.
        name:
          type: string
          description: Gets or sets the name of the condition. e.g. 'ReleaseStarted'.
        value:
          type: string
          description: Gets or set value of the condition.
      description: ""
    ConfigurationVariableValue:
      type: object
      properties:
        allowOverride:
          type: boolean
          description: Gets and sets if a variable can be overridden at deployment
            time or not.
        isSecret:
          type: boolean
          description: Gets or sets as variable is secret or not.
        value:
          type: string
          description: Gets and sets value of the configuration variable.
      description: ""
    Consumer:
      type: object
      properties:
        consumerId:
          type: integer
          description: ID of the consumer.
          format: int32
        consumerName:
          type: string
          description: Name of the consumer.
      description: ""
    ContainerImageTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ContinuousDeploymentTriggerIssue:
      description: ""
      allOf:
      - $ref: '#/components/schemas/AutoTriggerIssue'
    ControlOptions:
      type: object
      properties:
        alwaysRun:
          type: boolean
          description: Always run the job.
        continueOnError:
          type: boolean
          description: Indicates whether to continue job on error or not.
        enabled:
          type: boolean
          description: Indicates the job enabled or not.
      description: ""
    CustomArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    DataSourceBinding:
      type: object
      properties:
        callbackContextTemplate:
          type: string
          description: Pagination format supported by this data source(ContinuationToken/SkipTop).
        callBackRequiredTemplate:
          type: string
          description: Subsequent calls needed?
        dataSourceName:
          type: string
          description: Name of the datasource.
        endpointId:
          type: string
          description: Endpoint ID of the datasource.
        endpointUrl:
          type: string
          description: Endpoint URL of the datasource.
        initialContextTemplate:
          type: string
          description: Defines the initial value of the query params
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Parameters of the datasource.
        requestContent:
          type: string
          description: Gets or sets http request body
        requestVerb:
          type: string
          description: Gets or sets http request verb
        resultSelector:
          type: string
          description: Result selector applied on output of datasource result, for
            example jsonpath:$.value[?(@.properties.isEnabled == true)].
        resultTemplate:
          type: string
          description: 'Format of the return results, for example. { "Value" : "{{{id}}}",
            "DisplayValue" : "{{{name}}}" }.'
        target:
          type: string
          description: Target of the datasource.
      description: ""
    DataSourceBindingBase:
      type: object
      properties:
        callbackContextTemplate:
          type: string
          description: Pagination format supported by this data source(ContinuationToken/SkipTop).
        callbackRequiredTemplate:
          type: string
          description: Subsequent calls needed?
        dataSourceName:
          type: string
          description: Gets or sets the name of the data source.
        endpointId:
          type: string
          description: Gets or sets the endpoint Id.
        endpointUrl:
          type: string
          description: Gets or sets the url of the service endpoint.
        headers:
          type: array
          description: Gets or sets the authorization headers.
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
        initialContextTemplate:
          type: string
          description: Defines the initial value of the query params
        parameters:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the parameters for the data source.
        requestContent:
          type: string
          description: Gets or sets http request body
        requestVerb:
          type: string
          description: Gets or sets http request verb
        resultSelector:
          type: string
          description: Gets or sets the result selector.
        resultTemplate:
          type: string
          description: Gets or sets the result template.
        target:
          type: string
          description: Gets or sets the target of the data source.
      description: Represents binding of data source for the service endpoint request.
    DefinitionEnvironmentReference:
      type: object
      properties:
        definitionEnvironmentId:
          type: integer
          description: Definition environment ID.
          format: int32
        definitionEnvironmentName:
          type: string
          description: Definition environment name.
        releaseDefinitionId:
          type: integer
          description: ReleaseDefinition ID.
          format: int32
        releaseDefinitionName:
          type: string
          description: ReleaseDefinition name.
      description: ""
    Demand:
      type: object
      properties:
        name:
          type: string
          description: Gets and sets the name of demand.
        value:
          type: string
          description: Gets and sets the value of demand.
      description: ""
    Deployment:
      type: object
      properties:
        attempt:
          type: integer
          description: Gets attempt number.
          format: int32
        completedOn:
          type: string
          description: Gets the date on which deployment is complete.
          format: date-time
        conditions:
          type: array
          description: Gets the list of condition associated with deployment.
          items:
            $ref: '#/components/schemas/Condition'
        definitionEnvironmentId:
          type: integer
          description: Gets release definition environment id.
          format: int32
        deploymentStatus:
          type: string
          description: Gets status of the deployment.
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is in progress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
        id:
          type: integer
          description: Gets the unique identifier for deployment.
          format: int32
        lastModifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastModifiedOn:
          type: string
          description: Gets the date on which deployment is last modified.
          format: date-time
        operationStatus:
          type: string
          description: Gets operation status of deployment.
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase in progress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        postDeployApprovals:
          type: array
          description: Gets list of PostDeployApprovals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        preDeployApprovals:
          type: array
          description: Gets list of PreDeployApprovals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        projectReference:
          $ref: '#/components/schemas/ProjectReference'
        queuedOn:
          type: string
          description: Gets the date on which deployment is queued.
          format: date-time
        reason:
          type: string
          description: Gets reason of deployment.
          enum:
          - none
          - manual
          - automated
          - scheduled
          - redeployTrigger
          x-ms-enum:
            name: DeploymentReason
            values:
            - value: none
              description: The deployment reason is none.
            - value: manual
              description: The deployment reason is manual.
            - value: automated
              description: The deployment reason is automated.
            - value: scheduled
              description: The deployment reason is scheduled.
            - value: redeployTrigger
              description: The deployment reason is RedeployTrigger.
        release:
          $ref: '#/components/schemas/ReleaseReference'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseEnvironment:
          $ref: '#/components/schemas/ReleaseEnvironmentShallowReference'
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        scheduledDeploymentTime:
          type: string
          description: Gets the date on which deployment is scheduled.
          format: date-time
        startedOn:
          type: string
          description: Gets the date on which deployment is started.
          format: date-time
      description: ""
    DeploymentApprovalCompletedEvent:
      type: object
      properties:
        approval:
          $ref: '#/components/schemas/ReleaseApproval'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeploymentApprovalPendingEvent:
      type: object
      properties:
        approval:
          $ref: '#/components/schemas/ReleaseApproval'
        approvalOptions:
          $ref: '#/components/schemas/ApprovalOptions'
        completedApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        deployment:
          $ref: '#/components/schemas/Deployment'
        isMultipleRankApproval:
          type: boolean
        pendingApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeploymentAttempt:
      type: object
      properties:
        attempt:
          type: integer
          description: Deployment attempt.
          format: int32
        deploymentId:
          type: integer
          description: ID of the deployment.
          format: int32
        hasStarted:
          type: boolean
          description: Specifies whether deployment has started or not.
        id:
          type: integer
          description: ID of deployment.
          format: int32
        issues:
          type: array
          description: All the issues related to the deployment.
          items:
            $ref: '#/components/schemas/Issue'
        lastModifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastModifiedOn:
          type: string
          description: Time when this deployment last modified.
          format: date-time
        operationStatus:
          type: string
          description: Deployment operation status.
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase in progress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        postDeploymentGates:
          $ref: '#/components/schemas/ReleaseGates'
        preDeploymentGates:
          $ref: '#/components/schemas/ReleaseGates'
        queuedOn:
          type: string
          description: When this deployment queued on.
          format: date-time
        reason:
          type: string
          description: Reason for the deployment.
          enum:
          - none
          - manual
          - automated
          - scheduled
          - redeployTrigger
          x-ms-enum:
            name: DeploymentReason
            values:
            - value: none
              description: The deployment reason is none.
            - value: manual
              description: The deployment reason is manual.
            - value: automated
              description: The deployment reason is automated.
            - value: scheduled
              description: The deployment reason is scheduled.
            - value: redeployTrigger
              description: The deployment reason is RedeployTrigger.
        releaseDeployPhases:
          type: array
          description: List of release deployphases executed in this deployment.
          items:
            $ref: '#/components/schemas/ReleaseDeployPhase'
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        status:
          type: string
          description: status of the deployment.
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is in progress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
      description: ""
    DeploymentAuthorizationInfo:
      type: object
      properties:
        authorizationHeaderFor:
          type: string
          description: Authorization header type, typically either RevalidateApproverIdentity
            or OnBehalfOf.
          enum:
          - revalidateApproverIdentity
          - onBehalfOf
          x-ms-enum:
            name: AuthorizationHeaderFor
            values:
            - value: revalidateApproverIdentity
              description: ""
            - value: onBehalfOf
              description: ""
        resources:
          type: array
          description: List of resources.
          items:
            type: string
        tenantId:
          type: string
          description: ID of the tenant.
        vstsAccessTokenKey:
          type: string
          description: Access token key.
      description: ""
    DeploymentCompletedEvent:
      type: object
      properties:
        comment:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        deployment:
          $ref: '#/components/schemas/Deployment'
        environment:
          $ref: '#/components/schemas/ReleaseEnvironment'
        project:
          $ref: '#/components/schemas/ProjectReference'
      description: ""
    DeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BaseDeploymentInput'
    DeploymentJob:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/ReleaseTask'
        tasks:
          type: array
          description: List of  executed tasks with in job.
          items:
            $ref: '#/components/schemas/ReleaseTask'
      description: ""
    DeploymentManualInterventionPendingEvent:
      type: object
      properties:
        deployment:
          $ref: '#/components/schemas/Deployment'
        emailRecipients:
          type: array
          items:
            type: string
            format: uuid
        environmentOwner:
          $ref: '#/components/schemas/IdentityRef'
        manualIntervention:
          $ref: '#/components/schemas/ManualIntervention'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeploymentQueryParameters:
      type: object
      properties:
        artifactSourceId:
          type: string
          description: Query deployments based specified artifact source id.
        artifactTypeId:
          type: string
          description: Query deployments based specified artifact type id.
        artifactVersions:
          type: array
          description: Query deployments based specified artifact versions.
          items:
            type: string
        deploymentsPerEnvironment:
          type: integer
          description: Query deployments number of deployments per environment.
          format: int32
        deploymentStatus:
          type: string
          description: Query deployment based on deployment status.
          enum:
          - undefined
          - notDeployed
          - inProgress
          - succeeded
          - partiallySucceeded
          - failed
          - all
          x-ms-enum:
            name: DeploymentStatus
            values:
            - value: undefined
              description: The deployment status is undefined.
            - value: notDeployed
              description: The deployment status is not deployed.
            - value: inProgress
              description: The deployment status is in progress.
            - value: succeeded
              description: The deployment status is succeeded.
            - value: partiallySucceeded
              description: The deployment status is partiallysucceeded.
            - value: failed
              description: The deployment status is failed.
            - value: all
              description: The deployment status is all.
        environments:
          type: array
          description: Query deployments of specified environments.
          items:
            $ref: '#/components/schemas/DefinitionEnvironmentReference'
        expands:
          type: string
          description: Query deployments based specified expands.
          enum:
          - all
          - deploymentOnly
          - approvals
          - artifacts
          x-ms-enum:
            name: DeploymentExpands
            values:
            - value: all
              description: ""
            - value: deploymentOnly
              description: ""
            - value: approvals
              description: ""
            - value: artifacts
              description: ""
        isDeleted:
          type: boolean
          description: Specify deleted deployments should return or not.
        operationStatus:
          type: string
          description: Query deployment based on deployment operation status.
          enum:
          - undefined
          - queued
          - scheduled
          - pending
          - approved
          - rejected
          - deferred
          - queuedForAgent
          - phaseInProgress
          - phaseSucceeded
          - phasePartiallySucceeded
          - phaseFailed
          - canceled
          - phaseCanceled
          - manualInterventionPending
          - queuedForPipeline
          - cancelling
          - evaluatingGates
          - gateFailed
          - all
          x-ms-enum:
            name: DeploymentOperationStatus
            values:
            - value: undefined
              description: The deployment operation status is undefined.
            - value: queued
              description: The deployment operation status is queued.
            - value: scheduled
              description: The deployment operation status is scheduled.
            - value: pending
              description: The deployment operation status is pending.
            - value: approved
              description: The deployment operation status is approved.
            - value: rejected
              description: The deployment operation status is rejected.
            - value: deferred
              description: The deployment operation status is deferred.
            - value: queuedForAgent
              description: The deployment operation status is queued for agent.
            - value: phaseInProgress
              description: The deployment operation status is phase in progress.
            - value: phaseSucceeded
              description: The deployment operation status is phase succeeded.
            - value: phasePartiallySucceeded
              description: The deployment operation status is phase partially succeeded.
            - value: phaseFailed
              description: The deployment operation status is phase failed.
            - value: canceled
              description: The deployment operation status is canceled.
            - value: phaseCanceled
              description: The deployment operation status is phase canceled.
            - value: manualInterventionPending
              description: The deployment operation status is manualintervention pending.
            - value: queuedForPipeline
              description: The deployment operation status is queued for pipeline.
            - value: cancelling
              description: The deployment operation status is cancelling.
            - value: evaluatingGates
              description: The deployment operation status is EvaluatingGates.
            - value: gateFailed
              description: The deployment operation status is GateFailed.
            - value: all
              description: The deployment operation status is all.
        queryType:
          type: string
          description: Query deployments based query type.
          enum:
          - regular
          - failingSince
          x-ms-enum:
            name: DeploymentsQueryType
            values:
            - value: regular
              description: ""
            - value: failingSince
              description: ""
        sourceBranch:
          type: string
          description: Query deployments based specified source branch.
      description: ""
    DeploymentStartedEvent:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/ReleaseEnvironment'
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    DeployPhase:
      type: object
      properties:
        name:
          type: string
          description: Gets and sets the name of deploy phase.
        phaseType:
          type: string
          description: Indicates the deploy phase type.
          enum:
          - undefined
          - agentBasedDeployment
          - runOnServer
          - machineGroupBasedDeployment
          - deploymentGates
          x-ms-enum:
            name: DeployPhaseTypes
            values:
            - value: undefined
              description: Phase type not defined. Don't use this.
            - value: agentBasedDeployment
              description: Phase type which contains tasks executed on agent.
            - value: runOnServer
              description: Phase type which contains tasks executed by server.
            - value: machineGroupBasedDeployment
              description: Phase type which contains tasks executed on deployment
                group machines.
            - value: deploymentGates
              description: Phase type which contains tasks which acts as Gates for
                the deployment to go forward.
        rank:
          type: integer
          description: Gets and sets the rank of deploy phase.
          format: int32
        refName:
          type: string
          description: Gets and sets the reference name of deploy phase.
        workflowTasks:
          type: array
          description: Gets and sets the workflow tasks for the deploy phase.
          items:
            $ref: '#/components/schemas/WorkflowTask'
      description: ""
    EmailRecipients:
      type: object
      properties:
        emailAddresses:
          type: array
          description: List of email addresses.
          items:
            type: string
        tfsIds:
          type: array
          description: List of TFS IDs guids.
          items:
            type: string
            format: uuid
      description: ""
    EnvironmentExecutionPolicy:
      type: object
      properties:
        concurrencyCount:
          type: integer
          description: This policy decides, how many environments would be with Environment
            Runner.
          format: int32
        queueDepthCount:
          type: integer
          description: Queue depth in the EnvironmentQueue table, this table keeps
            the environment entries till Environment Runner is free [as per it's policy]
            to take another environment for running.
          format: int32
      description: Defines policy on environment queuing at Release Management side
        queue. We will send to Environment Runner [creating pre-deploy and other steps]
        only when the policies mentioned are satisfied.
    EnvironmentOptions:
      type: object
      properties:
        autoLinkWorkItems:
          type: boolean
          description: Gets and sets as the auto link workitems or not.
        badgeEnabled:
          type: boolean
          description: Gets and sets as the badge enabled or not.
        publishDeploymentStatus:
          type: boolean
          description: Gets and sets as the publish deployment status or not.
        pullRequestDeploymentEnabled:
          type: boolean
          description: Gets and sets as the.pull request deployment enabled or not.
      description: ""
    EnvironmentRetentionPolicy:
      type: object
      properties:
        daysToKeep:
          type: integer
          description: Gets and sets the number of days to keep environment.
          format: int32
        releasesToKeep:
          type: integer
          description: Gets and sets the number of releases to keep.
          format: int32
        retainBuild:
          type: boolean
          description: Gets and sets as the build to be retained or not.
      description: ""
    EnvironmentTrigger:
      type: object
      properties:
        definitionEnvironmentId:
          type: integer
          description: Definition environment ID on which this trigger applicable.
          format: int32
        releaseDefinitionId:
          type: integer
          description: ReleaseDefinition ID on which this trigger applicable.
          format: int32
        triggerContent:
          type: string
          description: Gets or sets the trigger content.
        triggerType:
          type: string
          description: Gets or sets the trigger type.
          enum:
          - undefined
          - deploymentGroupRedeploy
          - rollbackRedeploy
          x-ms-enum:
            name: EnvironmentTriggerType
            values:
            - value: undefined
              description: Environment trigger type undefined.
            - value: deploymentGroupRedeploy
              description: Environment trigger type is deployment group redeploy.
            - value: rollbackRedeploy
              description: Environment trigger type is Rollback.
      description: ""
    EnvironmentTriggerContent:
      type: object
      properties:
        action:
          type: string
          description: Gets or sets action.
        eventTypes:
          type: array
          description: Gets or sets list of event types.
          items:
            type: string
      description: ""
    ExecutionInput:
      type: object
      properties:
        parallelExecutionType:
          type: string
          description: Parallel execution type, for example MultiConfiguration or
            MultiMachine.
          enum:
          - none
          - multiConfiguration
          - multiMachine
          x-ms-enum:
            name: ParallelExecutionTypes
            values:
            - value: none
              description: ""
            - value: multiConfiguration
              description: ""
            - value: multiMachine
              description: ""
      description: ""
    FavoriteItem:
      type: object
      properties:
        data:
          type: string
          description: Application specific data for the entry.
        id:
          type: string
          description: Unique Id of the the entry.
          format: uuid
        name:
          type: string
          description: Display text for favorite entry.
        type:
          type: string
          description: Application specific favorite entry type. Empty or Null represents
            that Favorite item is a Folder.
      description: Class to represent favorite entry.
    Folder:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Time when this folder created.
          format: date-time
        description:
          type: string
          description: Description of the folder.
        lastChangedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastChangedDate:
          type: string
          description: Time when this folder last changed.
          format: date-time
        path:
          type: string
          description: path of the folder.
      description: ""
    GatesDeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BaseDeploymentInput'
    GatesDeployPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeployPhase'
    GateUpdateMetadata:
      type: object
      properties:
        comment:
          type: string
          description: Comment.
        gatesToIgnore:
          type: array
          description: Name of gate to be ignored.
          items:
            type: string
      description: ""
    GitArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    GitHubArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Organizations.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    IdentityRef:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    IgnoredGate:
      type: object
      properties:
        lastModifiedOn:
          type: string
          description: Gets the date on which gate is last ignored.
          format: date-time
        name:
          type: string
          description: Name of gate ignored.
      description: ""
    InputDescriptor:
      type: object
      properties:
        dependencyInputIds:
          type: array
          description: The ids of all inputs that the value of this input is dependent
            on.
          items:
            type: string
        description:
          type: string
          description: Description of what this input is used for
        groupName:
          type: string
          description: The group localized name to which this input belongs and can
            be shown as a header for the container that will include all the inputs
            in the group.
        hasDynamicValueInformation:
          type: boolean
          description: If true, the value information for this input is dynamic and
            should be fetched when the value of dependency inputs change.
        id:
          type: string
          description: Identifier for the subscription input
        inputMode:
          type: string
          description: Mode in which the value of this input should be entered
          enum:
          - none
          - textBox
          - passwordBox
          - combo
          - radioButtons
          - checkBox
          - textArea
          x-ms-enum:
            name: InputMode
            values:
            - value: none
              description: This input should not be shown in the UI
            - value: textBox
              description: An input text box should be shown
            - value: passwordBox
              description: An password input box should be shown
            - value: combo
              description: A select/combo control should be shown
            - value: radioButtons
              description: Radio buttons should be shown
            - value: checkBox
              description: Checkbox should be shown(for true/false values)
            - value: textArea
              description: A multi-line text area should be shown
        isConfidential:
          type: boolean
          description: Gets whether this input is confidential, such as for a password
            or application key
        name:
          type: string
          description: Localized name which can be shown as a label for the subscription
            input
        properties:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: Custom properties for the input which can be used by the service
            provider
        type:
          type: string
          description: Underlying data type for the input value. When this value is
            specified, InputMode, Validation and Values are optional.
        useInDefaultDescription:
          type: boolean
          description: Gets whether this input is included in the default generated
            action description.
        validation:
          $ref: '#/components/schemas/InputValidation'
        valueHint:
          type: string
          description: A hint for input value. It can be used in the UI as the input
            placeholder.
        values:
          $ref: '#/components/schemas/InputValues'
      description: Describes an input for subscriptions.
    InputValidation:
      type: object
      properties:
        dataType:
          type: string
          description: Gets or sets the data data type to validate.
          enum:
          - none
          - string
          - number
          - boolean
          - guid
          - uri
          x-ms-enum:
            name: InputDataType
            values:
            - value: none
              description: No data type is specified.
            - value: string
              description: Represents a textual value.
            - value: number
              description: Represents a numeric value.
            - value: boolean
              description: Represents a value of true or false.
            - value: guid
              description: Represents a Guid.
            - value: uri
              description: Represents a URI.
        isRequired:
          type: boolean
          description: Gets or sets if this is a required field.
        maxLength:
          type: integer
          description: Gets or sets the maximum length of this descriptor.
          format: int32
        maxValue:
          type: string
          description: Gets or sets the minimum value for this descriptor.
          format: decimal
        minLength:
          type: integer
          description: Gets or sets the minimum length of this descriptor.
          format: int32
        minValue:
          type: string
          description: Gets or sets the minimum value for this descriptor.
          format: decimal
        pattern:
          type: string
          description: Gets or sets the pattern to validate.
        patternMismatchErrorMessage:
          type: string
          description: Gets or sets the error on pattern mismatch.
      description: Describes what values are valid for a subscription input
    InputValue:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: Any other data about this input
        displayValue:
          type: string
          description: The text to show for the display of this value
        value:
          type: string
          description: The value to store for this input
      description: Information about a single value for an input
    InputValues:
      type: object
      properties:
        defaultValue:
          type: string
          description: The default value to use for this input
        error:
          $ref: '#/components/schemas/InputValuesError'
        inputId:
          type: string
          description: The id of the input
        isDisabled:
          type: boolean
          description: Should this input be disabled
        isLimitedToPossibleValues:
          type: boolean
          description: Should the value be restricted to one of the values in the
            PossibleValues (True) or are the values in PossibleValues just a suggestion
            (False)
        isReadOnly:
          type: boolean
          description: Should this input be made read-only
        possibleValues:
          type: array
          description: Possible values that this input can take
          items:
            $ref: '#/components/schemas/InputValue'
      description: Information about the possible/allowed values for a given subscription
        input
    InputValuesError:
      type: object
      properties:
        message:
          type: string
          description: The error message.
      description: Error information related to a subscription input value.
    InputValuesQuery:
      type: object
      properties:
        currentValues:
          type: object
          additionalProperties:
            type: string
        inputValues:
          type: array
          description: The input values to return on input, and the result from the
            consumer on output.
          items:
            $ref: '#/components/schemas/InputValues'
        resource:
          type: object
          properties: {}
          description: Subscription containing information about the publisher/consumer
            and the current input values
      description: ""
    Issue:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
          description: Issue data.
        issueType:
          type: string
          description: Issue type, for example error, warning or info.
        message:
          type: string
          description: Issue message.
      description: ""
    JenkinsArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    MachineGroupBasedDeployPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeployPhase'
    MachineGroupDeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeploymentInput'
    MailMessage:
      type: object
      properties:
        body:
          type: string
          description: Body of mail.
        cc:
          $ref: '#/components/schemas/EmailRecipients'
        inReplyTo:
          type: string
          description: Reply to.
        messageId:
          type: string
          description: Message ID of the mail.
        replyBy:
          type: string
          description: Data when should be replied to mail.
          format: date-time
        replyTo:
          $ref: '#/components/schemas/EmailRecipients'
        sections:
          type: array
          description: List of mail section types.
          items:
            type: object
            x-ms-enum:
              name: MailSectionType
              values:
              - value: details
                description: ""
              - value: environments
                description: ""
              - value: issues
                description: ""
              - value: testResults
                description: ""
              - value: workItems
                description: ""
              - value: releaseInfo
                description: ""
        senderType:
          type: string
          description: Mail sender type.
          enum:
          - serviceAccount
          - requestingUser
          x-ms-enum:
            name: SenderType
            values:
            - value: serviceAccount
              description: ""
            - value: requestingUser
              description: ""
        subject:
          type: string
          description: Subject of the mail.
        to:
          $ref: '#/components/schemas/EmailRecipients'
      description: ""
    ManualIntervention:
      type: object
      properties:
        approver:
          $ref: '#/components/schemas/IdentityRef'
        comments:
          type: string
          description: Gets or sets comments for approval.
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        id:
          type: integer
          description: Gets the unique identifier for manual intervention.
          format: int32
        instructions:
          type: string
          description: Gets or sets instructions for approval.
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets or sets the name.
        release:
          $ref: '#/components/schemas/ReleaseShallowReference'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseEnvironment:
          $ref: '#/components/schemas/ReleaseEnvironmentShallowReference'
        status:
          type: string
          description: Gets or sets the status of the manual intervention.
          enum:
          - unknown
          - pending
          - rejected
          - approved
          - canceled
          x-ms-enum:
            name: ManualInterventionStatus
            values:
            - value: unknown
              description: The manual intervention does not have the status set.
            - value: pending
              description: The manual intervention is pending.
            - value: rejected
              description: The manual intervention is rejected.
            - value: approved
              description: The manual intervention is approved.
            - value: canceled
              description: The manual intervention is canceled.
        taskInstanceId:
          type: string
          description: Get task instance identifier.
          format: uuid
        url:
          type: string
          description: Gets url to access the manual intervention.
      description: ""
    ManualInterventionUpdateMetadata:
      type: object
      properties:
        comment:
          type: string
          description: Sets the comment for manual intervention update.
        status:
          type: string
          description: Sets the status of the manual intervention.
          enum:
          - unknown
          - pending
          - rejected
          - approved
          - canceled
          x-ms-enum:
            name: ManualInterventionStatus
            values:
            - value: unknown
              description: The manual intervention does not have the status set.
            - value: pending
              description: The manual intervention is pending.
            - value: rejected
              description: The manual intervention is rejected.
            - value: approved
              description: The manual intervention is approved.
            - value: canceled
              description: The manual intervention is canceled.
      description: ""
    MappingDetails:
      type: object
      properties:
        mappings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InputValue'
      description: ""
    Metric:
      type: object
      properties:
        name:
          type: string
          description: Name of the Metric.
        value:
          type: integer
          description: Value of the Metric.
          format: int32
      description: ""
    MultiConfigInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ParallelExecutionInputBase'
    MultiMachineInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ParallelExecutionInputBase'
    PackageTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ParallelExecutionInputBase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ExecutionInput'
    PipelineProcess:
      type: object
      properties:
        type:
          type: string
          description: Pipeline process type.
          enum:
          - designer
          - yaml
          x-ms-enum:
            name: PipelineProcessTypes
            values:
            - value: designer
              description: ""
            - value: yaml
              description: ""
      description: ""
    ProcessParameters:
      type: object
      properties:
        dataSourceBindings:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceBindingBase'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/TaskInputDefinitionBase'
        sourceDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/TaskSourceDefinitionBase'
      description: ""
    ProjectReference:
      type: object
      properties:
        id:
          type: string
          description: Gets the unique identifier of this field.
          format: uuid
        name:
          type: string
          description: Gets name of project.
      description: ""
    PropertiesCollection:
      type: object
      properties:
        count:
          type: integer
          description: The count of properties in the collection.
          format: int32
        item:
          type: object
          properties: {}
        keys:
          type: array
          description: The set of keys in the collection.
          items:
            type: string
        values:
          type: array
          description: The set of values in the collection.
          items:
            type: string
      description: The class represents a property bag as a collection of key-value
        pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`)
        except for `DBNull` are accepted. Values of type Byte[], Int32, Double, DateType
        and String preserve their type, other primitives are retuned as a String.
        Byte[] expected as base64 encoded string.
    PropertySelector:
      type: object
      properties:
        properties:
          type: array
          description: List of properties.
          items:
            type: string
        selectorType:
          type: string
          description: Property selector type.
          enum:
          - inclusion
          - exclusion
          x-ms-enum:
            name: PropertySelectorType
            values:
            - value: inclusion
              description: Include in property selector.
            - value: exclusion
              description: Exclude in property selector.
      description: ""
    PullRequestConfiguration:
      type: object
      properties:
        codeRepositoryReference:
          $ref: '#/components/schemas/CodeRepositoryReference'
        useArtifactReference:
          type: boolean
          description: In case of Source based artifacts, Code reference will be present
            in Artifact details.
      description: ""
    PullRequestFilter:
      type: object
      properties:
        tags:
          type: array
          description: List of tags.
          items:
            type: string
        targetBranch:
          type: string
          description: Target branch of pull request.
      description: ""
    PullRequestTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    QueuedReleaseData:
      type: object
      properties:
        projectId:
          type: string
          description: Project ID of the release.
          format: uuid
        queuePosition:
          type: integer
          description: Release queue position.
          format: int32
        releaseId:
          type: integer
          description: Queued release ID.
          format: int32
      description: ""
    RealtimeReleaseDefinitionEvent:
      type: object
      properties:
        definitionId:
          type: integer
          format: int32
        projectId:
          type: string
          format: uuid
      description: ""
    RealtimeReleaseEvent:
      type: object
      properties:
        environmentId:
          type: integer
          format: int32
        projectId:
          type: string
          format: uuid
        releaseId:
          type: integer
          format: int32
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    Release:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        artifacts:
          type: array
          description: Gets or sets the list of artifacts.
          items:
            $ref: '#/components/schemas/Artifact'
        comment:
          type: string
          description: Gets or sets comment.
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        definitionSnapshotRevision:
          type: integer
          description: Gets revision number of definition snapshot.
          format: int32
        description:
          type: string
          description: Gets or sets description of release.
        environments:
          type: array
          description: Gets list of environments.
          items:
            $ref: '#/components/schemas/ReleaseEnvironment'
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        keepForever:
          type: boolean
          description: Whether to exclude the release from retention policies.
        logsContainerUrl:
          type: string
          description: Gets logs container url.
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets name.
        poolName:
          type: string
          description: Gets pool name.
        projectReference:
          $ref: '#/components/schemas/ProjectReference'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        reason:
          type: string
          description: Gets reason of release.
          enum:
          - none
          - manual
          - continuousIntegration
          - schedule
          - pullRequest
          x-ms-enum:
            name: ReleaseReason
            values:
            - value: none
              description: Indicates the release triggered reason not set.
            - value: manual
              description: Indicates the release triggered manually.
            - value: continuousIntegration
              description: Indicates the release triggered by continuous integration.
            - value: schedule
              description: Indicates the release triggered by schedule.
            - value: pullRequest
              description: Indicates the release triggered by PullRequest.
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseDefinitionRevision:
          type: integer
          description: Gets or sets the release definition revision.
          format: int32
        releaseNameFormat:
          type: string
          description: Gets release name format.
        status:
          type: string
          description: Gets status.
          enum:
          - undefined
          - draft
          - active
          - abandoned
          x-ms-enum:
            name: ReleaseStatus
            values:
            - value: undefined
              description: Release status not set.
            - value: draft
              description: Release is in draft state.
            - value: active
              description: Release status is in active.
            - value: abandoned
              description: Release status is in abandoned.
        tags:
          type: array
          description: Gets or sets list of tags.
          items:
            type: string
        triggeringArtifactAlias:
          type: string
        variableGroups:
          type: array
          description: Gets the list of variable groups.
          items:
            $ref: '#/components/schemas/VariableGroup'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Gets or sets the dictionary of variables.
      description: ""
    ReleaseAbandonedEvent:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    ReleaseApproval:
      type: object
      properties:
        approvalType:
          type: string
          description: Gets or sets the type of approval.
          enum:
          - undefined
          - preDeploy
          - postDeploy
          - all
          x-ms-enum:
            name: ApprovalType
            values:
            - value: undefined
              description: Indicates the approval type does not set.
            - value: preDeploy
              description: Indicates the approvals which executed before deployment.
            - value: postDeploy
              description: Indicates the approvals which executed after deployment.
            - value: all
              description: Indicates all approvals.
        approvedBy:
          $ref: '#/components/schemas/IdentityRef'
        approver:
          $ref: '#/components/schemas/IdentityRef'
        attempt:
          type: integer
          description: Gets or sets attempt which specifies as which deployment attempt
            it belongs.
          format: int32
        comments:
          type: string
          description: Gets or sets comments for approval.
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        history:
          type: array
          description: Gets history which specifies all approvals associated with
            this approval.
          items:
            $ref: '#/components/schemas/ReleaseApprovalHistory'
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        isAutomated:
          type: boolean
          description: Gets or sets as approval is automated or not.
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        rank:
          type: integer
          description: Gets or sets rank which specifies the order of the approval.
            e.g. Same rank denotes parallel approval.
          format: int32
        release:
          $ref: '#/components/schemas/ReleaseShallowReference'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseEnvironment:
          $ref: '#/components/schemas/ReleaseEnvironmentShallowReference'
        revision:
          type: integer
          description: Gets the revision number.
          format: int32
        status:
          type: string
          description: Gets or sets the status of the approval.
          enum:
          - undefined
          - pending
          - approved
          - rejected
          - reassigned
          - canceled
          - skipped
          x-ms-enum:
            name: ApprovalStatus
            values:
            - value: undefined
              description: Indicates the approval does not have the status set.
            - value: pending
              description: Indicates the approval is pending.
            - value: approved
              description: Indicates the approval is approved.
            - value: rejected
              description: Indicates the approval is rejected.
            - value: reassigned
              description: Indicates the approval is reassigned.
            - value: canceled
              description: Indicates the approval is canceled.
            - value: skipped
              description: Indicates the approval is skipped.
        url:
          type: string
          description: Gets url to access the approval.
      description: ""
    ReleaseApprovalHistory:
      type: object
      properties:
        approver:
          $ref: '#/components/schemas/IdentityRef'
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        comments:
          type: string
          description: Approval history comments.
        createdOn:
          type: string
          description: Time when this approval created.
          format: date-time
        modifiedOn:
          type: string
          description: Time when this approval modified.
          format: date-time
        revision:
          type: integer
          description: Approval history revision.
          format: int32
      description: ""
    ReleaseApprovalPendingEvent:
      type: object
      properties:
        approval:
          $ref: '#/components/schemas/ReleaseApproval'
        approvalOptions:
          $ref: '#/components/schemas/ApprovalOptions'
        completedApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        definitionName:
          type: string
        deployment:
          $ref: '#/components/schemas/Deployment'
        environmentId:
          type: integer
          format: int32
        environmentName:
          type: string
        environments:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseEnvironment'
        isMultipleRankApproval:
          type: boolean
        pendingApprovals:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        releaseCreator:
          type: string
        releaseName:
          type: string
        title:
          type: string
        webAccessUri:
          type: string
      description: ""
    ReleaseArtifact:
      type: object
      properties:
        artifactProvider:
          $ref: '#/components/schemas/ArtifactProvider'
        artifactType:
          type: string
          description: Gets or sets the artifact type of ReleaseArtifact.
        definitionData:
          type: string
          description: Gets or sets the definition json of ReleaseArtifact.
        definitionId:
          type: integer
          description: Gets or sets the definition id of ReleaseArtifact.
          format: int32
        description:
          type: string
          description: Gets or sets the description of ReleaseArtifact.
        id:
          type: integer
          description: Gets or sets the id of ReleaseArtifact.
          format: int32
        name:
          type: string
          description: Gets or sets the name of ReleaseArtifact.
        releaseId:
          type: integer
          description: Gets or sets the release id.
          format: int32
      description: ""
    ReleaseCondition:
      description: ""
      allOf:
      - $ref: '#/components/schemas/Condition'
    ReleaseCreatedEvent:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectReference'
        release:
          $ref: '#/components/schemas/Release'
      description: ""
    ReleaseDefinition:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
    ReleaseDefinitionApprovals:
      type: object
      properties:
        approvalOptions:
          $ref: '#/components/schemas/ApprovalOptions'
        approvals:
          type: array
          description: Gets or sets the approvals.
          items:
            $ref: '#/components/schemas/ReleaseDefinitionApprovalStep'
      description: ""
    ReleaseDefinitionApprovalStep:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseDefinitionEnvironmentStep'
    ReleaseDefinitionDeployStep:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseDefinitionEnvironmentStep'
    ReleaseDefinitionEnvironment:
      type: object
      properties:
        badgeUrl:
          type: string
          description: Gets or sets the BadgeUrl. BadgeUrl will be used when Badge
            will be enabled in Release Definition Environment.
        conditions:
          type: array
          description: Gets or sets the environment conditions.
          items:
            $ref: '#/components/schemas/Condition'
        currentRelease:
          $ref: '#/components/schemas/ReleaseShallowReference'
        demands:
          type: array
          description: Gets or sets the demands.
          items:
            $ref: '#/components/schemas/Demand'
        deployPhases:
          type: array
          description: Gets or sets the deploy phases of environment.
          items:
            $ref: '#/components/schemas/DeployPhase'
        deployStep:
          $ref: '#/components/schemas/ReleaseDefinitionDeployStep'
        environmentOptions:
          $ref: '#/components/schemas/EnvironmentOptions'
        environmentTriggers:
          type: array
          description: Gets or sets the triggers on environment.
          items:
            $ref: '#/components/schemas/EnvironmentTrigger'
        executionPolicy:
          $ref: '#/components/schemas/EnvironmentExecutionPolicy'
        id:
          type: integer
          description: Gets and sets the ID of the ReleaseDefinitionEnvironment.
          format: int32
        name:
          type: string
          description: Gets and sets the name of the ReleaseDefinitionEnvironment.
        owner:
          $ref: '#/components/schemas/IdentityRef'
        postDeployApprovals:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        postDeploymentGates:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        preDeployApprovals:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        preDeploymentGates:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        processParameters:
          $ref: '#/components/schemas/ProcessParameters'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        queueId:
          type: integer
          description: Gets or sets the queue ID.
          format: int32
        rank:
          type: integer
          description: Gets and sets the rank of the ReleaseDefinitionEnvironment.
          format: int32
        retentionPolicy:
          $ref: '#/components/schemas/EnvironmentRetentionPolicy'
        schedules:
          type: array
          description: Gets or sets the schedules
          items:
            $ref: '#/components/schemas/ReleaseSchedule'
        variableGroups:
          type: array
          description: Gets or sets the variable groups.
          items:
            type: integer
            format: int32
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Gets and sets the variables.
      description: ""
    ReleaseDefinitionEnvironmentStep:
      type: object
      properties:
        id:
          type: integer
          description: ID of the approval or deploy step.
          format: int32
      description: ""
    ReleaseDefinitionEnvironmentSummary:
      type: object
      properties:
        id:
          type: integer
          description: ID of ReleaseDefinition environment summary.
          format: int32
        lastReleases:
          type: array
          description: List of release shallow reference deployed using this ReleaseDefinition.
          items:
            $ref: '#/components/schemas/ReleaseShallowReference'
        name:
          type: string
          description: Name of ReleaseDefinition environment summary.
      description: ""
    ReleaseDefinitionEnvironmentTemplate:
      type: object
      properties:
        canDelete:
          type: boolean
          description: Indicates whether template can be deleted or not.
        category:
          type: string
          description: Category of the ReleaseDefinition environment template.
        description:
          type: string
          description: Description of the ReleaseDefinition environment template.
        environment:
          $ref: '#/components/schemas/ReleaseDefinitionEnvironment'
        iconTaskId:
          type: string
          description: ID of the task which used to display icon used for this template.
          format: uuid
        iconUri:
          type: string
          description: Icon uri of the template.
        id:
          type: string
          description: ID of the ReleaseDefinition environment template.
          format: uuid
        isDeleted:
          type: boolean
          description: Indicates whether template deleted or not.
        name:
          type: string
          description: Name of the ReleaseDefinition environment template.
      description: ""
    ReleaseDefinitionGate:
      type: object
      properties:
        tasks:
          type: array
          description: Gets or sets the gates workflow.
          items:
            $ref: '#/components/schemas/WorkflowTask'
      description: ""
    ReleaseDefinitionGatesOptions:
      type: object
      properties:
        isEnabled:
          type: boolean
          description: Gets or sets as the gates enabled or not.
        minimumSuccessDuration:
          type: integer
          description: Gets or sets the minimum duration for steady results after
            a successful gates evaluation.
          format: int32
        samplingInterval:
          type: integer
          description: Gets or sets the time between re-evaluation of gates.
          format: int32
        stabilizationTime:
          type: integer
          description: Gets or sets the delay before evaluation.
          format: int32
        timeout:
          type: integer
          description: Gets or sets the timeout after which gates fail.
          format: int32
      description: ""
    ReleaseDefinitionGatesStep:
      type: object
      properties:
        gates:
          type: array
          description: Gets or sets the gates.
          items:
            $ref: '#/components/schemas/ReleaseDefinitionGate'
        gatesOptions:
          $ref: '#/components/schemas/ReleaseDefinitionGatesOptions'
        id:
          type: integer
          description: ID of the ReleaseDefinitionGateStep.
          format: int32
      description: ""
    ReleaseDefinitionRevision:
      type: object
      properties:
        apiVersion:
          type: string
          description: Gets api-version for revision object.
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        changedDate:
          type: string
          description: Gets date on which ReleaseDefinition changed.
          format: date-time
        changeType:
          type: string
          description: Gets type of change.
          enum:
          - add
          - update
          - delete
          - undelete
          x-ms-enum:
            name: AuditAction
            values:
            - value: add
              description: Indicates the audit add.
            - value: update
              description: Indicates the audit update.
            - value: delete
              description: Indicates the audit delete.
            - value: undelete
              description: Indicates the audit undelete.
        comment:
          type: string
          description: Gets comments for revision.
        definitionId:
          type: integer
          description: Get id of the definition.
          format: int32
        definitionUrl:
          type: string
          description: Gets definition URL.
        revision:
          type: integer
          description: Get revision number of the definition.
          format: int32
      description: ""
    ReleaseDefinitionShallowReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          description: Gets the unique identifier of release definition.
          format: int32
        name:
          type: string
          description: Gets or sets the name of the release definition.
        path:
          type: string
          description: Gets or sets the path of the release definition.
        projectReference:
          $ref: '#/components/schemas/ProjectReference'
        url:
          type: string
          description: Gets the REST API url to access the release definition.
      description: ""
    ReleaseDefinitionSummary:
      type: object
      properties:
        environments:
          type: array
          description: List of Release Definition environment summary.
          items:
            $ref: '#/components/schemas/ReleaseDefinitionEnvironmentSummary'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releases:
          type: array
          description: List of releases deployed using this Release Definition.
          items:
            $ref: '#/components/schemas/Release'
      description: ""
    ReleaseDefinitionUndeleteParameter:
      type: object
      properties:
        comment:
          type: string
          description: Gets or sets comment.
      description: ""
    ReleaseDeployPhase:
      type: object
      properties:
        deploymentJobs:
          type: array
          description: Deployment jobs of the phase.
          items:
            $ref: '#/components/schemas/DeploymentJob'
        errorLog:
          type: string
          description: Phase execution error logs.
        manualInterventions:
          type: array
          description: List of manual intervention tasks execution information in
            phase.
          items:
            $ref: '#/components/schemas/ManualIntervention'
        name:
          type: string
          description: Name of the phase.
        phaseId:
          type: string
          description: ID of the phase.
        phaseType:
          type: string
          description: Type of the phase.
          enum:
          - undefined
          - agentBasedDeployment
          - runOnServer
          - machineGroupBasedDeployment
          - deploymentGates
          x-ms-enum:
            name: DeployPhaseTypes
            values:
            - value: undefined
              description: Phase type not defined. Don't use this.
            - value: agentBasedDeployment
              description: Phase type which contains tasks executed on agent.
            - value: runOnServer
              description: Phase type which contains tasks executed by server.
            - value: machineGroupBasedDeployment
              description: Phase type which contains tasks executed on deployment
                group machines.
            - value: deploymentGates
              description: Phase type which contains tasks which acts as Gates for
                the deployment to go forward.
        rank:
          type: integer
          description: Rank of the phase.
          format: int32
        runPlanId:
          type: string
          description: Run Plan ID of the phase.
          format: uuid
        startedOn:
          type: string
          description: Phase start time.
          format: date-time
        status:
          type: string
          description: Status of the phase.
          enum:
          - undefined
          - notStarted
          - inProgress
          - partiallySucceeded
          - succeeded
          - failed
          - canceled
          - skipped
          - cancelling
          x-ms-enum:
            name: DeployPhaseStatus
            values:
            - value: undefined
              description: Phase status not set.
            - value: notStarted
              description: Phase execution not started.
            - value: inProgress
              description: Phase execution in progress.
            - value: partiallySucceeded
              description: Phase execution partially succeeded.
            - value: succeeded
              description: Phase execution succeeded.
            - value: failed
              description: Phase execution failed.
            - value: canceled
              description: Phase execution canceled.
            - value: skipped
              description: Phase execution skipped.
            - value: cancelling
              description: Phase is in cancelling state.
      description: ""
    ReleaseEnvironment:
      type: object
      properties:
        conditions:
          type: array
          description: Gets list of conditions.
          items:
            $ref: '#/components/schemas/ReleaseCondition'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        definitionEnvironmentId:
          type: integer
          description: Gets definition environment id.
          format: int32
        deployPhasesSnapshot:
          type: array
          description: Gets list of deploy phases snapshot.
          items:
            $ref: '#/components/schemas/DeployPhase'
        deploySteps:
          type: array
          description: Gets deploy steps.
          items:
            $ref: '#/components/schemas/DeploymentAttempt'
        environmentOptions:
          $ref: '#/components/schemas/EnvironmentOptions'
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets name.
        nextScheduledUtcTime:
          type: string
          description: Gets next scheduled UTC time.
          format: date-time
        owner:
          $ref: '#/components/schemas/IdentityRef'
        postApprovalsSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        postDeployApprovals:
          type: array
          description: Gets list of post deploy approvals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        postDeploymentGatesSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        preApprovalsSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionApprovals'
        preDeployApprovals:
          type: array
          description: Gets list of pre deploy approvals.
          items:
            $ref: '#/components/schemas/ReleaseApproval'
        preDeploymentGatesSnapshot:
          $ref: '#/components/schemas/ReleaseDefinitionGatesStep'
        processParameters:
          $ref: '#/components/schemas/ProcessParameters'
        rank:
          type: integer
          description: Gets rank.
          format: int32
        release:
          $ref: '#/components/schemas/ReleaseShallowReference'
        releaseCreatedBy:
          $ref: '#/components/schemas/IdentityRef'
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        releaseId:
          type: integer
          description: Gets release id.
          format: int32
        scheduledDeploymentTime:
          type: string
          description: Gets schedule deployment time of release environment.
          format: date-time
        schedules:
          type: array
          description: Gets list of schedules.
          items:
            $ref: '#/components/schemas/ReleaseSchedule'
        status:
          type: string
          description: Gets environment status.
          enum:
          - undefined
          - notStarted
          - inProgress
          - succeeded
          - canceled
          - rejected
          - queued
          - scheduled
          - partiallySucceeded
          x-ms-enum:
            name: EnvironmentStatus
            values:
            - value: undefined
              description: Environment status not set.
            - value: notStarted
              description: Environment is in not started state.
            - value: inProgress
              description: Environment is in progress state.
            - value: succeeded
              description: Environment is in succeeded state.
            - value: canceled
              description: Environment is in canceled state.
            - value: rejected
              description: Environment is in rejected state.
            - value: queued
              description: Environment is in queued state.
            - value: scheduled
              description: Environment is in scheduled state.
            - value: partiallySucceeded
              description: Environment is in partially succeeded state.
        timeToDeploy:
          type: number
          description: Gets time to deploy.
          format: double
        triggerReason:
          type: string
          description: Gets trigger reason.
        variableGroups:
          type: array
          description: Gets the list of variable groups.
          items:
            $ref: '#/components/schemas/VariableGroup'
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Gets the dictionary of variables.
      description: ""
    ReleaseEnvironmentCompletedEvent:
      type: object
      properties:
        createdByName:
          type: string
        definitionId:
          type: integer
          format: int32
        definitionName:
          type: string
        environment:
          $ref: '#/components/schemas/ReleaseEnvironment'
        environmentId:
          type: integer
          format: int32
        projectName:
          type: string
        reason:
          type: string
          enum:
          - none
          - manual
          - automated
          - scheduled
          - redeployTrigger
          x-ms-enum:
            name: DeploymentReason
            values:
            - value: none
              description: The deployment reason is none.
            - value: manual
              description: The deployment reason is manual.
            - value: automated
              description: The deployment reason is automated.
            - value: scheduled
              description: The deployment reason is scheduled.
            - value: redeployTrigger
              description: The deployment reason is RedeployTrigger.
        releaseCreatedBy:
          $ref: '#/components/schemas/IdentityRef'
        releaseLogsUri:
          type: string
        releaseName:
          type: string
        status:
          type: string
        title:
          type: string
        webAccessUri:
          type: string
      description: ""
    ReleaseEnvironmentShallowReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          description: Gets the unique identifier of release environment.
          format: int32
        name:
          type: string
          description: Gets or sets the name of the release environment.
        url:
          type: string
          description: Gets the REST API url to access the release environment.
      description: ""
    ReleaseEnvironmentStatusUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeReleaseDefinitionEvent'
    ReleaseEnvironmentUpdateMetadata:
      type: object
      properties:
        comment:
          type: string
          description: Gets or sets comment.
        scheduledDeploymentTime:
          type: string
          description: Gets or sets scheduled deployment time.
          format: date-time
        status:
          type: string
          description: Gets or sets status of environment.
          enum:
          - undefined
          - notStarted
          - inProgress
          - succeeded
          - canceled
          - rejected
          - queued
          - scheduled
          - partiallySucceeded
          x-ms-enum:
            name: EnvironmentStatus
            values:
            - value: undefined
              description: Environment status not set.
            - value: notStarted
              description: Environment is in not started state.
            - value: inProgress
              description: Environment is in progress state.
            - value: succeeded
              description: Environment is in succeeded state.
            - value: canceled
              description: Environment is in canceled state.
            - value: rejected
              description: Environment is in rejected state.
            - value: queued
              description: Environment is in queued state.
            - value: scheduled
              description: Environment is in scheduled state.
            - value: partiallySucceeded
              description: Environment is in partially succeeded state.
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Sets list of environment variables to be overridden at deployment
            time.
      description: ""
    ReleaseGates:
      type: object
      properties:
        deploymentJobs:
          type: array
          description: Contains the gates job details of each evaluation.
          items:
            $ref: '#/components/schemas/DeploymentJob'
        id:
          type: integer
          description: ID of release gates.
          format: int32
        ignoredGates:
          type: array
          description: List of ignored gates.
          items:
            $ref: '#/components/schemas/IgnoredGate'
        lastModifiedOn:
          type: string
          description: Gates last modified time.
          format: date-time
        runPlanId:
          type: string
          description: Run plan ID of the gates.
          format: uuid
        stabilizationCompletedOn:
          type: string
          description: Gates stabilization completed date and time.
          format: date-time
        startedOn:
          type: string
          description: Gates evaluation started time.
          format: date-time
        status:
          type: string
          description: Status of release gates.
          enum:
          - none
          - pending
          - inProgress
          - succeeded
          - failed
          - canceled
          x-ms-enum:
            name: GateStatus
            values:
            - value: none
              description: The gate does not have the status set.
            - value: pending
              description: The gate is in pending state.
            - value: inProgress
              description: The gate is currently in progress.
            - value: succeeded
              description: The gate completed successfully.
            - value: failed
              description: The gate execution failed.
            - value: canceled
              description: The gate execution cancelled.
        succeedingSince:
          type: string
          description: Date and time at which all gates executed successfully.
          format: date-time
      description: ""
    ReleaseGatesPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseDeployPhase'
    ReleaseManagementInputValue:
      type: object
      properties:
        displayValue:
          type: string
          description: The text to show for the display of this value.
        value:
          type: string
          description: The value to store for this input.
      description: ""
    ReleaseNotCreatedEvent:
      type: object
      properties:
        definitionReference:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
        message:
          type: string
        releaseReason:
          type: string
          enum:
          - none
          - manual
          - continuousIntegration
          - schedule
          - pullRequest
          x-ms-enum:
            name: ReleaseReason
            values:
            - value: none
              description: Indicates the release triggered reason not set.
            - value: manual
              description: Indicates the release triggered manually.
            - value: continuousIntegration
              description: Indicates the release triggered by continuous integration.
            - value: schedule
              description: Indicates the release triggered by schedule.
            - value: pullRequest
              description: Indicates the release triggered by PullRequest.
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
      description: ""
    ReleaseReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        artifacts:
          type: array
          description: Gets list of artifacts.
          items:
            $ref: '#/components/schemas/Artifact'
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets date on when this release created.
          format: date-time
        description:
          type: string
          description: Gets description.
        id:
          type: integer
          description: ID of the Release.
          format: int32
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        name:
          type: string
          description: Gets name of release.
        reason:
          type: string
          description: Gets reason for release.
          enum:
          - none
          - manual
          - continuousIntegration
          - schedule
          - pullRequest
          x-ms-enum:
            name: ReleaseReason
            values:
            - value: none
              description: Indicates the release triggered reason not set.
            - value: manual
              description: Indicates the release triggered manually.
            - value: continuousIntegration
              description: Indicates the release triggered by continuous integration.
            - value: schedule
              description: Indicates the release triggered by schedule.
            - value: pullRequest
              description: Indicates the release triggered by PullRequest.
        releaseDefinition:
          $ref: '#/components/schemas/ReleaseDefinitionShallowReference'
      description: ""
    ReleaseRevision:
      type: object
      properties:
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        changedDate:
          type: string
          description: Change date of the revision.
          format: date-time
        changeDetails:
          type: string
          description: Change details of the revision.
        changeType:
          type: string
          description: Change details of the revision. Typically ChangeDetails values
            are Add and Update.
        comment:
          type: string
          description: Comment of the revision.
        definitionSnapshotRevision:
          type: integer
          description: Release ID of which this revision belongs.
          format: int32
        releaseId:
          type: integer
          description: Gets or sets the release ID of which this revision belongs.
          format: int32
      description: ""
    ReleaseSchedule:
      type: object
      properties:
        daysToRelease:
          type: string
          description: Days of the week to release.
          enum:
          - none
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
          - all
          x-ms-enum:
            name: ScheduleDays
            values:
            - value: none
              description: Scheduled day not set.
            - value: monday
              description: Scheduled on Monday.
            - value: tuesday
              description: Scheduled on Tuesday.
            - value: wednesday
              description: Scheduled on Wednesday.
            - value: thursday
              description: Scheduled on Thursday.
            - value: friday
              description: Scheduled on Friday.
            - value: saturday
              description: Scheduled on Saturday.
            - value: sunday
              description: Scheduled on Sunday.
            - value: all
              description: Scheduled on all the days in week.
        jobId:
          type: string
          description: Team Foundation Job Definition Job Id.
          format: uuid
        scheduleOnlyWithChanges:
          type: boolean
          description: Flag to determine if this schedule should only release if the
            associated artifact has been changed or release definition changed.
        startHours:
          type: integer
          description: Local time zone hour to start.
          format: int32
        startMinutes:
          type: integer
          description: Local time zone minute to start.
          format: int32
        timeZoneId:
          type: string
          description: Time zone Id of release schedule, such as 'UTC'.
      description: ""
    ReleaseSettings:
      type: object
      properties:
        complianceSettings:
          $ref: '#/components/schemas/ComplianceSettings'
        retentionSettings:
          $ref: '#/components/schemas/RetentionSettings'
      description: ""
    ReleaseShallowReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          type: integer
          description: Gets the unique identifier of release.
          format: int32
        name:
          type: string
          description: Gets or sets the name of the release.
        url:
          type: string
          description: Gets the REST API url to access the release.
      description: ""
    ReleaseStartEnvironmentMetadata:
      type: object
      properties:
        definitionEnvironmentId:
          type: integer
          description: Sets release definition environment id.
          format: int32
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Sets list of environments variables to be overridden at deployment
            time.
      description: ""
    ReleaseStartMetadata:
      type: object
      properties:
        artifacts:
          type: array
          description: Sets list of artifact to create a release.
          items:
            $ref: '#/components/schemas/ArtifactMetadata'
        definitionId:
          type: integer
          description: Sets definition Id to create a release.
          format: int32
        description:
          type: string
          description: Sets description to create a release.
        environmentsMetadata:
          type: array
          description: Sets list of environments meta data.
          items:
            $ref: '#/components/schemas/ReleaseStartEnvironmentMetadata'
        isDraft:
          type: boolean
          description: Sets 'true' to create release in draft mode, 'false' otherwise.
        manualEnvironments:
          type: array
          description: Sets list of environments to manual as condition.
          items:
            type: string
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        reason:
          type: string
          description: Sets reason to create a release.
          enum:
          - none
          - manual
          - continuousIntegration
          - schedule
          - pullRequest
          x-ms-enum:
            name: ReleaseReason
            values:
            - value: none
              description: Indicates the release triggered reason not set.
            - value: manual
              description: Indicates the release triggered manually.
            - value: continuousIntegration
              description: Indicates the release triggered by continuous integration.
            - value: schedule
              description: Indicates the release triggered by schedule.
            - value: pullRequest
              description: Indicates the release triggered by PullRequest.
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationVariableValue'
          description: Sets list of release variables to be overridden at deployment
            time.
      description: ""
    ReleaseTask:
      type: object
      properties:
        agentName:
          type: string
          description: Agent name on which task executed.
        finishTime:
          type: string
          description: Finish time of the release task.
          format: date-time
        id:
          type: integer
          description: ID of the release task.
          format: int32
        issues:
          type: array
          description: List of issues occurred while execution of task.
          items:
            $ref: '#/components/schemas/Issue'
        lineCount:
          type: integer
          description: Number of lines log release task has.
          format: int64
        logUrl:
          type: string
          description: Log URL of the task.
        name:
          type: string
          description: Name of the task.
        percentComplete:
          type: integer
          description: Task execution complete precent.
          format: int32
        rank:
          type: integer
          description: Rank of the release task.
          format: int32
        resultCode:
          type: string
          description: Result code of the task.
        startTime:
          type: string
          description: ID of the release task.
          format: date-time
        status:
          type: string
          description: Status of release task.
          enum:
          - unknown
          - pending
          - inProgress
          - success
          - failure
          - canceled
          - skipped
          - succeeded
          - failed
          - partiallySucceeded
          x-ms-enum:
            name: TaskStatus
            values:
            - value: unknown
              description: The task does not have the status set.
            - value: pending
              description: The task is in pending status.
            - value: inProgress
              description: The task is currently in progress.
            - value: success
              description: The task completed successfully.
            - value: failure
              description: The task execution failed.
            - value: canceled
              description: The task execution canceled.
            - value: skipped
              description: The task execution skipped.
            - value: succeeded
              description: The task completed successfully.
            - value: failed
              description: The task execution failed.
            - value: partiallySucceeded
              description: The task execution partially succeeded.
        task:
          $ref: '#/components/schemas/WorkflowTaskReference'
        timelineRecordId:
          type: string
          description: Timeline record ID of the release task.
          format: uuid
      description: ""
    ReleaseTaskAttachment:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        createdOn:
          type: string
          description: Data and time when it created.
          format: date-time
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Data and time when modified.
          format: date-time
        name:
          type: string
          description: Name of the task attachment.
        recordId:
          type: string
          description: Record ID of the task.
          format: uuid
        timelineId:
          type: string
          description: Timeline ID of the task.
          format: uuid
        type:
          type: string
          description: Type of task attachment.
      description: ""
    ReleaseTaskLogUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeReleaseEvent'
    ReleaseTasksUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeReleaseEvent'
    ReleaseTriggerBase:
      type: object
      properties:
        triggerType:
          type: string
          description: Type of release trigger.
          enum:
          - undefined
          - artifactSource
          - schedule
          - sourceRepo
          - containerImage
          - package
          - pullRequest
          x-ms-enum:
            name: ReleaseTriggerType
            values:
            - value: undefined
              description: Release trigger type not set.
            - value: artifactSource
              description: Artifact based release trigger.
            - value: schedule
              description: Schedule based release trigger.
            - value: sourceRepo
              description: Source repository based release trigger.
            - value: containerImage
              description: Container image based release trigger.
            - value: package
              description: Package based release trigger.
            - value: pullRequest
              description: Pull request based release trigger.
      description: ""
    ReleaseUpdatedEvent:
      description: ""
      allOf:
      - $ref: '#/components/schemas/RealtimeReleaseEvent'
    ReleaseUpdateMetadata:
      type: object
      properties:
        comment:
          type: string
          description: Sets comment for release.
        keepForever:
          type: boolean
          description: Set 'true' to exclude the release from retention policies.
        manualEnvironments:
          type: array
          description: Sets list of manual environments.
          items:
            type: string
        name:
          type: string
          description: Sets name of the release.
        status:
          type: string
          description: Sets status of the release.
          enum:
          - undefined
          - draft
          - active
          - abandoned
          x-ms-enum:
            name: ReleaseStatus
            values:
            - value: undefined
              description: Release status not set.
            - value: draft
              description: Release is in draft state.
            - value: active
              description: Release status is in active.
            - value: abandoned
              description: Release status is in abandoned.
      description: ""
    ReleaseWorkItemRef:
      type: object
      properties:
        id:
          type: string
          description: Gets or sets the ID.
        state:
          type: string
          description: Gets or sets the state.
        title:
          type: string
          description: Gets or sets the title.
        type:
          type: string
          description: Gets or sets the type.
        url:
          type: string
          description: Gets or sets the workitem url.
      description: ""
    ResourceReference:
      type: object
      properties:
        alias:
          type: string
          description: An alias to be used when referencing the resource.
      description: Represents a reference to a resource.
    RetentionPolicy:
      type: object
      properties:
        daysToKeep:
          type: integer
          description: Indicates the number of days to keep deployment.
          format: int32
      description: ""
    RetentionSettings:
      type: object
      properties:
        daysToKeepDeletedReleases:
          type: integer
          description: Number of days to keep deleted releases.
          format: int32
        defaultEnvironmentRetentionPolicy:
          $ref: '#/components/schemas/EnvironmentRetentionPolicy'
        maximumEnvironmentRetentionPolicy:
          $ref: '#/components/schemas/EnvironmentRetentionPolicy'
      description: ""
    RunOnServerDeployPhase:
      description: ""
      allOf:
      - $ref: '#/components/schemas/DeployPhase'
    ScheduledReleaseTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    ServerDeploymentInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/BaseDeploymentInput'
    ServiceEndpointReference:
      description: Represents a reference to a service endpoint.
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
    SourceIdInput:
      type: object
      properties:
        id:
          type: string
          description: ID of source.
        name:
          type: string
          description: Name of the source.
      description: ""
    SourcePullRequestVersion:
      type: object
      properties:
        iterationId:
          type: string
          description: Pull Request Iteration Id for which the release will publish
            status.
        pullRequestId:
          type: string
          description: Pull Request Id for which the release will publish status.
        pullRequestMergedAt:
          type: string
          description: Date and time of the pull request merge creation. It is required
            to keep timeline record of Releases created by pull request.
          format: date-time
        sourceBranch:
          type: string
          description: Source branch of the Pull Request.
        sourceBranchCommitId:
          type: string
          description: Source branch commit Id of the Pull Request for which the release
            will publish status.
        targetBranch:
          type: string
          description: Target branch of the Pull Request.
      description: ""
    SourceRepoTrigger:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ReleaseTriggerBase'
    SummaryMailSection:
      type: object
      properties:
        htmlContent:
          type: string
          description: Html content of summary mail.
        rank:
          type: integer
          description: Rank of the summary mail.
          format: int32
        sectionType:
          type: string
          description: Summary mail section type. MailSectionType has section types.
          enum:
          - details
          - environments
          - issues
          - testResults
          - workItems
          - releaseInfo
          x-ms-enum:
            name: MailSectionType
            values:
            - value: details
              description: ""
            - value: environments
              description: ""
            - value: issues
              description: ""
            - value: testResults
              description: ""
            - value: workItems
              description: ""
            - value: releaseInfo
              description: ""
        title:
          type: string
          description: Title of the summary mail.
      description: ""
    TagFilter:
      type: object
      properties:
        pattern:
          type: string
          description: Gets or sets the tag filter pattern.
      description: ""
    TaskInputDefinitionBase:
      type: object
      properties:
        aliases:
          type: array
          items:
            type: string
        defaultValue:
          type: string
        groupName:
          type: string
        helpMarkDown:
          type: string
        label:
          type: string
        name:
          type: string
        options:
          type: object
          additionalProperties:
            type: string
        properties:
          type: object
          additionalProperties:
            type: string
        required:
          type: boolean
        type:
          type: string
        validation:
          $ref: '#/components/schemas/TaskInputValidation'
        visibleRule:
          type: string
      description: ""
    TaskInputValidation:
      type: object
      properties:
        expression:
          type: string
          description: Conditional expression
        message:
          type: string
          description: Message explaining how user can correct if validation fails
      description: ""
    TaskOrchestrationPlanGroupReference:
      type: object
      properties:
        planGroup:
          type: string
          description: Gets or sets the plan group.
        projectId:
          type: string
          description: ID of the Project.
          format: uuid
      description: ""
    TaskOrchestrationPlanGroupsStartedEvent:
      type: object
      properties:
        planGroups:
          type: array
          items:
            $ref: '#/components/schemas/TaskOrchestrationPlanGroupReference'
      description: ""
    TaskSourceDefinitionBase:
      type: object
      properties:
        authKey:
          type: string
        endpoint:
          type: string
        keySelector:
          type: string
        selector:
          type: string
        target:
          type: string
      description: ""
    TfvcArtifactDownloadInput:
      description: ""
      allOf:
      - $ref: '#/components/schemas/ArtifactDownloadInputBase'
    TimeZone:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the time zone.
        id:
          type: string
          description: Id of the time zone.
      description: ""
    TimeZoneList:
      type: object
      properties:
        utcTimeZone:
          $ref: '#/components/schemas/TimeZone'
        validTimeZones:
          type: array
          description: List of valid timezones.
          items:
            $ref: '#/components/schemas/TimeZone'
      description: ""
    VariableGroup:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          type: string
          description: Gets date on which it got created.
          format: date-time
        description:
          type: string
          description: Gets or sets description.
        id:
          type: integer
          description: Gets the unique identifier of this field.
          format: int32
        isShared:
          type: boolean
          description: Denotes if a variable group is shared with other project or
            not.
        modifiedBy:
          $ref: '#/components/schemas/IdentityRef'
        modifiedOn:
          type: string
          description: Gets date on which it got modified.
          format: date-time
        name:
          type: string
          description: Gets or sets name.
        providerData:
          $ref: '#/components/schemas/VariableGroupProviderData'
        type:
          type: string
          description: Gets or sets type.
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariableValue'
          description: Gets and sets the dictionary of variables.
      description: ""
    VariableGroupProviderData:
      type: object
      description: ""
    VariableValue:
      type: object
      properties:
        isSecret:
          type: boolean
          description: Gets or sets as the variable is secret or not.
        value:
          type: string
          description: Gets or sets the value.
      description: ""
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
    WorkflowTask:
      type: object
      properties:
        alwaysRun:
          type: boolean
          description: Gets or sets as the task always run or not.
        condition:
          type: string
          description: Gets or sets the task condition.
        continueOnError:
          type: boolean
          description: Gets or sets as the task continue run on error or not.
        definitionType:
          type: string
          description: Gets or sets the task definition type. Example:- 'Agent', DeploymentGroup',
            'Server' or 'ServerGate'.
        enabled:
          type: boolean
          description: Gets or sets as the task enabled or not.
        environment:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the task environment variables.
        inputs:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the task inputs.
        name:
          type: string
          description: Gets or sets the name of the task.
        overrideInputs:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the task override inputs.
        refName:
          type: string
          description: Gets or sets the reference name of the task.
        taskId:
          type: string
          description: Gets or sets the ID of the task.
          format: uuid
        timeoutInMinutes:
          type: integer
          description: Gets or sets the task timeout.
          format: int32
        version:
          type: string
          description: Gets or sets the version of the task.
      description: ""
    WorkflowTaskReference:
      type: object
      properties:
        id:
          type: string
          description: Task identifier.
          format: uuid
        name:
          type: string
          description: Name of the task.
        version:
          type: string
          description: Version of the task.
      description: ""
    YamlFileSource:
      type: object
      properties:
        sourceReference:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/YamlSourceReference'
          description: Gets or sets definition reference. e.g. {"project":{"id":"fed755ea-49c5-4399-acea-fd5b5aa90a6c","name":"myProject"},"definition":{"id":"1","name":"mybuildDefinition"},"connection":{"id":"1","name":"myConnection"}}
        type:
          type: string
          enum:
          - none
          - tfsGit
          x-ms-enum:
            name: YamlFileSourceTypes
            values:
            - value: none
              description: ""
            - value: tfsGit
              description: ""
      description: ""
    YamlPipelineProcess:
      description: ""
      allOf:
      - $ref: '#/components/schemas/PipelineProcess'
    YamlPipelineProcessResources:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpointReference'
        queues:
          type: array
          items:
            $ref: '#/components/schemas/AgentPoolQueueReference'
      description: ""
    YamlSourceReference:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      description: ""
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '5.1' to use
        this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '5.1-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.2:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '5.1-preview.2'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.3:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '5.1-preview.3'
        to use this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.6:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '5.1-preview.6'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.release: Grants the ability to read release artifacts, including folders,
              releases, release definitions and release environment.
            vso.release_execute: Grants the ability to read and update release artifacts,
              including folders, releases, release definitions and release environment,
              and the ability to queue a new release.
            vso.release_manage: Grants the ability to read, update and delete release
              artifacts, including folders, releases, release definitions and release
              environment and the ability to queue and approve a new release.
x-ms-vss-area: Release
x-ms-vss-resource-area-id: efc2f575-36ef-48e9-b672-0c6fb4a48ac5
x-ms-paths:
  /{organization}/{project}/_apis/release/releases/{releaseId}?:
    get:
      tags:
      - Releases
      x-ms-docs-override-version: "5.1"
      x-ms-vss-resource: releases
      x-ms-vss-method: GetRelease
      description: Get a Release
      operationId: Releases_Get Release
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: releaseId
        description: Id of the release.
        required: true
        type: integer
        format: int32
      - in: query
        name: approvalFilters
        description: A filter which would allow fetching approval steps selectively
          based on whether it is automated, or manual. This would also decide whether
          we should fetch pre and post approval snapshots. Assumes All by default
        required: false
        type: string
        enum:
        - none
        - manualApprovals
        - automatedApprovals
        - approvalSnapshots
        - all
        x-ms-enum:
          name: ApprovalFilters
          values:
          - value: none
            description: No approvals or approval snapshots.
          - value: manualApprovals
            description: Manual approval steps but no approval snapshots (Use with
              ApprovalSnapshots for snapshots).
          - value: automatedApprovals
            description: Automated approval steps but no approval snapshots (Use with
              ApprovalSnapshots for snapshots).
          - value: approvalSnapshots
            description: No approval steps, but approval snapshots (Use with either
              ManualApprovals or AutomatedApprovals for approval steps).
          - value: all
            description: All approval steps and approval snapshots.
      - in: query
        name: propertyFilters
        description: A comma-delimited list of extended properties to be retrieved.
          If set, the returned Release will contain values for the specified property
          Ids (if they exist). If not set, properties will not be included.
        required: false
        type: string
        format: array (string)
      - in: query
        name: $expand
        description: A property that should be expanded in the release.
        required: false
        type: string
        enum:
        - none
        - tasks
        x-ms-enum:
          name: SingleReleaseExpands
          values:
          - value: none
            description: Return top level properties of object.
          - value: tasks
            description: Expand release with tasks.
      - in: query
        name: $topGateRecords
        description: Number of release gate records to get. Default is 5.
        required: false
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Release'
      security:
      - oauth2:
        - vso.release
      x-ms-examples:
        ?
        : $ref: ./httpExamples/releases/GET__GetARelease.json
