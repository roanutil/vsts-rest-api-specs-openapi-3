openapi: 3.0.1
info:
  title: Graph
  description: ""
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  contact:
    name: nugetvss
    email: nugetvss@microsoft.com
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  version: "7.0"
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://vssps.dev.azure.com/
security:
- accessToken: []
tags:
- name: Avatars
- name: Descriptors
- name: Groups
- name: Memberships
- name: Membership States
- name: Provider Info
- name: Request Access
- name: Storage Keys
- name: Subject Lookup
- name: Subject Query
- name: Users
paths:
  /{organization}/_apis/graph/descriptors/{storageKey}:
    get:
      tags:
      - Descriptors
      description: Resolve a storage key to a descriptor
      operationId: Descriptors_Get
      parameters:
      - name: storageKey
        in: path
        description: Storage key of the subject (user, group, scope, etc.) to resolve
        required: true
        schema:
          type: string
          format: uuid
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDescriptorResult'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: descriptors
      x-ms-vss-method: GetDescriptor
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Descriptors/GetDescriptorById.json
  /{organization}/_apis/graph/groups:
    get:
      tags:
      - Groups
      description: |-
        Gets a list of all groups in the current scope (usually organization or account).

        The optional parameters are used to filter down the returned results. Returned results are in no guaranteed order.

         Since the list of groups may be large, results are returned in pages of groups.  If there are more results
         than can be returned in a single page, the result set will contain a continuation token for retrieval of the
         next set of results.
      operationId: Groups_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: scopeDescriptor
        in: query
        description: Specify a non-default scope (collection, project) to search for
          groups.
        schema:
          type: string
      - name: subjectTypes
        in: query
        description: A comma separated list of user subject subtypes to reduce the
          retrieved results, e.g. Microsoft.IdentityModel.Claims.ClaimsIdentity
        schema:
          type: string
          format: array (string)
      - name: continuationToken
        in: query
        description: An opaque data blob that allows the next page of data to resume
          immediately after where the previous page ended. The only reliable way to
          know if there is more data left is the presence of a continuation token.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          headers:
            X-MS-ContinuationToken:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphGroup'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: groups
      x-ms-vss-method: ListGroups
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Groups/GetAllGroups.json
    post:
      tags:
      - Groups
      description: |-
        Create a new Azure DevOps group or materialize an existing AAD group.

        The body of the request must be a derived type of GraphGroupCreationContext:
          * GraphGroupVstsCreationContext - Create a new Azure DevOps group that is not backed by an external provider.
          * GraphGroupMailAddressCreationContext - Create a new group using the mail address as a reference to an existing group from an external AD or AAD backed provider.
          * GraphGroupOriginIdCreationContext - Create a new group using the OriginID as a reference to a group from an external AD or AAD backed provider.

         Optionally, you can add the newly created group as a member of an existing Azure DevOps group and/or specify a custom storage key for the group.
      operationId: Groups_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: scopeDescriptor
        in: query
        description: A descriptor referencing the scope (collection, project) in which
          the group should be created. If omitted, will be created in the scope of
          the enclosing account or organization. Valid only for VSTS groups.
        schema:
          type: string
      - name: groupDescriptors
        in: query
        description: A comma separated list of descriptors referencing groups you
          want the graph group to join
        schema:
          type: string
          format: array (string)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The subset of the full graph group used to uniquely find the
          graph subject in an external provider.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphGroupCreationContext'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphGroup'
      security:
      - oauth2:
        - vso.graph_manage
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: groups
      x-ms-vss-method: CreateGroup
      x-ms-preview: true
      x-ms-examples:
        Create a Group at the account level:
          $ref: ./httpExamples/Groups/CreateGroup.json
        Create a Group at the project level:
          $ref: ./httpExamples/Groups/CreateGroupInProject.json
        Add an AAD Group by OID:
          $ref: ./httpExamples/Groups/MaterializeAADGroupByOID.json
        Add an AAD Group as member of a group:
          $ref: ./httpExamples/Groups/MaterializeAADGroupByOIDAsMember.json
        Add an AAD Group with a custom storage key:
          $ref: ./httpExamples/Groups/MaterializeAADGroupByOIDWithStorageKey.json
      x-codegen-request-body-name: body
  /{organization}/_apis/graph/groups/{groupDescriptor}:
    get:
      tags:
      - Groups
      description: |-
        Get a group by its descriptor.

        The group will be returned even if it has been deleted from the account or has had all its memberships
        deleted.
      operationId: Groups_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: groupDescriptor
        in: path
        description: The descriptor of the desired graph group.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphGroup'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: groups
      x-ms-vss-method: GetGroup
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Groups/GetGroup-AddRemoveAADGroupByOID.json
    delete:
      tags:
      - Groups
      description: |-
        Removes an Azure DevOps group from all of its parent groups.

        The group will still be visible, but membership
         checks for the group, and all descendants which derive membership through it, will return false.‚Äù
      operationId: Groups_Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: groupDescriptor
        in: path
        description: The descriptor of the group to delete.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.graph_manage
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: groups
      x-ms-vss-method: DeleteGroup
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Groups/DeleteGroup.json
    patch:
      tags:
      - Groups
      description: |-
        Update the properties of an Azure DevOps group.

        Currently limited to only changing the description and account name.
      operationId: Groups_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: groupDescriptor
        in: path
        description: The descriptor of the group to modify.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The JSON+Patch document containing the fields to alter.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphGroup'
      security:
      - oauth2:
        - vso.graph_manage
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: groups
      x-ms-vss-method: UpdateGroup
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Groups/UpdateGroup.json
      x-codegen-request-body-name: body
  /{organization}/_apis/graph/Memberships/{subjectDescriptor}:
    get:
      tags:
      - Memberships
      description: |-
        Get all the memberships where this descriptor is a member in the relationship.

        The default value for direction is 'up' meaning return all memberships where the subject is a member (e.g. all groups the subject is a member of).
         Alternatively, passing the direction as 'down' will return all memberships where the subject is a container (e.g. all members of the subject group).
      operationId: Memberships_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: subjectDescriptor
        in: path
        description: Fetch all direct memberships of this descriptor.
        required: true
        schema:
          type: string
      - name: direction
        in: query
        description: Defaults to Up.
        schema:
          type: string
          enum:
          - unknown
          - down
          - up
          x-ms-enum:
            name: GraphTraversalDirection
            values:
            - value: unknown
              description: ""
            - value: down
              description: ""
            - value: up
              description: ""
        x-ms-enum:
          name: GraphTraversalDirection
          values:
          - value: unknown
            description: ""
          - value: down
            description: ""
          - value: up
            description: ""
      - name: depth
        in: query
        description: The maximum number of edges to traverse up or down the membership
          tree. Currently the only supported value is '1'.
        schema:
          type: integer
          format: int32
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphMembership'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: membershipsBatch
      x-ms-vss-method: ListMemberships
      x-ms-preview: true
      x-ms-examples:
        All members of a group:
          $ref: ./httpExamples/MembershipsBatch/BatchGetMembershipsGroupDown.json
        All groups for a user:
          $ref: ./httpExamples/MembershipsBatch/BatchGetMembershipsUserUp.json
        All groups for a group:
          $ref: ./httpExamples/MembershipsBatch/BatchGetMembershipsVSTSGroupUp.json
  /{organization}/_apis/graph/memberships/{subjectDescriptor}/{containerDescriptor}:
    get:
      tags:
      - Memberships
      description: Get a membership relationship between a container and subject.
      operationId: Memberships_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: subjectDescriptor
        in: path
        description: A descriptor to the child subject in the relationship.
        required: true
        schema:
          type: string
      - name: containerDescriptor
        in: path
        description: A descriptor to the container in the relationship.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphMembership'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: memberships
      x-ms-vss-method: GetMembership
      x-ms-preview: true
      x-ms-examples:
        For a User:
          $ref: ./httpExamples/Memberships/GetMembershipUser.json
        For a Group:
          $ref: ./httpExamples/Memberships/GetMembershipVSTSGroup.json
    put:
      tags:
      - Memberships
      description: Create a new membership between a container and subject.
      operationId: Memberships_Add
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: subjectDescriptor
        in: path
        description: A descriptor to a group or user that can be the child subject
          in the relationship.
        required: true
        schema:
          type: string
      - name: containerDescriptor
        in: path
        description: A descriptor to a group that can be the container in the relationship.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphMembership'
      security:
      - oauth2:
        - vso.graph_manage
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: memberships
      x-ms-vss-method: AddMembership
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Memberships/CreateMembershipVSTSGroup.json
    delete:
      tags:
      - Memberships
      description: Deletes a membership between a container and subject.
      operationId: Memberships_Remove Membership
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: subjectDescriptor
        in: path
        description: A descriptor to a group or user that is the child subject in
          the relationship.
        required: true
        schema:
          type: string
      - name: containerDescriptor
        in: path
        description: A descriptor to a group that is the container in the relationship.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.graph_manage
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: memberships
      x-ms-vss-method: RemoveMembership
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Memberships/DeleteMembershipUser.json
    head:
      tags:
      - Memberships
      description: Check to see if a membership relationship between a container and
        subject exists.
      operationId: Memberships_Check Membership Existence
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: subjectDescriptor
        in: path
        description: The group or user that is a child subject of the relationship.
        required: true
        schema:
          type: string
      - name: containerDescriptor
        in: path
        description: The group that is the container in the relationship.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: The operation succeeded. Membership exists.
          content: {}
        404:
          description: Membership does not exist.
          content: {}
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: memberships
      x-ms-vss-method: CheckMembershipExistence
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Memberships/CheckMembershipExistenceUser.json
  /{organization}/_apis/graph/membershipstates/{subjectDescriptor}:
    get:
      tags:
      - Membership States
      description: Check whether a subject is active or inactive.
      operationId: Membership States_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: subjectDescriptor
        in: path
        description: Descriptor of the subject (user, group, scope, etc.) to check
          state of
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphMembershipState'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: membershipStates
      x-ms-vss-method: GetMembershipState
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/MembershipStates/GetMembershipStateBySubjectDescriptor.json
  /{organization}/_apis/graph/requestaccess:
    post:
      tags:
      - Request Access
      operationId: Request Access_Request Access
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JToken'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: requestAccess
      x-ms-vss-method: RequestAccess
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/_apis/graph/storagekeys/{subjectDescriptor}:
    get:
      tags:
      - Storage Keys
      description: Resolve a descriptor to a storage key.
      operationId: Storage Keys_Get
      parameters:
      - name: subjectDescriptor
        in: path
        required: true
        schema:
          type: string
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphStorageKeyResult'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: storageKeys
      x-ms-vss-method: GetStorageKey
      x-ms-examples:
        ?
        : $ref: ./httpExamples/StorageKeys/GetStorageKeyBySubjectDescriptor.json
  /{organization}/_apis/graph/subjectlookup:
    post:
      tags:
      - Subject Lookup
      description: Resolve descriptors to users, groups or scopes (Subjects) in a
        batch.
      operationId: Subject Lookup_Lookup Subjects
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: A list of descriptors that specifies a subset of subjects to
          retrieve. Each descriptor uniquely identifies the subject across all instance
          scopes, but only at a single point in time.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphSubjectLookup'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/GraphSubject'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: subjectLookup
      x-ms-vss-method: LookupSubjects
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/SubjectLookup/LookupSubjects.json
      x-codegen-request-body-name: body
  /{organization}/_apis/graph/subjectquery:
    post:
      tags:
      - Subject Query
      description: Search for Azure Devops users, or/and groups. Results will be returned
        in a batch with no more than 100 graph subjects.
      operationId: Subject Query_Query
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: 'The query that we''ll be using to search includes the following:
          Query: the search term. The search will be prefix matching only. SubjectKind:
          "User" or "Group" can be specified, both or either ScopeDescriptor: Non-default
          scope can be specified, i.e. project scope descriptor'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphSubjectQuery'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphSubject'
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: subjectQuery
      x-ms-vss-method: QuerySubjects
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/_apis/graph/Subjects/{subjectDescriptor}/avatars:
    get:
      tags:
      - Avatars
      operationId: Avatars_Get
      parameters:
      - name: subjectDescriptor
        in: path
        required: true
        schema:
          type: string
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: size
        in: query
        schema:
          type: string
          enum:
          - small
          - medium
          - large
          x-ms-enum:
            name: AvatarSize
            values:
            - value: small
              description: ""
            - value: medium
              description: ""
            - value: large
              description: ""
        x-ms-enum:
          name: AvatarSize
          values:
          - value: small
            description: ""
          - value: medium
            description: ""
          - value: large
            description: ""
      - name: format
        in: query
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: avatars
      x-ms-vss-method: GetAvatar
    put:
      tags:
      - Avatars
      operationId: Avatars_Set Avatar
      parameters:
      - name: subjectDescriptor
        in: path
        required: true
        schema:
          type: string
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Avatar'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: avatars
      x-ms-vss-method: SetAvatar
      x-codegen-request-body-name: body
    delete:
      tags:
      - Avatars
      operationId: Avatars_Delete
      parameters:
      - name: subjectDescriptor
        in: path
        required: true
        schema:
          type: string
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: avatars
      x-ms-vss-method: DeleteAvatar
  /{organization}/_apis/graph/users:
    get:
      tags:
      - Users
      description: |-
        Get a list of all users in a given scope.

        Since the list of users may be large, results are returned in pages of users.  If there are more results
         than can be returned in a single page, the result set will contain a continuation token for retrieval of the
         next set of results.
      operationId: Users_List
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: subjectTypes
        in: query
        description: A comma separated list of user subject subtypes to reduce the
          retrieved results, e.g. msa‚Äô, ‚Äòaad‚Äô, ‚Äòsvc‚Äô (service identity), ‚Äòimp‚Äô (imported
          identity), etc.
        schema:
          type: string
          format: array (string)
      - name: continuationToken
        in: query
        description: An opaque data blob that allows the next page of data to resume
          immediately after where the previous page ended. The only reliable way to
          know if there is more data left is the presence of a continuation token.
        schema:
          type: string
      - name: scopeDescriptor
        in: query
        description: Specify a non-default scope (collection, project) to search for
          users.
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          headers:
            X-MS-ContinuationToken:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphUser'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: users
      x-ms-vss-method: ListUsers
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Users/GetAllUsers.json
    post:
      tags:
      - Users
      description: |-
        Materialize an existing AAD or MSA user into the VSTS account.

        NOTE: Created users are not active in an account unless they have been explicitly assigned a parent group at creation time or have signed in
          and been autolicensed through AAD group memberships.

         Adding a user to an account is required before the user can be added to VSTS groups or assigned an asset.

         The body of the request must be a derived type of GraphUserCreationContext:
          * GraphUserMailAddressCreationContext - Create a new user using the mail address as a reference to an existing user from an external AD or AAD backed provider.
          * GraphUserOriginIdCreationContext - Create a new user using the OriginID as a reference to an existing user from an external AD or AAD backed provider.
          * GraphUserPrincipalNameCreationContext - Create a new user using the principal name as a reference to an existing user from an external AD or AAD backed provider.

         If the user to be added corresponds to a user that was previously deleted, then that user will be restored.

         Optionally, you can add the newly created user as a member of an existing VSTS group and/or specify a custom storage key for the user.
      operationId: Users_Create
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: groupDescriptors
        in: query
        description: A comma separated list of descriptors of groups you want the
          graph user to join
        schema:
          type: string
          format: array (string)
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The subset of the full graph user used to uniquely find the graph
          subject in an external provider.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphUserCreationContext'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphUser'
      security:
      - oauth2:
        - vso.graph_manage
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: users
      x-ms-vss-method: CreateUser
      x-ms-preview: true
      x-ms-examples:
        Add an AAD user by UPN:
          $ref: ./httpExamples/Users/CreateUserAAD.json
        Add a MSA user by UPN:
          $ref: ./httpExamples/Users/CreateUserMSA.json
        Add an AAD user by OID:
          $ref: ./httpExamples/Users/MaterializeAADUserByOID.json
        Add an AAD user as member of a group:
          $ref: ./httpExamples/Users/MaterializeAADUserByOIDAsMember.json
        Add an AAD user with a custom storage key:
          $ref: ./httpExamples/Users/MaterializeAADUserByOIDWithStorageKey.json
      x-codegen-request-body-name: body
  /{organization}/_apis/graph/users/{userDescriptor}:
    get:
      tags:
      - Users
      description: Get a user by its descriptor.
      operationId: Users_Get
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: userDescriptor
        in: path
        description: The descriptor of the desired user.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphUser'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: users
      x-ms-vss-method: GetUser
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Users/GetUserAAD.json
    delete:
      tags:
      - Users
      description: |-
        Disables a user.

        The user will still be visible, but membership checks for the user will return false.‚Äù
      operationId: Users_Delete
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: userDescriptor
        in: path
        description: The descriptor of the user to delete.
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
      security:
      - oauth2:
        - vso.graph_manage
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: users
      x-ms-vss-method: DeleteUser
      x-ms-preview: true
      x-ms-examples:
        ?
        : $ref: ./httpExamples/Users/DeleteUserAAD.json
    patch:
      tags:
      - Users
      description: Map an existing user to a different identity
      operationId: Users_Update
      parameters:
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
      - name: userDescriptor
        in: path
        description: the descriptor of the user to update
        required: true
        schema:
          type: string
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0-preview.1'
          to use this version of the api.
        required: true
        schema:
          type: string
      requestBody:
        description: The subset of the full graph user used to uniquely find the graph
          subject in an external provider.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphUserUpdateContext'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphUser'
      x-ms-docs-override-version: 7.0-preview.1
      x-ms-vss-resource: users
      x-ms-vss-method: UpdateUser
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/_apis/graph/Users/{userDescriptor}/providerinfo:
    get:
      tags:
      - Provider Info
      operationId: Provider Info_Get
      parameters:
      - name: userDescriptor
        in: path
        required: true
        schema:
          type: string
      - name: organization
        in: path
        description: The name of the Azure DevOps organization.
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - name: api-version
        in: query
        description: Version of the API to use.  This should be set to '7.0' to use
          this version of the api.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphProviderInfo'
      security:
      - oauth2:
        - vso.graph
      x-ms-docs-override-version: "7.0"
      x-ms-vss-resource: providerInfo
      x-ms-vss-method: GetProviderInfo
components:
  schemas:
    Avatar:
      type: object
      properties:
        isAutoGenerated:
          type: boolean
        size:
          type: string
          enum:
          - small
          - medium
          - large
          x-ms-enum:
            name: AvatarSize
            values:
            - value: small
              description: ""
            - value: medium
              description: ""
            - value: large
              description: ""
        timeStamp:
          type: string
          format: date-time
        value:
          type: array
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
      description: ""
    GraphCachePolicies:
      type: object
      properties:
        cacheSize:
          type: integer
          description: Size of the cache
          format: int32
      description: ""
    GraphDescriptorResult:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        value:
          type: string
      description: Subject descriptor of a Graph entity
    GraphFederatedProviderData:
      type: object
      properties:
        accessToken:
          type: string
          description: The access token that can be used to communicated with the
            federated provider on behalf on the target identity, if we were able to
            successfully acquire one, otherwise <code>null</code>, if we were not.
        providerName:
          type: string
          description: The name of the federated provider, e.g. "github.com".
        subjectDescriptor:
          type: string
          description: The descriptor of the graph subject to which this federated
            provider data corresponds.
        version:
          type: integer
          description: The version number of this federated provider data, which corresponds
            to when it was last updated. Can be used to prevent returning stale provider
            data from the cache when the caller is aware of a newer version, such
            as to prevent local cache poisoning from a remote cache or store. This
            is the app layer equivalent of the data layer sequence ID.
          format: int64
      description: Represents a set of data used to communicate with a federated provider
        on behalf of a particular user.
    GraphGlobalExtendedPropertyBatch:
      type: object
      properties:
        propertyNameFilters:
          type: array
          items:
            type: string
        subjectDescriptors:
          type: array
          items:
            type: string
      description: ""
    GraphGroup:
      description: Graph group entity
      allOf:
      - $ref: '#/components/schemas/GraphMember'
    GraphGroupCreationContext:
      type: object
      properties:
        storageKey:
          type: string
          description: 'Optional: If provided, we will use this identifier for the
            storage key of the created group'
          format: uuid
      description: Do not attempt to use this type to create a new group. This type
        does not contain sufficient fields to create a new group.
    GraphGroupMailAddressCreationContext:
      description: Use this type to create a new group using the mail address as a
        reference to an existing group from an external AD or AAD backed provider.
        This is the subset of GraphGroup fields required for creation of a group for
        the AAD and AD use case.
      allOf:
      - $ref: '#/components/schemas/GraphGroupCreationContext'
    GraphGroupOriginIdCreationContext:
      description: Use this type to create a new group using the OriginID as a reference
        to an existing group from an external AD or AAD backed provider. This is the
        subset of GraphGroup fields required for creation of a group for the AD and
        AAD use case.
      allOf:
      - $ref: '#/components/schemas/GraphGroupCreationContext'
    GraphGroupVstsCreationContext:
      description: Use this type to create a new Vsts group that is not backed by
        an external provider.
      allOf:
      - $ref: '#/components/schemas/GraphGroupCreationContext'
    GraphMember:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubject'
    GraphMembership:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        containerDescriptor:
          type: string
        memberDescriptor:
          type: string
      description: Relationship between a container and a member
    GraphMembershipState:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        active:
          type: boolean
          description: When true, the membership is active
      description: Status of a Graph membership (active/inactive)
    GraphMembershipTraversal:
      type: object
      properties:
        incompletenessReason:
          type: string
          description: Reason why the subject could not be traversed completely
        isComplete:
          type: boolean
          description: When true, the subject is traversed completely
        subjectDescriptor:
          type: string
          description: The traversed subject descriptor
        traversedSubjectIds:
          type: array
          description: Subject descriptor ids of the traversed members
          items:
            type: string
            format: uuid
        traversedSubjects:
          type: array
          description: Subject descriptors of the traversed members
          items:
            type: string
      description: ""
    GraphProviderInfo:
      type: object
      properties:
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Organizations.
        domain:
          type: string
          description: This represents the name of the container of origin for a graph
            member. (For MSA this is "Windows Live ID", for AAD the tenantID of the
            directory.)
        origin:
          type: string
          description: 'The type of source provider for the origin identifier (ex:
            "aad", "msa")'
        originId:
          type: string
          description: The unique identifier from the system of origin. (For MSA this
            is the PUID in hex notation, for AAD this is the object id.)
      description: Who is the provider for this user and what is the identifier and
        domain that is used to uniquely identify the user.
    GraphScope:
      description: Container where a graph entity is defined (organization, project,
        team)
      allOf:
      - $ref: '#/components/schemas/GraphSubject'
    GraphScopeCreationContext:
      type: object
      properties:
        adminGroupDescription:
          type: string
          description: Set this field to override the default description of this
            scope's admin group.
        adminGroupName:
          type: string
          description: All scopes have an Administrator Group that controls access
            to the contents of the scope. Set this field to use a non-default group
            name for that administrators group.
        creatorId:
          type: string
          description: Set this optional field if this scope is created on behalf
            of a user other than the user making the request. This should be the Id
            of the user that is not the requester.
          format: uuid
        name:
          type: string
          description: The scope must be provided with a unique name within the parent
            scope. This means the created scope can have a parent or child with the
            same name, but no siblings with the same name.
        scopeType:
          type: string
          description: The type of scope being created.
          enum:
          - generic
          - serviceHost
          - teamProject
          x-ms-enum:
            name: GroupScopeType
            values:
            - value: generic
              description: ""
            - value: serviceHost
              description: ""
            - value: teamProject
              description: ""
        storageKey:
          type: string
          description: An optional ID that uniquely represents the scope within it's
            parent scope. If this parameter is not provided, Vsts will generate on
            automatically.
          format: uuid
      description: This type is the subset of fields that can be provided by the user
        to create a Vsts scope. Scope creation is currently limited to internal back-compat
        scenarios. End users that attempt to create a scope with this API will fail.
    GraphStorageKeyResult:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        value:
          type: string
          format: uuid
      description: Storage key of a Graph entity
    GraphSubject:
      description: Top-level graph entity
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
    GraphSubjectBase:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          type: string
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Organizations.
        displayName:
          type: string
          description: This is the non-unique display name of the graph subject. To
            change this field, you must alter its value in the source provider.
        url:
          type: string
          description: This url is the full route to the source resource of this graph
            subject.
      description: ""
    GraphSubjectLookup:
      type: object
      properties:
        lookupKeys:
          type: array
          items:
            $ref: '#/components/schemas/GraphSubjectLookupKey'
      description: Batching of subjects to lookup using the Graph API
    GraphSubjectLookupKey:
      type: object
      properties:
        descriptor:
          type: string
      description: ""
    GraphSubjectQuery:
      type: object
      properties:
        query:
          type: string
          description: Search term to search for Azure Devops users or/and groups
        scopeDescriptor:
          type: string
          description: Optional parameter. Specify a non-default scope (collection,
            project) to search for users or groups within the scope.
        subjectKind:
          type: array
          description: '"User" or "Group" can be specified, both or either'
          items:
            type: string
      description: Subject to search using the Graph API
    GraphSystemSubject:
      description: ""
      allOf:
      - $ref: '#/components/schemas/GraphSubject'
    GraphUser:
      description: Graph user entity
      allOf:
      - $ref: '#/components/schemas/GraphMember'
    GraphUserCreationContext:
      type: object
      properties:
        storageKey:
          type: string
          description: 'Optional: If provided, we will use this identifier for the
            storage key of the created user'
          format: uuid
      description: Do not attempt to use this type to create a new user. Use one of
        the subclasses instead. This type does not contain sufficient fields to create
        a new user.
    GraphUserMailAddressCreationContext:
      description: Use this type to create a new user using the mail address as a
        reference to an existing user from an external AD or AAD backed provider.
        This is the subset of GraphUser fields required for creation of a GraphUser
        for the AD and AAD use case when looking up the user by its mail address in
        the backing provider.
      allOf:
      - $ref: '#/components/schemas/GraphUserCreationContext'
    GraphUserOriginIdCreationContext:
      description: Use this type to create a new user using the OriginID as a reference
        to an existing user from an external AD or AAD backed provider. This is the
        subset of GraphUser fields required for creation of a GraphUser for the AD
        and AAD use case when looking up the user by its unique ID in the backing
        provider.
      allOf:
      - $ref: '#/components/schemas/GraphUserCreationContext'
    GraphUserOriginIdUpdateContext:
      description: Use this type to update an existing user using the OriginID as
        a reference to an existing user from an external AD or AAD backed provider.
        This is the subset of GraphUser fields required for creation of a GraphUser
        for the AD and AAD use case when looking up the user by its unique ID in the
        backing provider.
      allOf:
      - $ref: '#/components/schemas/GraphUserUpdateContext'
    GraphUserPrincipalNameCreationContext:
      description: Use this type to create a new user using the principal name as
        a reference to an existing user from an external AD or AAD backed provider.
        This is the subset of GraphUser fields required for creation of a GraphUser
        for the AD and AAD use case when looking up the user by its principal name
        in the backing provider.
      allOf:
      - $ref: '#/components/schemas/GraphUserCreationContext'
    GraphUserUpdateContext:
      type: object
      description: Do not attempt to use this type to update user. Use one of the
        subclasses instead. This type does not contain sufficient fields to create
        a new user.
    JsonPatchDocument:
      description: The JSON model for JSON Patch Operations
      allOf:
      - type: array
        items:
          $ref: '#/components/schemas/JsonPatchOperation'
    JsonPatchOperation:
      type: object
      properties:
        from:
          type: string
          description: The path to copy from for the Move/Copy operation.
        op:
          type: string
          description: The patch operation
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          x-ms-enum:
            name: Operation
            values:
            - value: add
              description: ""
            - value: remove
              description: ""
            - value: replace
              description: ""
            - value: move
              description: ""
            - value: copy
              description: ""
            - value: test
              description: ""
        path:
          type: string
          description: The path for the operation. In the case of an array, a zero
            based index can be used to specify the position in the array (e.g. /biscuits/0/name).
            The "-" character can be used instead of an index to insert at the end
            of the array (e.g. /biscuits/-).
        value:
          type: object
          properties: {}
          description: The value for the operation. This is either a primitive or
            a JToken.
      description: The JSON model for a JSON Patch operation
    JToken:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/JToken'
        hasValues:
          type: boolean
          description: Gets a value indicating whether this token has child tokens.
        item:
          $ref: '#/components/schemas/JToken'
        last:
          $ref: '#/components/schemas/JToken'
        next:
          $ref: '#/components/schemas/JToken'
        parent:
          type: string
          description: Gets or sets the parent.
          format: JContainer
        path:
          type: string
          description: Gets the path of the JSON token.
        previous:
          $ref: '#/components/schemas/JToken'
        root:
          $ref: '#/components/schemas/JToken'
        type:
          type: string
          description: Gets the node type for this JToken.
          format: JTokenType
      description: Represents an abstract JSON token.
    PagedGraphGroups:
      type: object
      properties:
        continuationToken:
          type: array
          description: This will be non-null if there is another page of data. There
            will never be more than one continuation token returned by a request.
          items:
            type: string
        graphGroups:
          type: array
          description: The enumerable list of groups found within a page.
          items:
            $ref: '#/components/schemas/GraphGroup'
      description: ""
    PagedGraphUsers:
      type: object
      properties:
        continuationToken:
          type: array
          description: This will be non-null if there is another page of data. There
            will never be more than one continuation token returned by a request.
          items:
            type: string
        graphUsers:
          type: array
          description: The enumerable set of users found within a page.
          items:
            $ref: '#/components/schemas/GraphUser'
      description: ""
    ReferenceLinks:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: The readonly view of the links.  Because Reference links are
            readonly, we only want to expose them as read only.
      description: The class to represent a collection of REST reference links.
    RequestAccessPayLoad:
      type: object
      properties:
        message:
          type: string
        projectUri:
          type: string
        urlRequested:
          type: string
      description: ""
    VssJsonCollectionWrapper:
      description: This class is used to serialized collections as a single JSON object
        on the wire, to avoid serializing JSON arrays directly to the client, which
        can be a security hole
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
    VssJsonCollectionWrapperBase:
      type: object
      properties:
        count:
          type: integer
          format: int32
      description: ""
  parameters:
    api-Version:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0' to use
        this version of the api.
      required: true
      schema:
        type: string
    api-Version-preview.1:
      name: api-version
      in: query
      description: Version of the API to use.  This should be set to '7.0-preview.1'
        to use this version of the api.
      required: true
      schema:
        type: string
  securitySchemes:
    accessToken:
      type: http
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
          scopes:
            vso.graph: Grants the ability to read user, group, scope and group membership
              information
            vso.graph_manage: Grants the ability to read user, group, scope and group
              membership information, and to add users, groups and manage group memberships
x-ms-vss-area: Graph
x-ms-vss-resource-area-id: bb1e7ec9-e901-4b68-999a-de7012b920f8
